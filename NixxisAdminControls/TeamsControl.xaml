<UserControl x:Class="Nixxis.Client.Admin.TeamsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:nixxis="clr-namespace:Nixxis.Client.Controls;assembly=NixxisWpfControls"
             xmlns:local="clr-namespace:Nixxis.Client.Admin"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:crs="clr-namespace:Nixxis;assembly=CRShared"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MySelf">


    <UserControl.CommandBindings>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectAddOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectDuplicateOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectDeleteOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectPrintOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.ShowObject" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>

    </UserControl.CommandBindings>
    

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Themes/ExpressionDark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Themes/ExpressionDarkDataGrid.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Global.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <nixxis:TranslationConverter x:Key="tcv"></nixxis:TranslationConverter>

            <crs:TranslationContext x:Key="tcx" Context="TeamsControl"  ></crs:TranslationContext>

            <local:IsDummyIdConverter x:Key="isDummyId"></local:IsDummyIdConverter>


            <CollectionViewSource x:Key="List" Source="{Binding Teams}">
            </CollectionViewSource>
            
            <local:RightsConverter x:Key="rightsConverter"></local:RightsConverter><local:InvertedRightsConverter x:Key="invertedRightsConverter"></local:InvertedRightsConverter>


            <local:WaitTimeConverter x:Key="WTConverter"/>

            <local:ComboListConverter x:Key="cboConverter" />

            <local:ComboListConverterNoDummies x:Key="cboConverterNoDummies" />

            <CollectionViewSource x:Key="SecurityContexts" Source="{Binding SecurityContexts, Converter={StaticResource cboConverter}}"/>
            <CollectionViewSource x:Key="SecurityContextsNoDummies" Source="{Binding SecurityContexts, Converter={StaticResource cboConverterNoDummies}}"/>


            <local:DurationConverter3 x:Key="durationConverter3" />

            <local:DurationConverter x:Key="durationConverter" />


            <local:ComboStringListConverter x:Key="cboStringConverter" />

            <sys:Single x:Key="-1F">-1</sys:Single>
            <sys:Int32 x:Key="-1">-1</sys:Int32>
            <sys:Int32 x:Key="1">1</sys:Int32>


            <local:AdminObjectConverter x:Key="adminObjectConverter"></local:AdminObjectConverter>

            <nixxis:NixxisExpandPanel x:Key="AdminPanel" Title="Administration toolbar" nixxis:NixxisGrid.Panel="CenterLeft">
                <nixxis:NixxisButton local:RightsManagement.Rights="Team.Add" Command="local:AdminFrameSet.AdminObjectAddOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Add.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Add'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Team.Duplicate" Command="local:AdminFrameSet.AdminObjectDuplicateOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Duplicate.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Duplicate'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Team.Delete" Command="local:AdminFrameSet.AdminObjectDeleteOperation"  CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Delete.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Delete'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Team.Print" Command="local:AdminFrameSet.AdminObjectPrintOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Print.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Print'}"></nixxis:NixxisButton>
            </nixxis:NixxisExpandPanel>

            <DataTemplate x:Key="FullView">
                <nixxis:CoverflowElement Margin="5" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentPresenter}}, Path=(nixxis:NixxisCoverFlowPanel.IsSelected), Mode=TwoWay}">
                    <StackPanel Margin="5" Orientation="Vertical">

                        <Label Content="{nixxis:FormatString TranslationContext={StaticResource tcx},FormatString='Team {0}',BindTo={Binding DisplayText}}" ></Label>

                        <Label>
                            <Label.Content>
                                <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Created at {0:dd/MM/yyy HH:mm} by {1}">
                                    <nixxis:FormatStringExtension.BindTo>
                                        <MultiBinding>
                                            <Binding Path="CreationTime"></Binding>
                                            <Binding Path="Creator"></Binding>
                                        </MultiBinding>
                                    </nixxis:FormatStringExtension.BindTo>
                                </nixxis:FormatStringExtension>
                            </Label.Content>
                        </Label>

                        <Label>
                            <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Modified at {0:dd/MM/yyy HH:mm} by {1}">
                                <nixxis:FormatStringExtension.BindTo>
                                    <MultiBinding>
                                        <Binding Path="ModifyTime"></Binding>
                                        <Binding Path="Modificator"></Binding>
                                    </MultiBinding>
                                </nixxis:FormatStringExtension.BindTo>
                            </nixxis:FormatStringExtension>
                        </Label>

                        <Label Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}}">
                            <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="System team related to {0}">
                                <nixxis:FormatStringExtension.BindTo>
                                    <MultiBinding>
                                        <Binding Path="DescribingSource.TypedDisplayText"></Binding>
                                    </MultiBinding>
                                </nixxis:FormatStringExtension.BindTo>
                            </nixxis:FormatStringExtension>
                        </Label>
                        <Label>
                            <Label.Content>
                                <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Owned by {0}">
                                    <nixxis:FormatStringExtension.BindTo>
                                        <Binding Path="OwnerUser.Target.DisplayText"></Binding>
                                    </nixxis:FormatStringExtension.BindTo>
                                </nixxis:FormatStringExtension>
                            </Label.Content>
                        </Label>

                        <TextBlock>
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,false,false" FallbackValue="Collapsed" TargetNullValue="Collapsed">
                                    <Binding Path="IsRightsHandlingAllowed"></Binding>
                                    <Binding Path="IsReadOnly"></Binding>
                                    <Binding Path="IsOwned"></Binding>
                                </MultiBinding>
                            </TextBlock.Visibility>

                            <Hyperlink Foreground="White" Click="TakeOwnerShip">Take ownership</Hyperlink>

                        </TextBlock>

                    </StackPanel>

                </nixxis:CoverflowElement>

            </DataTemplate>

            <nixxis:NixxisExpandCoverFlowPanel x:Key="DetailsPanel" ItemsSource="{Binding Source={StaticResource List}, Path=CurrentItem}" Title="Details" nixxis:NixxisGrid.Panel="CenterRight" ItemTemplate="{StaticResource FullView}" ItemsWidth="350"/>

        </ResourceDictionary>
        
    </UserControl.Resources>

    <nixxis:PresentationGrid Orientation="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=PanelsOrientation}" >

        <ComboBox Name="cboFilter" nixxis:PresentationGrid.Meaning="Filter" Margin="5,0,0,0" ItemsSource="{Binding GroupKeysSameType, Converter={StaticResource cboStringConverter}}" DisplayMemberPath="DisplayText" SelectedValue="{x:Null}" SelectedValuePath="Id" DropDownOpened="ComboBox_DropDownOpened" DropDownClosed="ComboBox_DropDownClosed" ></ComboBox>


        <nixxis:NixxisDataGrid nixxis:PresentationGrid.Meaning="List" BorderThickness="0" DefaultSortOrder="Description" Name="MainGrid" SelectedItem="{Binding ElementName=MySelf, Path=SelectedItem}" ItemsSource="{Binding Source={StaticResource List}}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" IsReadOnly="True">

            <nixxis:NixxisDataGrid.Columns>

                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <nixxis:NixxisDataGridTextColumn IsNotEditableBinding="{Binding IsSystem}"  EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Description}" AlternateBinding="{Binding DisplayText, Mode=OneWay}" UseAlternateBinding="{Binding IsSystem}"></nixxis:NixxisDataGridTextColumn>

                <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Group'}" Binding="{Binding GroupKey}"></DataGridTextColumn>
            </nixxis:NixxisDataGrid.Columns>

        </nixxis:NixxisDataGrid>

        <nixxis:NixxisTabControl nixxis:PresentationGrid.Meaning="Properties" DataContext="{StaticResource List}" IsEnabled="{Binding ElementName=MainGrid, Path=SelectedIndex, Converter={StaticResource IneqConverter}, ConverterParameter={StaticResource -1}}">

            <!--General-->
            <nixxis:NixxisTabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Team.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>


                <!--ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                             Text="{Binding Id, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Team.Description" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.Description}" Text="{Binding Description}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Group:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Team.Group" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.Group}" ItemsSource="{Binding GroupKeys}" SelectedItem="{Binding GroupKey}" Text="{Binding GroupKey}" IsEditable="True"></ComboBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Security context:'}">
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Team.SecurityContext" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Team.SecurityContext" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause group used by this team members:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Team.PauseGroup" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PauseGroup}" ItemsSource="{Binding ElementName=MySelf, Path=DataContext.PauseGroups}" SelectedValue="{Binding PauseGroup}" SelectedValuePath="Key" DisplayMemberPath="Value">
                            </ComboBox>

                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>
                    <GridSplitter IsTabStop="False" Grid.Column="1" Grid.RowSpan="10" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>
                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel Grid.Column="2">

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Cost:'}"></Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Team.Cost" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.Cost}" Value="{Binding Cost}" MinimumValue="0" NumberFormat="0"></nixxis:NumericUpDown>


                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Team.PostWrapupBehavior" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkPostWrapupBehavior" IsChecked="{Binding IsPostWrapupBehaviorDefined}" DetailContent="{Binding PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                <nixxis:NixxisStackPanel>


                                    <CheckBox Name="chkModifyWrapupTime" local:RightsManagement.Rights="Team.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                        <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Team.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                    <CheckBox  local:RightsManagement.Rights="Team.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Team.PostWrapupBehavior.Alert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.Alert}" IsChecked="{Binding PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Team.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.SupAlert}" IsChecked="{Binding PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Team.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.CloseScript}" IsChecked="{Binding PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Team.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.ForceReady}" IsChecked="{Binding PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                <nixxis:NixxisStackPanel>

                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Team.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                    <CheckBox Name="chkModifyAutoReadyDelay" local:RightsManagement.Rights="Team.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                        <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Team.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Team.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>



                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>
                </Grid>
                <!--/ScrollViewer-->

            </nixxis:NixxisTabItem>

            <!--Queues-->
            <nixxis:NixxisTabItem Name="Queues" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Queue.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Queues'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Team.Queues" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Team.Queues}" DefaultSortOrder="Item.DisplayText" Name="DGQueues" EditMode="SingleClick"  Margin="10" ItemsSource="{Binding CheckedQueues}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                    <nixxis:NixxisDataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding Item, Converter={StaticResource adminObjectConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                        <nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.BaseLevel, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>

                        <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Min. wait time'}" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox IsEnabled="False" IsChecked="{Binding Link.MinWaitTime, Converter={StaticResource IneqConverter}, ConverterParameter={StaticResource -1F}, UpdateSourceTrigger=PropertyChanged }" Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}" VerticalAlignment="Center" VerticalContentAlignment="Center"></CheckBox>
                                        <TextBlock Grid.Column="1" Name="txtMinWait" Text="-">
                                            <TextBlock.Visibility>
                                                <MultiBinding Converter="{StaticResource WTConverter}" TargetNullValue="Collapsed">
                                                    <Binding Path="HasLink"></Binding>
                                                    <Binding Path="Link.MinWaitTime" Converter="{StaticResource EqConverter}" ConverterParameter="{StaticResource -1F}"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Visibility>
                                        </TextBlock>
                                        <TextBlock Grid.Column="1" Text="{Binding Link.MinWaitTime, Converter={StaticResource durationConverter3}}">
                                            <TextBlock.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,false" TargetNullValue="Collapsed">
                                                    <Binding Path="HasLink"></Binding>
                                                    <Binding  ElementName="txtMinWait" Path="IsVisible"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Visibility>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox VerticalAlignment="Center" VerticalContentAlignment="Center" Name="chkMinWait" IsChecked="{Binding Link.MinWaitTime, Converter={StaticResource IneqConverter}, ConverterParameter={StaticResource -1F}, UpdateSourceTrigger=PropertyChanged }"></CheckBox>
                                        <nixxis:DurationPicker ShowMilliseconds="False" IsEnabled="{Binding ElementName=chkMinWait, Path=IsChecked}" Grid.Column="1" Duration="{Binding Link.MinWaitTime,  UpdateSourceTrigger=PropertyChanged}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Max. wait time'}" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox IsEnabled="False" IsChecked="{Binding Link.MaxWaitTime, Converter={StaticResource IneqConverter}, ConverterParameter={StaticResource -1F}, UpdateSourceTrigger=PropertyChanged }" Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}" VerticalAlignment="Center" VerticalContentAlignment="Center"></CheckBox>
                                        <TextBlock Grid.Column="1" Name="txtMaxWait" Text="-">
                                            <TextBlock.Visibility>
                                                <MultiBinding Converter="{StaticResource WTConverter}" TargetNullValue="Collapsed">
                                                    <Binding Path="HasLink"></Binding>
                                                    <Binding Path="Link.MaxWaitTime" Converter="{StaticResource EqConverter}" ConverterParameter="{StaticResource -1F}"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Visibility>
                                        </TextBlock>
                                        <TextBlock Grid.Column="1" Text="{Binding Link.MaxWaitTime, Converter={StaticResource durationConverter3}}">
                                            <TextBlock.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,false" TargetNullValue="Collapsed">
                                                    <Binding Path="HasLink"></Binding>
                                                    <Binding  ElementName="txtMaxWait" Path="IsVisible"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Visibility>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox VerticalAlignment="Center" VerticalContentAlignment="Center" Name="chkMaxWait" IsChecked="{Binding Link.MaxWaitTime, Converter={StaticResource IneqConverter}, ConverterParameter={StaticResource -1F}, UpdateSourceTrigger=PropertyChanged }"></CheckBox>
                                        <nixxis:DurationPicker ShowMilliseconds="False" IsEnabled="{Binding ElementName=chkMaxWait, Path=IsChecked}" Grid.Column="1" Duration="{Binding Link.MaxWaitTime,  UpdateSourceTrigger=PropertyChanged}" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Queue'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                    </nixxis:NixxisDataGrid.Columns>
                    <nixxis:NixxisDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        </ContextMenu>
                    </nixxis:NixxisDataGrid.ContextMenu>
                </nixxis:NixxisDataGrid>
            </nixxis:NixxisTabItem>

            <!--Agents-->
            <nixxis:NixxisTabItem Name="Agents">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Agent.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Agents'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Team.Agents" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Team.Agents}" DefaultSortOrder="Item.DisplayText" Name="DGAgents" EditMode="SingleClick"  Margin="10" ItemsSource="{Binding CheckedAgents}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >

                    <nixxis:NixxisDataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="Images\AdminSmall_Agent.png"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                        <nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.BaseLevel, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>
                        <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Agent'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>

                    </nixxis:NixxisDataGrid.Columns>
                    <nixxis:NixxisDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        </ContextMenu>
                    </nixxis:NixxisDataGrid.ContextMenu>
                </nixxis:NixxisDataGrid>

            </nixxis:NixxisTabItem>

            <!--Security-->
            <nixxis:NixxisTabItem Name="Rights">
                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"  ></Binding>
                        <Binding Path="IsRightsHandlingAllowed"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Rights.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List of roles and their rights associated to the selected item:'}"></Label>

                    <nixxis:NixxisDataGrid Grid.Row="1" local:RightsManagement.Rights="Team.Rights" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Team.Rights}" DefaultSortOrder="DisplayText" Name="DGRights" Margin="10" ItemsSource="{Binding RolesOverview}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" Loaded="DGRights_Loaded"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="Images\AdminSmall_Rights.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Role'}" Binding="{Binding DisplayText}"></DataGridTextColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}" Binding="{Binding Rights}"></DataGridTextColumn>

                        </nixxis:NixxisDataGrid.Columns>

                    <nixxis:NixxisDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        </ContextMenu>
                    </nixxis:NixxisDataGrid.ContextMenu>
                </nixxis:NixxisDataGrid>

                    <nixxis:NixxisDataGrid Grid.Row="2" local:RightsManagement.Rights="Team.Rights" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Team.Rights}" Name="DGSubRights" EditMode="SingleClick" Margin="10" ItemsSource="{Binding ElementName=DGRights, Path=SelectedItem.Security}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Right'}" Binding="{Binding RightDescription}"></DataGridTextColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsListAllowedEnabled}" VisibilityBinding="{Binding IsListAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List'}" Binding="{Binding ListAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsReadAllowedEnabled}" VisibilityBinding="{Binding IsReadAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Read'}" Binding="{Binding ReadAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsWriteAllowedEnabled}" VisibilityBinding="{Binding IsWriteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Write'}" Binding="{Binding WriteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsCreateAllowedEnabled}" VisibilityBinding="{Binding IsCreateAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Create'}" Binding="{Binding CreateAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsDeleteAllowedEnabled}" VisibilityBinding="{Binding IsDeleteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Delete'}" Binding="{Binding DeleteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsPowerUserEnabled}" VisibilityBinding="{Binding IsPowerUserVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Power'}" Binding="{Binding PowerUser, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsFullControlEnabled}" VisibilityBinding="{Binding IsFullControlVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Full'}" Binding="{Binding FullControl, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                        </nixxis:NixxisDataGrid.Columns>


                    </nixxis:NixxisDataGrid>


                </Grid>

            </nixxis:NixxisTabItem>


        </nixxis:NixxisTabControl>

    </nixxis:PresentationGrid>
    
</UserControl>
