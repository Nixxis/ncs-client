<UserControl x:Class="Nixxis.Client.Admin.CampaignsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:nixxis="clr-namespace:Nixxis.Client.Controls;assembly=NixxisWpfControls"
             xmlns:local="clr-namespace:Nixxis.Client.Admin"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:adminlink="clr-namespace:Nixxis.Client.Admin;assembly=AdminLink"
             xmlns:crshared="clr-namespace:ContactRoute;assembly=CRShared"
             xmlns:pres="clr-namespace:System.Windows;assembly=PresentationCore"
             xmlns:n="clr-namespace:Nixxis.Client.Controls;assembly=NixxisWpfControlsCommon"
             xmlns:ne="clr-namespace:Nixxis.Client.Controls;assembly=NixxisWpfControlsEditor"
             mc:Ignorable="d" 
             xmlns:crs="clr-namespace:Nixxis;assembly=CRShared"
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             Name="MySelf">


    <UserControl.CommandBindings>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectAddOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectDuplicateOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectDeleteOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectMoveUpOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectMoveDownOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.DataManagement" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>
        <CommandBinding Command="local:AdminFrameSet.AdminObjectPrintOperation" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>

        <CommandBinding Command="local:AdminFrameSet.ShowObject" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute"></CommandBinding>


    </UserControl.CommandBindings>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="QualifHelpers.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Themes/ExpressionDark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Themes/ExpressionDarkDataGrid.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Global.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/NixxisTreeView.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/NixxisGrid.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/NixxisDataGrid.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <local:FilterConverter x:Key="filterConv"></local:FilterConverter>

            <nixxis:TranslationConverter x:Key="tcv"></nixxis:TranslationConverter>

            <CollectionViewSource x:Key="ParamDefs" Source="{Binding DynamicParameterDefinitions}"/>

            <crs:TranslationContext Context="CampaignsControl" x:Key="tcx"></crs:TranslationContext>

            <local:WarningConverter x:Key="warnConverter"></local:WarningConverter>

            <local:ComboStringListConverter x:Key="cboStringConverter" />

            <local:IsDummyIdConverter x:Key="isDummyId"></local:IsDummyIdConverter>

            <local:ContainsItemsConverter x:Key="containsItems"></local:ContainsItemsConverter>

            <adminlink:DynamicParameterActionHelper x:Key="DynamicParameterActions"></adminlink:DynamicParameterActionHelper>

            <local:RightsConverter x:Key="rightsConverter"></local:RightsConverter>
            <local:InvertedRightsConverter x:Key="invertedRightsConverter"></local:InvertedRightsConverter>

            <local:SortQualificationConverter x:Key="SortQualifsConverter"></local:SortQualificationConverter>

            <local:QuotaComputationMehodTranslator x:Key="quotaComputationMehodTranslator"></local:QuotaComputationMehodTranslator>

            <local:QuotaTargetComputationMehodTranslator x:Key="quotaTargetComputationMehodTranslator"></local:QuotaTargetComputationMehodTranslator>

            <local:AtivityPromptsToPromptsConverter x:Key="AtivityPromptsToPromptsConverter"></local:AtivityPromptsToPromptsConverter>

            <local:AtivityPromptsToPromptsConverter x:Key="AtivityPromptsToPromptsConverterWithNone" IncludeNone="True"></local:AtivityPromptsToPromptsConverter>

            <local:DurationConverter x:Key="durationConverter" />

            <local:DurationConverter2 x:Key="durationConverter2" />

            <local:ComboListConverter x:Key="cboConverter" />

            <local:ComboListConverterNoDummies x:Key="cboConverterNoDummies" />

            <local:OperatorConverter x:Key="operatorConverter" />

            <adminlink:DataSourceTypeHelper x:Key="dataSourceTypes"/>

            <local:OperatorTypeConverter x:Key="OperatorTypeConverter" />

            <local:OperatorTypeConverter2 x:Key="OperatorTypeConverter2" />

            <CollectionViewSource x:Key="List" Source="{Binding Campaigns}" Filter="CollectionViewSource_Filter_1"></CollectionViewSource>


            <CollectionViewSource x:Key="SecurityContexts" Source="{Binding SecurityContexts, Converter={StaticResource cboConverter}}"/>
            <CollectionViewSource x:Key="SecurityContextsNoDummies" Source="{Binding SecurityContexts, Converter={StaticResource cboConverterNoDummies}}"/>

            <CollectionViewSource x:Key="Locations" Source="{Binding Locations}"/>
            <CollectionViewSource x:Key="LocationsNoDummies" Source="{Binding Locations, Converter={StaticResource cboConverterNoDummies}, ConverterParameter=false}"/>

            <CollectionViewSource x:Key="Carriers" Source="{Binding Carriers}"/>
            <CollectionViewSource x:Key="CarriersNoDummies" Source="{Binding Carriers, Converter={StaticResource cboConverterNoDummies}, ConverterParameter=false}"/>

            <CollectionViewSource x:Key="OutboundActivities" Source="{Binding OutboundActivities, Converter={StaticResource cboConverter}}"/>
            <CollectionViewSource x:Key="OutboundActivitiesNoDummies" Source="{Binding OutboundActivities, Converter={StaticResource cboConverterNoDummies}}"/>

            <CollectionViewSource x:Key="CallbackRules" Source="{Binding CallbackRulesets}"/>
            <CollectionViewSource x:Key="CallbackRulesNoDummies" Source="{Binding CallbackRulesets, Converter={StaticResource cboConverterNoDummies}, ConverterParameter=false}"/>

            <CollectionViewSource x:Key="Languages" Source="{Binding Languages, Converter={StaticResource cboConverter}}"/>
            <CollectionViewSource x:Key="LanguagesNoDummies" Source="{Binding Languages, Converter={StaticResource cboConverterNoDummies}}"/>

            <CollectionViewSource x:Key="AppointmentsContexts" Source="{Binding AppointmentsContexts, Converter={StaticResource cboConverter}}" />
            <CollectionViewSource x:Key="AppointmentsContextsNoDummies" Source="{Binding AppointmentsContexts, Converter={StaticResource cboConverterNoDummies}}"/>

            <CollectionViewSource x:Key="AmdSettings" Source="{Binding AmdSettings, Converter={StaticResource cboConverter}}" />
            <CollectionViewSource x:Key="AmdSettingsNoDummies" Source="{Binding AmdSettings, Converter={StaticResource cboConverterNoDummies}}"/>

            <CollectionViewSource x:Key="ListQueues" Source="{Binding Queues, Converter={StaticResource cboConverter}}"  />
            <CollectionViewSource x:Key="ListQueuesNoDummies" Source="{Binding Queues, Converter={StaticResource cboConverterNoDummies}}"  />

            <CollectionViewSource x:Key="Plannings" Source="{Binding Plannings, Converter={StaticResource cboConverter}}" />
            <CollectionViewSource x:Key="PlanningsNoDummies" Source="{Binding Plannings, Converter={StaticResource cboConverterNoDummies}}"  />

            <CollectionViewSource x:Key="VoicePreprocessors" Source="{Binding Preprocessors, Converter={StaticResource cboConverter}}" Filter="VoicePreprocessors_Filter"/>
            <CollectionViewSource x:Key="VoicePreprocessorsNoDummies" Source="{Binding Preprocessors, Converter={StaticResource cboConverterNoDummies}}" Filter="VoicePreprocessors_Filter"/>

            <CollectionViewSource x:Key="WaitMusicProcessors" Source="{Binding Preprocessors, Converter={StaticResource cboConverter}}" Filter="WaitMusicProcessors_Filter"/>
            <CollectionViewSource x:Key="WaitMusicProcessorsNoDummies" Source="{Binding Preprocessors, Converter={StaticResource cboConverterNoDummies}}" Filter="WaitMusicProcessors_Filter"/>

            <CollectionViewSource x:Key="ChatPreprocessors" Source="{Binding Preprocessors, Converter={StaticResource cboConverter}}" Filter="ChatPreprocessors_Filter"/>
            <CollectionViewSource x:Key="ChatPreprocessorsNoDummies" Source="{Binding Preprocessors, Converter={StaticResource cboConverterNoDummies}}" Filter="ChatPreprocessors_Filter"/>

            <CollectionViewSource x:Key="MailPreprocessors" Source="{Binding Preprocessors, Converter={StaticResource cboConverter}}" Filter="MailPreprocessors_Filter"/>
            <CollectionViewSource x:Key="MailPreprocessorsNoDummies" Source="{Binding Preprocessors, Converter={StaticResource cboConverterNoDummies}}" Filter="MailPreprocessors_Filter"/>



            <CollectionViewSource x:Key="Scripts" Source="{Binding Preprocessors}" Filter="Scripts_Filter"/>

            <CollectionViewSource x:Key="NumberFormats" Source="{Binding NumberFormats}"/>

            <sys:Int32 x:Key="-1">-1</sys:Int32>
            <sys:Int32 x:Key="1">1</sys:Int32>
            <sys:Int32 x:Key="0">0</sys:Int32>

            <CollectionViewSource x:Key="BlackListProviders" Source="{Binding MediaProviders,  Converter={StaticResource cboConverter}}" Filter="BlackListProvider_Filter"></CollectionViewSource>
            <CollectionViewSource x:Key="EmailMediaProviders" Source="{Binding MediaProviders}" Filter="EmailMediaProvider_Filter"></CollectionViewSource>
            <CollectionViewSource x:Key="ChatMediaProviders" Source="{Binding MediaProviders}" Filter="ChatMediaProvider_Filter"></CollectionViewSource>

            <adminlink:SortOrderHelper x:Key="SortOrders"></adminlink:SortOrderHelper>

            <adminlink:OperatorHelper x:Key="Operators"></adminlink:OperatorHelper>

            <adminlink:CombineOperatorHelper x:Key="CombineOperators" ></adminlink:CombineOperatorHelper>

            <CollectionViewSource x:Key="combineOperators" Source="{Binding Source={StaticResource CombineOperators} }" Filter="CombineOperators_Filter"/>

            <CollectionViewSource x:Key="stringOperators" Source="{Binding Source={StaticResource Operators} }" Filter="StringOperators_Filter"/>

            <CollectionViewSource x:Key="intOperators" Source="{Binding Source={StaticResource Operators} }" Filter="IntOperators_Filter"/>

            <CollectionViewSource x:Key="datetimeOperators" Source="{Binding Source={StaticResource Operators} }" Filter="DateTimeOperators_Filter"/>

            <CollectionViewSource x:Key="boolOperators" Source="{Binding Source={StaticResource Operators} }" Filter="BoolOperators_Filter"/>

            <adminlink:DBTypeHelper x:Key="DBTypes"></adminlink:DBTypeHelper>

            <adminlink:TimeRelatedQuotaGranularitiesHelper x:Key="timeRelatedQuotaGranularities"></adminlink:TimeRelatedQuotaGranularitiesHelper>

            <adminlink:UserFieldMeaningHelper x:Key="UserMeanings"></adminlink:UserFieldMeaningHelper>

            <CollectionViewSource x:Key="UserMeaningsNoQuotas" Source="{Binding Source={StaticResource UserMeanings} }" Filter="NoQuota_Filter"/>

            <adminlink:FrequencyHelper x:Key="frequencyHelper"></adminlink:FrequencyHelper>

            <adminlink:QuotaComputationMethodsHelper x:Key="quotasComputationMethodsHelper"></adminlink:QuotaComputationMethodsHelper>

            <adminlink:QuotaTargetComputationMethodsHelper x:Key="quotasTargetComputationMethodsHelper"></adminlink:QuotaTargetComputationMethodsHelper>

            <adminlink:AbandonRateModeHelper x:Key="abandonRateModeHelper"></adminlink:AbandonRateModeHelper>

            <adminlink:SalesforceModesHelper x:Key="salesforceModes"></adminlink:SalesforceModesHelper>

            <adminlink:DialingModeHelper x:Key="dialingModeHelper"></adminlink:DialingModeHelper>

            <adminlink:RestrictedDialingModeHelper x:Key="restrictedDialingModeHelper"></adminlink:RestrictedDialingModeHelper>

            <adminlink:ExpressDialingModeHelper x:Key="expressDialingModeHelper"></adminlink:ExpressDialingModeHelper>

            <adminlink:ExpressRestrictedDialingModeHelper x:Key="expressRestrictedDialingModeHelper"></adminlink:ExpressRestrictedDialingModeHelper>

            <adminlink:OverflowActionsHelper x:Key="overflowActionsHelper"></adminlink:OverflowActionsHelper>

            <local:SelectionHelper x:Key="selectionHelper"></local:SelectionHelper>

            <local:SelectionHelper2 x:Key="selectionHelperInbound"></local:SelectionHelper2>

            <local:SelectionHelper2 x:Key="selectionHelperOutbound"></local:SelectionHelper2>

            <local:AdminObjectConverter x:Key="adminObjectConverter"></local:AdminObjectConverter>

            <local:SpecialConverter x:Key="specialConverter"></local:SpecialConverter>

            <local:TreeStateFalseWhenNull x:Key="treeStateFalseWhenNull"></local:TreeStateFalseWhenNull>

            <HierarchicalDataTemplate DataType="{x:Type adminlink:Qualification}" ItemsSource="{Binding Children, Converter={StaticResource SortQualifsConverter}}">
                <TextBlock VerticalAlignment="Center" Grid.Column="1" Margin="3" Text="{Binding Description}"/>
            </HierarchicalDataTemplate>


            <HierarchicalDataTemplate x:Key="QualificationExclusion" DataType="{x:Type adminlink:BaseAdminCheckedLinkItem}" ItemsSource="{Binding Children, Converter={StaticResource SortQualifsConverter}}" >
                <CheckBox local:RightsManagement.Rights="Campaign.Activity.Qualifications" IsEnabled="{Binding Item, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Activity.Qualifications}" VerticalAlignment="Center" Grid.Column="1" Margin="3" Content="{Binding Item.Description}" IsChecked="{Binding HasLink, Converter={StaticResource BoolInverter}}"></CheckBox>
            </HierarchicalDataTemplate>


            <nixxis:NixxisExpandPanel x:Key="AdminPanel" Title="Administration toolbar" nixxis:NixxisGrid.Panel="CenterLeft">
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.Add" Command="local:AdminFrameSet.AdminObjectAddOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Add.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Add'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.Duplicate" Command="local:AdminFrameSet.AdminObjectDuplicateOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Duplicate.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Duplicate'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.Delete" Command="local:AdminFrameSet.AdminObjectDeleteOperation"  CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Delete.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Delete'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.MoveUp" Command="local:AdminFrameSet.AdminObjectMoveUpOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_MoveUp.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Move Up'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.MoveDown" Command="local:AdminFrameSet.AdminObjectMoveDownOperation"  CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_MoveDown.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Move Down'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.DataManage" Command="local:AdminFrameSet.DataManagement" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Admin_Wizard.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Data management'}"></nixxis:NixxisButton>
                <nixxis:NixxisButton local:RightsManagement.Rights="Campaign.Print" Command="local:AdminFrameSet.AdminObjectPrintOperation" CommandTarget="{Binding}" Foreground="{StaticResource OrangeGradient}" ImageSource="Images\Action_Print.png" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Print'}"></nixxis:NixxisButton>
            </nixxis:NixxisExpandPanel>


            <DataTemplate x:Key="CampTemplate">
                <nixxis:CoverflowElement Margin="5" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentPresenter}}, Path=(nixxis:NixxisCoverFlowPanel.IsSelected), Mode=TwoWay}">
                    <StackPanel Margin="5" Orientation="Vertical">
                        <Label Content="{nixxis:FormatString TranslationContext={StaticResource tcx},FormatString='Campaign {0}',BindTo={Binding DisplayText}}" ></Label>
                        <Label>
                            <Label.Content>
                                <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Created at {0:dd/MM/yyy HH:mm} by {1}">
                                    <nixxis:FormatStringExtension.BindTo>
                                        <MultiBinding>
                                            <Binding Path="CreationTime"></Binding>
                                            <Binding Path="Creator"></Binding>
                                        </MultiBinding>
                                    </nixxis:FormatStringExtension.BindTo>
                                </nixxis:FormatStringExtension>
                            </Label.Content>
                        </Label>
                        <Label>
                            <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Modified at {0:dd/MM/yyy HH:mm} by {1}">
                                <nixxis:FormatStringExtension.BindTo>
                                    <MultiBinding>
                                        <Binding Path="ModifyTime"></Binding>
                                        <Binding Path="Modificator"></Binding>
                                    </MultiBinding>
                                </nixxis:FormatStringExtension.BindTo>
                            </nixxis:FormatStringExtension>
                        </Label>
                        <Label Visibility="{Binding Advanced, Converter={StaticResource VisWithCollapseConverter}}">
                            Campaign is advanced
                        </Label>
                        <Label>
                            <Label.Content>
                                <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Owned by {0}">
                                    <nixxis:FormatStringExtension.BindTo>
                                        <Binding Path="OwnerUser.Target.DisplayText"></Binding>
                                    </nixxis:FormatStringExtension.BindTo>
                                </nixxis:FormatStringExtension>
                            </Label.Content>
                        </Label>


                        <TextBlock>
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,false,false" FallbackValue="Collapsed">
                                    <Binding Path="IsRightsHandlingAllowed"></Binding>
                                    <Binding Path="IsReadOnly"></Binding>
                                    <Binding Path="IsOwned"></Binding>
                                </MultiBinding>
                            </TextBlock.Visibility>

                            <Hyperlink Foreground="White" Click="TakeOwnerShip">Take ownership</Hyperlink>

                        </TextBlock>

                    </StackPanel>
                </nixxis:CoverflowElement>
            </DataTemplate>

            <DataTemplate x:Key="ActTemplate">
                <nixxis:CoverflowElement Margin="5" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentPresenter}}, Path=(nixxis:NixxisCoverFlowPanel.IsSelected), Mode=TwoWay}">
                    <StackPanel Margin="5" Orientation="Vertical">
                        <Label Content="{nixxis:FormatString TranslationContext={StaticResource tcx},FormatString='Activity {0}',BindTo={Binding DisplayText}}" ></Label>
                        <Label>
                            <Label.Content>
                                <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Created at {0:dd/MM/yyy HH:mm} by {1}">
                                    <nixxis:FormatStringExtension.BindTo>
                                        <MultiBinding>
                                            <Binding Path="CreationTime"></Binding>
                                            <Binding Path="Creator"></Binding>
                                        </MultiBinding>
                                    </nixxis:FormatStringExtension.BindTo>
                                </nixxis:FormatStringExtension>
                            </Label.Content>
                        </Label>
                        <Label>
                            <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Modified at {0:dd/MM/yyy HH:mm} by {1}">
                                <nixxis:FormatStringExtension.BindTo>
                                    <MultiBinding>
                                        <Binding Path="ModifyTime"></Binding>
                                        <Binding Path="Modificator"></Binding>
                                    </MultiBinding>
                                </nixxis:FormatStringExtension.BindTo>
                            </nixxis:FormatStringExtension>
                        </Label>
                        <Label Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}}">
                            <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="System activity related to {0}">
                                <nixxis:FormatStringExtension.BindTo>
                                    <MultiBinding>
                                        <Binding Path="DescribingSource.TypedDisplayText"></Binding>
                                    </MultiBinding>
                                </nixxis:FormatStringExtension.BindTo>
                            </nixxis:FormatStringExtension>
                        </Label>
                        <Label>
                            <Label.Content>
                                <nixxis:FormatStringExtension TranslationContext="{StaticResource tcx}" FormatString="Owned by {0}">
                                    <nixxis:FormatStringExtension.BindTo>
                                        <Binding Path="OwnerUser.Target.DisplayText"></Binding>
                                    </nixxis:FormatStringExtension.BindTo>
                                </nixxis:FormatStringExtension>
                            </Label.Content>
                        </Label>

                        <TextBlock>
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,false,false" FallbackValue="Collapsed">
                                    <Binding Path="IsRightsHandlingAllowed"></Binding>
                                    <Binding Path="IsReadOnly"></Binding>
                                    <Binding Path="IsOwned"></Binding>
                                </MultiBinding>
                            </TextBlock.Visibility>

                            <Hyperlink Foreground="White" Click="TakeOwnerShip">Take ownership</Hyperlink>

                        </TextBlock>

                    </StackPanel>
                </nixxis:CoverflowElement>
            </DataTemplate>

            <local:TemplateSelector x:Key="templateSelector" ActivityTemplate="{StaticResource ActTemplate}" CampaignTemplate="{StaticResource CampTemplate}"></local:TemplateSelector>

            <nixxis:NixxisExpandCoverFlowPanel x:Key="DetailsPanel" Title="Details" nixxis:NixxisGrid.Panel="CenterRight" ItemsWidth="350" ItemTemplateSelector="{StaticResource templateSelector}">
                <nixxis:NixxisExpandCoverFlowPanel.ItemsSource>
                    <MultiBinding Converter="{StaticResource FirstNonNullConverter}">
                        <Binding Source="{StaticResource selectionHelper}" Path="Inbound"/>
                        <Binding Source="{StaticResource selectionHelper}" Path="Outbound"/>
                        <Binding Source="{StaticResource List}" Path="CurrentItem"/>
                    </MultiBinding>
                </nixxis:NixxisExpandCoverFlowPanel.ItemsSource>
            </nixxis:NixxisExpandCoverFlowPanel>

        </ResourceDictionary>

    </UserControl.Resources>

    <nixxis:PresentationGrid Orientation="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=PanelsOrientation}" >

        <ComboBox nixxis:PresentationGrid.Meaning="Filter" Name="cboFilter" Margin="5,0,0,0" ItemsSource="{Binding GroupKeysSameType, Converter={StaticResource cboStringConverter}}" DisplayMemberPath="DisplayText" SelectedValue="{x:Null}" SelectedValuePath="Id" DropDownOpened="ComboBox_DropDownOpened" DropDownClosed="ComboBox_DropDownClosed" ></ComboBox>

        <ScrollViewer nixxis:PresentationGrid.Meaning="List" Name="MainScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
            <nixxis:NixxisDataGrid Loaded="MainGrid_Loaded" DefaultSortOrder="Description" 
                                   SelectionChanged="DataGrid_SelectionChanged" 
                                   Name="MainGrid" 
                                   SelectedItem="{Binding ElementName=MySelf, Path=SelectedItem}" 
                                   ItemsSource="{Binding Source={StaticResource List}}" 
                                   CanUserAddRows="False" HeadersVisibility="Column"
                                   RowDetailsVisibilityMode="Collapsed" 
                                   IsReadOnly="True"
                                   BorderThickness="0">

                <nixxis:NixxisDataGrid.Columns>

                    <nixxis:NixxisDataGridToggleDetailColumn SingleDetail="True" Header="">
                        <nixxis:NixxisDataGridToggleDetailColumn.ToggleDetailTemplate>
                            <ControlTemplate>
                                <Image Width="25" Height="25" RenderOptions.BitmapScalingMode="LowQuality" Source="Images\Action_Add.png">
                                    <Image.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                            <Binding Path="HasActivities"></Binding>
                                            <Binding Path="Advanced"></Binding>
                                        </MultiBinding>
                                    </Image.Visibility>
                                </Image>
                            </ControlTemplate>
                        </nixxis:NixxisDataGridToggleDetailColumn.ToggleDetailTemplate>
                    </nixxis:NixxisDataGridToggleDetailColumn>


                    <DataGridTemplateColumn IsReadOnly="True" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Images\AdminSmall_Campaign.png">
                                        <Image.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                                <Binding Path="OutboundStatus" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:CampaignStatus.NotActive}"></Binding>
                                                <Binding Path="InboundStatus" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:CampaignStatus.NotActive}"></Binding>
                                                <Binding Path="MailStatus" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:CampaignStatus.NotActive}"></Binding>
                                                <Binding Path="ChatStatus" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:CampaignStatus.NotActive}"></Binding>
                                            </MultiBinding>
                                        </Image.Visibility>
                                    </Image>
                                    <Image Source="Images\Campaign_Outbound_Pause.png" Visibility="{Binding OutboundStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Paused}}"/>
                                    <Image Source="Images\Campaign_Outbound_Play.png" Visibility="{Binding OutboundStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Running}}"/>
                                    <Image Source="Images\Campaign_Outbound_Play_Pause.png" Visibility="{Binding OutboundStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Mixed}}"/>
                                    <Image Source="Images\Campaign_Inbound_Pause.png" Visibility="{Binding InboundStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Paused}}"/>
                                    <Image Source="Images\Campaign_Inbound_Play.png" Visibility="{Binding InboundStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Running}}"/>
                                    <Image Source="Images\Campaign_Inbound_Play_Pause.png" Visibility="{Binding InboundStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Mixed}}"/>
                                    <Image Source="Images\Campaign_Mail_Pause.png" Visibility="{Binding MailStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Paused}}"/>
                                    <Image Source="Images\Campaign_Mail_Play.png" Visibility="{Binding MailStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Running}}"/>
                                    <Image Source="Images\Campaign_Mail_Play_Pause.png" Visibility="{Binding MailStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Mixed}}"/>
                                    <Image Source="Images\Campaign_Chat_Pause.png" Visibility="{Binding ChatStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Paused}}"/>
                                    <Image Source="Images\Campaign_Chat_Play.png" Visibility="{Binding ChatStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Running}}"/>
                                    <Image Source="Images\Campaign_Chat_Play_Pause.png" Visibility="{Binding ChatStatus, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:CampaignStatus.Mixed}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Description}"></DataGridTextColumn>
                    <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Group'}" Binding="{Binding GroupKey}"></DataGridTextColumn>
                </nixxis:NixxisDataGrid.Columns>

                <nixxis:NixxisDataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid Name="InOutGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <!--Region Inbound row detail grid-->
                            <Grid  Name="inGrid" Visibility="{Binding HasInboundActivities, Converter={StaticResource VisWithCollapseConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#dfdfdf" Margin="8,0,8,0"> 
                                Inbound
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90"></RotateTransform>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>


                                <nixxis:NixxisDataGrid BorderThickness="0" DefaultSortOrder="Description" Name="InboundGrid" IsSynchronizedWithCurrentItem="False" SelectionChanged="DataGrid_SelectionChanged"  Grid.Column="1" ItemsSource="{Binding InboundActivities}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" IsReadOnly="True"  >
                                    <nixxis:NixxisDataGrid.Columns>

                                        <DataGridTemplateColumn IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Image Source="Images\Campaign_Inbound_Pause.png">
                                                            <Image.Visibility>
                                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                                    <Binding Path="Paused"></Binding>
                                                                    <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Voice}"></Binding>
                                                                </MultiBinding>
                                                            </Image.Visibility>
                                                        </Image>
                                                        <Image Source="Images\Campaign_Inbound_Play.png">
                                                            <Image.Visibility>
                                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                                                    <Binding Path="Paused" Converter="{StaticResource BoolInverter}" ></Binding>
                                                                    <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Voice}"></Binding>
                                                                </MultiBinding>
                                                            </Image.Visibility>
                                                        </Image>
                                                        <Image Source="Images\Campaign_Mail_Pause.png">
                                                            <Image.Visibility>
                                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                                                    <Binding Path="Paused"></Binding>
                                                                    <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Mail}"></Binding>
                                                                </MultiBinding>
                                                            </Image.Visibility>
                                                        </Image>
                                                        <Image Source="Images\Campaign_Mail_Play.png">
                                                            <Image.Visibility>
                                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                                                    <Binding Path="Paused" Converter="{StaticResource BoolInverter}" ></Binding>
                                                                    <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Mail}"></Binding>
                                                                </MultiBinding>
                                                            </Image.Visibility>
                                                        </Image>
                                                        <Image Source="Images\Campaign_Chat_Pause.png">
                                                            <Image.Visibility>
                                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                                                    <Binding Path="Paused"></Binding>
                                                                    <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Chat}"></Binding>
                                                                </MultiBinding>
                                                            </Image.Visibility>
                                                        </Image>
                                                        <Image Source="Images\Campaign_Chat_Play.png">
                                                            <Image.Visibility>
                                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                                                    <Binding Path="Paused" Converter="{StaticResource BoolInverter}" ></Binding>
                                                                    <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Chat}"></Binding>
                                                                </MultiBinding>
                                                            </Image.Visibility>
                                                        </Image>

                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <nixxis:NixxisDataGridTextColumn IsNotEditableBinding="{Binding IsSystem}"  EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Description}" AlternateBinding="{Binding DisplayText, Mode=OneWay}" UseAlternateBinding="{Binding IsSystem}"></nixxis:NixxisDataGridTextColumn>

                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination'}" Binding="{Binding PreparedDestination}"></DataGridTextColumn>

                                    </nixxis:NixxisDataGrid.Columns>

                                    <nixxis:NixxisDataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause activity'}" Command="local:AdminFrameSet.PauseActivity" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unpause activity'}" Command="local:AdminFrameSet.UnpauseActivity" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                        </ContextMenu>
                                    </nixxis:NixxisDataGrid.ContextMenu>

                                </nixxis:NixxisDataGrid>
                            </Grid>
                            <!--EndRegion-->

                            <!--Region Outbound row detail grid-->
                            <Grid  Grid.Row="1" Name="outGrid" Visibility="{Binding HasOutboundActivities, Converter={StaticResource VisWithCollapseConverter}}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#dfdfdf" Margin="8,0,8,0"> 
                                Outbound
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90"></RotateTransform>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>

                                <nixxis:NixxisDataGrid BorderThickness="0" Name="OutboundGrid" DefaultSortOrder="Description" IsSynchronizedWithCurrentItem="False" SelectionChanged="DataGrid_SelectionChanged" Grid.Column="1" ItemsSource="{Binding OutboundActivities}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" IsReadOnly="True">
                                    <nixxis:NixxisDataGrid.Columns>

                                        <DataGridTemplateColumn IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Image Source="Images\Campaign_Outbound_Pause.png" Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}}"/>
                                                        <Image Source="Images\Campaign_Outbound_Play.png" Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <nixxis:NixxisDataGridTextColumn IsNotEditableBinding="{Binding IsSystem}"  EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Description}" AlternateBinding="{Binding DisplayText, Mode=OneWay}" UseAlternateBinding="{Binding IsSystem}"></nixxis:NixxisDataGridTextColumn>

                                    </nixxis:NixxisDataGrid.Columns>

                                    <nixxis:NixxisDataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause activity'}" Command="local:AdminFrameSet.PauseActivity" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unpause activity'}" Command="local:AdminFrameSet.UnpauseActivity" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                        </ContextMenu>
                                    </nixxis:NixxisDataGrid.ContextMenu>


                                </nixxis:NixxisDataGrid>
                            </Grid>
                            <!--EndRegion-->

                        </Grid>
                    </DataTemplate>
                </nixxis:NixxisDataGrid.RowDetailsTemplate>

                <nixxis:NixxisDataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause outbound'}" Command="local:AdminFrameSet.PauseOutboundActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unpause outbound'}" Command="local:AdminFrameSet.UnpauseOutboundActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause inbound'}" Command="local:AdminFrameSet.PauseInboundActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unpause inbound'}" Command="local:AdminFrameSet.UnpauseInboundActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause chat'}" Command="local:AdminFrameSet.PauseChatActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unpause chat'}" Command="local:AdminFrameSet.UnpauseChatActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Pause mail'}" Command="local:AdminFrameSet.PauseMailActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unpause mail'}" Command="local:AdminFrameSet.UnpauseMailActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                    </ContextMenu>
                </nixxis:NixxisDataGrid.ContextMenu>


            </nixxis:NixxisDataGrid>
        </ScrollViewer>

        <!--Region Campaigns-->
        <nixxis:NixxisTabControl nixxis:PresentationGrid.Meaning="Properties" Name="CampTabControl"  DataContext="{StaticResource List}" IsEnabled="{Binding ElementName=MainGrid, Path=SelectedIndex, Converter={StaticResource IneqConverter}, ConverterParameter={StaticResource -1}}" >

            <nixxis:NixxisTabControl.Visibility>
                <MultiBinding Converter="{StaticResource specialConverter}" ConverterParameter="Camp" TargetNullValue="Collapsed">
                    <Binding Source="{StaticResource selectionHelper}" Path="Inbound"/>
                    <Binding Source="{StaticResource selectionHelper}" Path="Outbound"/>
                    <Binding Source="{StaticResource List}" Path="CurrentItem"/>
                </MultiBinding>
            </nixxis:NixxisTabControl.Visibility>

            <!--Region General-->
            <nixxis:NixxisTabItem>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Campaign.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <!--ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Button local:RightsManagement.Rights="Campaign.ConvertToAdvanced" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.ConvertToAdvanced}" VerticalAlignment="Center" Margin="2" Padding="5" Grid.ColumnSpan="3" Click="Button_Click">
                        <Button.Visibility>
                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="false,true" TargetNullValue="Collapsed">
                                <Binding Path="Advanced"></Binding>
                                <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.ConvertToAdvanced"></Binding>
                            </MultiBinding>
                        </Button.Visibility>
                        <TextBlock Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Convert to advanced campaign'}"></TextBlock>
                    </Button>

                    <ScrollViewer Grid.Row="1" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <nixxis:NixxisStackPanel>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding Id, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Description" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Description}" Text="{Binding Description}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Group:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.GroupKey" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.GroupKey}" ItemsSource="{Binding GroupKeys}" SelectedItem="{Binding GroupKey}" Text="{Binding GroupKey}" IsEditable="True"></ComboBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Security context:'}">
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.SecurityContext" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.SecurityContext" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <CheckBox local:RightsManagement.Rights="Campaign.AutomaticRecording" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.AutomaticRecording}" IsThreeState="True" ToolTip="{Binding AutomaticRecordingDescription}" IsChecked="{Binding AutomaticRecording}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Record all this campaign conversations automatically'}"></CheckBox>

                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Grid.Row="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" Grid.Row="1" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <nixxis:NixxisStackPanel>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Appointments context:'}"></Label>
                            <ComboBox Name="CampaignAppointmentsContext1" local:RightsManagement.Rights="Campaign.AppointmentsContext" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.AppointmentsContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource AppointmentsContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding AppointmentsContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="AppointmentsContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox Name="CampaignAppointmentsContext2" local:RightsManagement.Rights="Campaign.AppointmentsContext" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.AppointmentsContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource AppointmentsContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding AppointmentsContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                                        <Binding Path="AppointmentsContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Number format:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.NumberFormat" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.NumberFormat}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource NumberFormats}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding NumberFormat.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            </ComboBox>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Data source:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.DataSource" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.DataSource}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource dataSourceTypes}}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding CustomDataSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            </ComboBox>

                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                </Grid>

                <!--/ScrollViewer-->

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Standard datasource-->
            <nixxis:NixxisTabItem Name="StandardDataSourceTab"  Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Standard}, FallbackValue=Collapsed }" >

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Field.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Standard data source'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel>

                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.StandardDataSource.SelectExistingDatabase" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.SelectExistingDatabase}" VerticalAlignment="Center" Name="chkSelectExistingDatabase"  IsChecked="{Binding SpecifyDatabase}" DetailContent="{Binding DatabaseName}" DetailVisibility="{Binding ElementName=chkSelectExistingDatabase, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Specify the database'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSelectExistingDatabase, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Database:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.StandardDataSource.ExistingDatabase" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.ExistingDatabase}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding DatabasesList}" SelectedValue="{Binding DatabaseName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='User table:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.StandardDataSource.UserTable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.UserTable}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding TablesList}" SelectedValuePath="TableName" SelectedValue="{Binding UserTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Background="{Binding Path=Comment, Converter={StaticResource warnConverter}}" >
                                                    <TextBlock Text="{Binding Description}" ></TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.StandardDataSource.SelectExistingSystemTable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.SelectExistingSystemTable}" VerticalAlignment="Center" Name="chkSelectExistingSystemTable"  IsChecked="{Binding SpecifySystemTable}" DetailContent="{Binding SystemTable}" DetailVisibility="{Binding ElementName=chkSelectExistingSystemTable, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Select existing system table'}"></nixxis:NixxisDetailedCheckBox>
                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSelectExistingSystemTable, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                        <nixxis:NixxisStackPanel>
                                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='System table:'}"></Label>
                                            <ComboBox local:RightsManagement.Rights="Campaign.StandardDataSource.ExistingSytemTable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.ExistingSytemTable}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding TablesList}" SelectedValuePath="TableName" SelectedValue="{Binding SystemTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Background="{Binding Path=Comment, Converter={StaticResource warnConverter}}" >
                                                            <TextBlock Text="{Binding Description}" ></TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>

                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.StandardDataSource.SelectExistingQuotasTable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.SelectExistingQuotasTable}" VerticalAlignment="Center" Name="chkSelectExistingQuotasTable"  IsChecked="{Binding SpecifyQuotasTable}" DetailContent="{Binding QuotasTable}" DetailVisibility="{Binding ElementName=chkSelectExistingQuotasTable, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Select existing quotas table'}"></nixxis:NixxisDetailedCheckBox>
                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSelectExistingQuotasTable, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                        <nixxis:NixxisStackPanel>
                                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Quotas table:'}"></Label>
                                            <ComboBox local:RightsManagement.Rights="Campaign.StandardDataSource.ExistingQuotasTable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.StandardDataSource.ExistingQuotasTable}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding TablesList}" SelectedValuePath="TableName" SelectedValue="{Binding QuotasTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                            <TextBlock Text="{Binding TableName}" ></TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>


                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                            <Label Foreground="Red"
                                Visibility="{Binding DataSourceHasChanged, Converter={StaticResource VisWithCollapseConverter}}">
                                <Label.Content>
                                    <AccessText TextWrapping="Wrap" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='You changed settings related to the datasource. We must commit your changes in order to guarantee that campaign fields list and data management are up to date.'}"></AccessText>
                                </Label.Content>
                            </Label>




                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1"  Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2"  CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <nixxis:NixxisStackPanel>



                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                </Grid>


            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Fields-->
            <nixxis:NixxisTabItem Name="DataTab"  Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Standard}, FallbackValue=Collapsed}">

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Field.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Fields'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Fields" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Fields}" Name="DGData" DefaultSortOrder="Name" EditMode="SingleClickWhenSelected" ItemsSource="{Binding UserFields}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed">
                    <nixxis:NixxisDataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn IsReadOnly="true" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Name'}" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>

                        <DataGridTextColumn IsReadOnly="true" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='InitialName'}" Binding="{Binding InitialName}"></DataGridTextColumn>

                        <nixxis:NixxisDataGridComboBoxColumn IsReadOnly="True" EditingElementStyle="{StaticResource {x:Type ComboBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Type'}" SelectedValueBinding="{Binding DBType, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"  SelectedValuePath="EnumValue" ItemsSource="{Binding Source={StaticResource DBTypes}}"/>

                        <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Length'}" IsReadOnly="True">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.String}}" Text="{Binding Length, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <nixxis:NumericUpDown Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.String}}" Value="{Binding Length, UpdateSourceTrigger=PropertyChanged}" MinimumValue="-1" Increment="1" NumberFormat="0"></nixxis:NumericUpDown>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>

                        </DataGridTemplateColumn>

                        <!--nixxis:NixxisDataGridComboBoxColumn EditingElementStyle="{StaticResource {x:Type ComboBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Meaning'}" SelectedValueBinding="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"  SelectedValuePath="EnumValue" ItemsSource="{Binding Source={StaticResource UserMeanings}}" >
                        </nixxis:NixxisDataGridComboBoxColumn-->


                        <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Meaning'}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FieldMeaning}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.String}}" ItemsSource="{Binding Source={StaticResource UserMeaningsNoQuotas}}" SelectedValuePath="EnumValue" SelectedValue="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Char}}" ItemsSource="{Binding Source={StaticResource UserMeaningsNoQuotas}}" SelectedValuePath="EnumValue" SelectedValue="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Integer}}" ItemsSource="{Binding Source={StaticResource UserMeanings}}" SelectedValuePath="EnumValue" SelectedValue="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Float}}" ItemsSource="{Binding Source={StaticResource UserMeaningsNoQuotas}}" SelectedValuePath="EnumValue" SelectedValue="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Datetime}}" ItemsSource="{Binding Source={StaticResource UserMeaningsNoQuotas}}" SelectedValuePath="EnumValue" SelectedValue="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Boolean}}" ItemsSource="{Binding Source={StaticResource UserMeanings}}" SelectedValuePath="EnumValue" SelectedValue="{Binding FieldMeaning, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridCheckBoxColumn IsReadOnly="True"  ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Unique'}" Binding="{Binding IsUniqueConstraint, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>

                        <nixxis:NixxisDataGridCheckBoxColumn IsReadOnly="True" EnabledBinding="{Binding IsUniqueConstraint, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolInverter}}"  ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Indexed'}" Binding="{Binding IsIndexed, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridCheckBoxColumn>

                        <!--<nixxis:NixxisDataGridCheckBoxColumn IsReadOnly="True" EnabledBinding="{Binding IsUniqueConstraint, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolInverter}}"  ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Indexed'}" Binding="{Binding IsIndexed, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridCheckBoxColumn>-->

                    </nixxis:NixxisDataGrid.Columns>
                </nixxis:NixxisDataGrid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Custom datasource-->
            <nixxis:NixxisTabItem Name="CustomDataSourceTab"  Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Custom}, FallbackValue=Collapsed}" >

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Field.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Custom data source'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>


                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" ></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Xml Configuration:'}"></Label>
                    <TextBox AcceptsReturn="True" TextWrapping="Wrap" Grid.Row="1" local:RightsManagement.Rights="Campaign.CustomDataSource" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.CustomDataSource}" Validation.Error="ShortCodeUpdate_Error" Text="{Binding CustomConfigText, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"></TextBox>

                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Salesforce datasource-->
            <nixxis:NixxisTabItem Name="SalesforceDataSourceTab"  Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}, FallbackValue=Collapsed}" >

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="80" Height="25" Source="Images\AdminSmall_Salesforce.png"/>
                        <!--TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Salesforce data source'}"></TextBlock-->
                    </StackPanel>
                </TabItem.Header>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>


                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel>

                            <Image Width="55" Height="39" Source="Images\SFLogo.png" nixxis:NixxisStackPanel.ActAsLabeled="True" ></Image>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Connection:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.Connection" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Salesforce.Connection}" Text="{Binding SalesforceConnection}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Login:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.Login" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Salesforce.Login}" Text="{Binding SalesforceLogin}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Password:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.Password" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Salesforce.Password}" Text="{Binding SalesforcePassword}"></TextBox>

                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1"  Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2"  CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <nixxis:NixxisStackPanel>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Priority field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldPriority" Text="{Binding SalesForceFieldPriority}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Status field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldStatus" Text="{Binding SalesForceFieldStatus}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target destination field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldTargetDestination" Text="{Binding SalesForceFieldTargetDestination}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target handler field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldTargetHandler" Text="{Binding SalesForceFieldTargetHandler}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Dial start date field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldDialStartDate" Text="{Binding SalesForceFieldDialStartDate}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last contact id field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastContactId" Text="{Binding SalesForceFieldLastContactId}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last dial status field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastDialStatus" Text="{Binding SalesForceFieldLastDialStatus}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last dialer trial field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastDialerTry" Text="{Binding SalesForceFieldLastDialerTry}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last agent id field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastAgentId" Text="{Binding SalesForceFieldLastAgentId}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last agent description field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastAgentDescription" Text="{Binding SalesForceFieldLastAgentDescription}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last activity id field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastActivityId" Text="{Binding SalesForceFieldLastActivityId}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last activity description field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastActivityDescription" Text="{Binding SalesForceFieldLastActivityDescription}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last qualification id field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastQualificationId" Text="{Binding SalesForceFieldLastQualificationId}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Last qualification description field:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Salesforce.SalesForceFieldLastQualificationDescription" Text="{Binding SalesForceFieldLastQualificationDescription}"></TextBox>


                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                </Grid>


            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Quotas-->
            <nixxis:NixxisTabItem Name="QuotasTab">

                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" FallbackValue="Collapsed" TargetNullValue="Collapsed">
                        <Binding Path="CustomDataSource" Converter="{StaticResource EqCConverter}" ConverterParameter="{x:Static adminlink:DataSourceType.Standard}"></Binding>
                        <Binding Path="QuotaFields" Converter="{StaticResource containsItems}" UpdateSourceTrigger="PropertyChanged"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Field.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Quotas'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>

                        <nixxis:NixxisStackPanel Grid.Row="0">
                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Quotas.TimeRelation" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.TimeRelation}" VerticalAlignment="Center" Name="chkQuotasTimeRelated"  IsChecked="{Binding QuotasAreTimeRelated}" DetailContent="{Binding QuotasTimeRelatedDescription}" DetailVisibility="{Binding ElementName=chkQuotasAreTimeRelated, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Quotas are time related'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkQuotasTimeRelated, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Time related field:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Quotas.TimeRelatedField" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.TimeRelatedField}" ItemsSource="{Binding DateTimeFields}"  DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id" SelectedValue="{Binding QuotasTimeRelatedField, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ></ComboBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.Quotas.TimeRelatedFieldIsNow" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.TimeRelatedFieldIsNow}" IsChecked="{Binding QuotasTimeRelatedFieldIsNow}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Field is related to present time'}"></CheckBox>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Granularity:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Quotas.Granularity" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.Granularity}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding QuotasGranularity, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{StaticResource timeRelatedQuotaGranularities}"></ComboBox>


                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Quotas.MinimumDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.MinimumDelay}" Name="ndcbMinimumDelayLimit" IsChecked="{Binding QuotaMinimumDelayLimited}" DetailContent="{Binding QuotasMinimumDelay, Converter={StaticResource durationConverter2}}" DetailVisibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Minimum delay'}"></nixxis:NixxisDetailedCheckBox>
                                    <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Quotas.MinimumDelay"  Visibility="{Binding ElementName=ndcbMinimumDelayLimit, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.MinimumDelay}" ShowSeconds="False" Duration="{Binding QuotasMinimumDelay, Converter={StaticResource CoefConverter}, ConverterParameter=60}"></nixxis:DurationPicker>


                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Quotas.MaximumDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.MaximumDelay}" Name="ndcbMaximumDelayLimit" IsChecked="{Binding QuotaMaximumDelayLimited}" DetailContent="{Binding QuotasMaximumDelay, Converter={StaticResource durationConverter2}}" DetailVisibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Maximum delay'}"></nixxis:NixxisDetailedCheckBox>
                                    <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Quotas.MaximumDelay"  Visibility="{Binding ElementName=ndcbMaximumDelayLimit, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Quotas.MaximumDelay}" ShowSeconds="False" Duration="{Binding QuotasMaximumDelay, Converter={StaticResource CoefConverter}, ConverterParameter=60}"></nixxis:DurationPicker>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>
                        </nixxis:NixxisStackPanel>

                        <GroupBox Margin="0,20,0,0" Grid.Row="1" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List of quota fields and their settings:'}">

                            <Grid Margin="10,15,10,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>

                                <nixxis:NixxisDataGrid Grid.Row="0" local:RightsManagement.Rights="Campaign.Quotas" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Quotas}" Name="DGQuotas" DefaultSortOrder="Name" EditMode="SingleClickWhenSelected" ItemsSource="{Binding QuotaFields}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed">
                                    <nixxis:NixxisDataGrid.Columns>
                                        <DataGridTemplateColumn IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTextColumn IsReadOnly="true" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Name'}" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                                        <DataGridTextColumn IsReadOnly="true" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Computation method'}" Binding="{Binding QuotaComputationMethod, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource quotaComputationMehodTranslator}}"></DataGridTextColumn>
                                        <DataGridTextColumn IsReadOnly="true" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target'}" Binding="{Binding QuotaTarget, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                                        <DataGridTextColumn IsReadOnly="true" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target computation method'}" Binding="{Binding QuotaTargetComputationMethod, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource quotaTargetComputationMehodTranslator}}"></DataGridTextColumn>

                                    </nixxis:NixxisDataGrid.Columns>
                                </nixxis:NixxisDataGrid>

                                <nixxis:NixxisStackPanel Grid.Row="1">

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaTarget, UpdateSourceTrigger=PropertyChanged}" NumberFormat="0" MinimumValue="0"></nixxis:NumericUpDown>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target computation method:'}"></Label>
                                    <ComboBox DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaTargetComputationMethod, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource quotasTargetComputationMethodsHelper}}" ></ComboBox>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Computation method:'}"></Label>
                                    <ComboBox IsEnabled="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaComputationMethodReadOnly, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolInverter}}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaComputationMethod, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource quotasComputationMethodsHelper}}" ></ComboBox>

                                    <Label Visibility="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaComputationMethod, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static crshared:QuotaComputationMethod.Formula}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Formula:'}"></Label>
                                    <TextBox Visibility="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaComputationMethod, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static crshared:QuotaComputationMethod.Formula}}" Text="{Binding ElementName=DGQuotas, Path=SelectedItem.QuotaFormula, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                                </nixxis:NixxisStackPanel>

                            </Grid>

                        </GroupBox>

                    </Grid>

                </ScrollViewer>


            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Qualifications-->
            <nixxis:NixxisTabItem Name="QualificationsTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Qualification.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualifications'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Padding" Value="1,0,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="HoverOn">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="HoverOff">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="SelectedOn">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="SelectedOff">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19" Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="30" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" />
                                            <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3">
                                                <Grid Width="Auto" Height="Auto">
                                                    <!--Border x:Name="MainBorder" Opacity="0.25" Background="{DynamicResource NormalBrush}" CornerRadius="2,2,2,2"/-->
                                                    <Border x:Name="SelectionBorder" Opacity="0" Background="{DynamicResource SelectedBackgroundBrush}" CornerRadius="2,2,2,2"/>
                                                    <Border x:Name="HoverBorder" Opacity="0" Background="{StaticResource SelectedBackgroundBrush}" CornerRadius="2,2,2,2"/>
                                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Height="Auto" Margin="2,0,2,0" />


                                                </Grid>
                                            </Border>

                                            <Line Grid.Column="2" Stroke="{DynamicResource SelectedBackgroundBrush}" StrokeThickness="10" X1="0" Y1="12" X2="19" Y2="12" StrokeStartLineCap="Flat"  Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" ></Line>
                                            <Line Grid.Column="2" Stroke="{DynamicResource SelectedBackgroundBrush}" StrokeThickness="20" X1="19" Y1="12" X2="20" Y2="12" StrokeEndLineCap="Triangle" Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" ></Line>

                                            <!--<Canvas Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" Width="10" Height="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
                                        <Path Stroke="{DynamicResource SelectedBackgroundBrush}" StrokeThickness="2" Data="M-27,-4 L-22,0 -27,4">
                                            <Path.RenderTransform>
                                                <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}" Y="0" ></TranslateTransform>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Canvas>-->


                                            <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOn_BeginStoryboard1"/>
                                                </Trigger.ExitActions>
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                                </Trigger.EnterActions>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="IsSelectionActive" Value="false" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                <Setter Property="Background" TargetName="Selection_Border" Value="{DynamicResource SelectedBackgroundBrush}" />
                                                <Setter Property="Opacity" TargetName="Selection_Border" Value="0.8" />
                                                <Setter Property="BorderBrush" TargetName="Selection_Border" Value="{DynamicResource NormalBorderBrush}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                                </MultiTrigger.ExitActions>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" SourceName="Selection_Border" Value="True" />
                                                    <Condition Property="IsSelected" Value="False" />
                                                </MultiTrigger.Conditions>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="IsMouseOver" Value="true" SourceName="Selection_Border" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Selection_Border" Value="{DynamicResource SelectedBackgroundBrush}" />
                                                <Setter Property="Opacity" TargetName="Selection_Border" Value="0.8" />
                                                <Setter Property="BorderBrush" TargetName="Selection_Border" Value="{DynamicResource NormalBorderBrush}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>

                    <nixxis:NixxisTreeView  Margin="0,0,5,0" Name="QualifsTree" Grid.IsSharedSizeScope="True" ItemsSource="{Binding Qualification.Target.Children, Converter={StaticResource SortQualifsConverter}}">
                        <nixxis:NixxisTreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem local:RightsManagement.Rights="Campaign.Qualification.Add" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Add qualification'}" Command="local:AdminFrameSet.AdminObjectAddOperation" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                            </ContextMenu>
                        </nixxis:NixxisTreeView.ContextMenu>
                    </nixxis:NixxisTreeView>

                    <GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <!--<ScrollViewer Margin="5,0,0,0" Grid.Column="2" CanContentScroll="False">-->
                    <nixxis:NixxisTabControl Name="TabControlToTrace" Grid.Column="2" TabStripPlacement="Left" 
                                        IsEnabled="{Binding ElementName=QualifsTree, Path=SelectedItem, Converter={StaticResource IneqConverter}}">
                        <!--General-->
                        <nixxis:NixxisTabItem Name="TabItemGeneralToTrace">

                            <nixxis:NixxisTabItem.Header>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Width="25" Height="25" Source="Images\Activities_Search.png"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                                </StackPanel>
                            </nixxis:NixxisTabItem.Header>

                            <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                    <TextBox Grid.Row="1" Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                        Text="{Binding ElementName=QualifsTree, Path=SelectedItem.Id, Mode=OneWay}"></TextBox>

                                    <Label Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>

                                    <TextBox local:RightsManagement.Rights="Campaign.Qualification.Description" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Qualification.Description}" Grid.Row="3" Text="{Binding ElementName=QualifsTree, Path=SelectedItem.Description}"></TextBox>

                                    <ContentControl Grid.Row="4" Visibility="{Binding ElementName=QualifsTree, Path=SelectedItem.Children.Count,  FallbackValue={x:Static pres:Visibility.Collapsed}, Converter={StaticResource IneqCConverter}, ConverterParameter=0}" Content="{Binding ElementName=QualifsTree, Path=SelectedItem}" ContentTemplate="{StaticResource LeafQualification}"></ContentControl>

                                </Grid>
                            </ScrollViewer>

                        </nixxis:NixxisTabItem>

                        <!--Affectations-->
                        <!-- Visibility="{Binding Advanced, Converter={StaticResource VisWithCollapseConverter}}" -->
                        <nixxis:NixxisTabItem Name="TabItemAffectationsToTrace" Visibility="{Binding Advanced, Converter={StaticResource VisWithCollapseConverter}}"  >
                            <nixxis:NixxisTabItem.Header>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Width="25" Height="25" Source="Images\Activities_Search.png"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Affectation'}"></TextBlock>
                                </StackPanel>
                            </nixxis:NixxisTabItem.Header>

                            <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Affectations" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Affectations}" DefaultSortOrder="Item.DisplayText" Margin="5,0,0,0" EditMode="SingleClick" ItemsSource="{Binding ElementName=QualifsTree, Path=SelectedItem.CheckedActivitiesExclusions}"  CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                                <nixxis:NixxisDataGrid.Columns>
                                    <DataGridTemplateColumn IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding Item, Converter={StaticResource adminObjectConverter}}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolInverter}}"></DataGridCheckBoxColumn>
                                    <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Affectation'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                </nixxis:NixxisDataGrid.Columns>
                                <nixxis:NixxisDataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </nixxis:NixxisDataGrid.ContextMenu>
                            </nixxis:NixxisDataGrid>
                        </nixxis:NixxisTabItem>

                    </nixxis:NixxisTabControl>
                    <!--</ScrollViewer>-->


                </Grid>
            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--region Inbound-->
            <nixxis:NixxisTabItem Name="InboundTab" Visibility="{Binding Path=Advanced, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false, FallbackValue=Collapsed}">

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Inbound.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Inbound'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid  >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <CheckBox local:RightsManagement.Rights="Campaign.Inbound.IsActive" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.IsActive}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" IsChecked="{Binding HasSystemInboundActivity}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Inbound is active'}"></CheckBox>

                    <Grid Margin="20,0,0,0" Grid.Row="1" Visibility="{Binding HasSystemInboundActivity, Converter={StaticResource VisWithCollapseConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                            <nixxis:NixxisStackPanel>

                                <Label Visibility="{Binding SystemInboundActivity.Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Inbound calls are currently accepted'}"></Label>
                                <Label Visibility="{Binding SystemInboundActivity.Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Inbound calls are currently rejected'}"></Label>
                                <ToggleButton IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Paused}" IsChecked="{Binding SystemInboundActivity.Paused}">
                                    <Grid>
                                        <TextBlock Visibility="{Binding SystemInboundActivity.Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to reject inbound calls'}"></TextBlock>
                                        <TextBlock Visibility="{Binding SystemInboundActivity.Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to accept inbound calls'}"></TextBlock>
                                    </Grid>
                                </ToggleButton>

                                <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding SystemInboundActivity.Id, Mode=OneWay}"></TextBox>


                                <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination:'}"></Label>

                                <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Destination" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Destination}" 
                                          IsSynchronizedWithCurrentItem="False" 
                                          ItemsSource="{Binding SystemInboundActivity.NumberingPlanEntries, Converter={StaticResource cboConverter}}" 
                                          DisplayMemberPath="DisplayText" 
                                          SelectedValuePath="Id" 
                                          Visibility="{Binding SystemInboundActivity.PredefinedDestination.TargetId, Converter={StaticResource isDummyId}}"
                                          SelectedValue="{Binding SystemInboundActivity.PredefinedDestination.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          Text="{Binding SystemInboundActivity.TempDestination, UpdateSourceTrigger=LostFocus}">

                                    <ComboBox.IsEditable>
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsNotCloudOrSuperUser"></Binding>
                                    </ComboBox.IsEditable>

                                    <ComboBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                        </ContextMenu>
                                    </ComboBox.ContextMenu>
                                </ComboBox>

                                <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Destination" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Destination}" 
                                          IsSynchronizedWithCurrentItem="False" 
                                          ItemsSource="{Binding SystemInboundActivity.NumberingPlanEntriesNoDummies, Converter={StaticResource cboConverter}}" 
                                          DisplayMemberPath="DisplayText" 
                                          SelectedValuePath="Id" 
                                          Visibility="{Binding SystemInboundActivity.PredefinedDestination.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}"
                                          SelectedValue="{Binding SystemInboundActivity.PredefinedDestination.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          Text="{Binding SystemInboundActivity.TempDestination, UpdateSourceTrigger=LostFocus}">

                                    <ComboBox.IsEditable>
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsNotCloudOrSuperUser"></Binding>
                                    </ComboBox.IsEditable>

                                    <ComboBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                        </ContextMenu>
                                    </ComboBox.ContextMenu>
                                </ComboBox>





                                <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                                <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Script" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True"   ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Text="{Binding SystemInboundActivity.ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></ComboBox>

                                <CheckBox local:RightsManagement.Rights="Campaign.Inbound.GenerateRingback" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.GenerateRingback}" IsChecked="{Binding SystemInboundActivity.Ring}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Generate ringback'}"></CheckBox>

                                <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.LinesRestriction" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.LinesRestriction}" VerticalAlignment="Center" Name="chkSysInboundRestricted"  IsChecked="{Binding SystemInboundActivity.LinesAreRestricted}" DetailContent="{Binding SystemInboundActivity.LinesRestrictionDescription}" DetailVisibility="{Binding ElementName=chkSysInboundRestricted, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Restrict the number of lines'}"></nixxis:NixxisDetailedCheckBox>
                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSysInboundRestricted, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                    <nixxis:NixxisStackPanel>
                                        <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Maximum number of lines:'}"></Label>
                                        <nixxis:NumericUpDown Value="{Binding SystemInboundActivity.Lines}" NumberFormat="0" MinimumValue="0"></nixxis:NumericUpDown>
                                    </nixxis:NixxisStackPanel>
                                </GroupBox>

                                <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.Planning" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning}" Checked="chkSysInboundPlanning_Checked" IsChecked="{Binding SystemInboundActivity.HasPlanning}" VerticalAlignment="Center" Name="chkSysInboundPlanning"  DetailContent="{Binding SystemInboundActivity.PlanningSettings}" DetailVisibility="{Binding ElementName=chkSysInboundPlanning, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use planning'}"></nixxis:NixxisDetailedCheckBox>
                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSysInboundPlanning, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                    <nixxis:NixxisStackPanel>

                                        <Label Grid.Row="0" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Planning used to specify opening and closing schedule:'}"></Label>
                                        <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Inbound.Planning" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Plannings}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                    <Binding Path="SystemInboundActivity.Planning.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                                </MultiBinding>
                                            </ComboBox.Visibility>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>
                                        <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Planning" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource PlanningsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                    <Binding Path="SystemInboundActivity.Planning.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                                </MultiBinding>
                                            </ComboBox.Visibility>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>


                                        <local:OverflowHelper
                                    Prompts="{Binding SystemInboundActivity.AllPrompts, Mode=OneWay}"
                                    Visibility="{Binding SystemInboundActivity.Planning.Target, Converter={StaticResource EqCConverter}}"
                                    Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when the planning indicates it is closed:'}"
                                    OverflowActionType="{Binding SystemInboundActivity.ClosedActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    OverflowMessage="{Binding SystemInboundActivity.ClosedMessage}" 
                                    OverflowReroutePrompt="{Binding SystemInboundActivity.ClosedReroutePrompt}"
                                    Preprocessors="{Binding SystemInboundActivity.Preprocessors, Mode=OneWay}" 
                                    OverflowPreprocessor="{Binding SystemInboundActivity.ClosedPreprocessor, Mode=OneWay}" 
                                    OverflowPreprocessorParams="{Binding SystemInboundActivity.ClosedPreprocessorParams}"
                                    OverflowPreprocessorConfig="{Binding SystemInboundActivity.ClosedPreprocessorConfig}"
                                    OverflowRerouteDestination ="{Binding SystemInboundActivity.ClosedRerouteDestination}"></local:OverflowHelper>

                                    </nixxis:NixxisStackPanel>
                                </GroupBox>


                                <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.NoAgent" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.NoAgent}" Checked="chkSysInboundNoAgent_Checked" IsChecked="{Binding SystemInboundActivity.NoAgentActionType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:OverflowActions.None}}" VerticalAlignment="Center" Name="chkSysInboundNoAgent"  DetailContent="{Binding SystemInboundActivity.NoAgentActionDescription}" DetailVisibility="{Binding ElementName=chkSysInboundNoAgent, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Handle no agent situation'}"></nixxis:NixxisDetailedCheckBox>
                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSysInboundNoAgent, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                    <local:OverflowHelper Prompts="{Binding SystemInboundActivity.AllPrompts, Mode=OneWay}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when emmergency occurs'}" OverflowActionType="{Binding SystemInboundActivity.NoAgentActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                          OverflowMessage="{Binding SystemInboundActivity.NoAgentMessage}" 
                                                          OverflowReroutePrompt="{Binding SystemInboundActivity.NoAgentReroutePrompt}" 
                                                          Preprocessors="{Binding SystemInboundActivity.Preprocessors, Mode=OneWay}" OverflowPreprocessor="{Binding SystemInboundActivity.NoAgentPreprocessor, Mode=OneWay}" OverflowPreprocessorParams="{Binding SystemInboundActivity.NoAgentPreprocessorParams}" OverflowPreprocessorConfig="{Binding SystemInboundActivity.NoAgentPreprocessorConfig}" OverflowRerouteDestination ="{Binding SystemInboundActivity.NoAgentRerouteDestination}"></local:OverflowHelper>

                                </GroupBox>


                                <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.GenerateOverflow" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.GenerateOverflow}"                     IsChecked="{Binding SystemQueue.OverflowCondition, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:OverflowConditions.None}}" VerticalAlignment="Center" Name="chkOverflow" DetailContent="{Binding SystemQueue.OverflowSettings}" DetailVisibility="{Binding ElementName=chkOverflow, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Generate overflow'}"></nixxis:NixxisDetailedCheckBox>

                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkOverflow, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                    <local:OverflowConditionHelper  
                                        Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Condition triggering the overflow:'}" 
                                        OverflowCondition="{Binding SystemQueue.OverflowCondition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                        OverflowConditionItemsInQueueThreshold="{Binding SystemQueue.OverflowConditionItemsInQueueThreshold}" 
                                        OverflowConditionMaxWait="{Binding SystemQueue.OverflowConditionMaxWait}" 
                                        OverflowConditionMaxEWT="{Binding SystemQueue.OverflowConditionMaxEWT}" 
                                        OverflowConditionRatioInQueueAgents="{Binding SystemQueue.OverflowConditionRatioInQueueAgents}" 
                                        OverflowConditionAgentsReadySmallerThanThreshold="{Binding SystemQueue.OverflowConditionAgentsReadySmallerThanThreshold}">
                                    </local:OverflowConditionHelper>
                                </GroupBox>

                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkOverflow, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                    <local:OverflowHelper Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when overflow is triggered:'}" Prompts="{Binding SystemInboundActivity.AllPrompts, Mode=OneWay}" OverflowActionType="{Binding SystemQueue.OverflowActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                          OverflowMessage="{Binding SystemQueue.OverflowMessage}" 
                                                          OverflowReroutePrompt="{Binding SystemQueue.OverflowReroutePrompt}"
                                                          Preprocessors="{Binding SystemInboundActivity.Preprocessors, Mode=OneWay}" OverflowPreprocessor="{Binding SystemQueue.OverflowPreprocessor, Mode=OneWay}" OverflowPreprocessorParams="{Binding SystemQueue.OverflowPreprocessorParams}" OverflowPreprocessorConfig="{Binding SystemQueue.OverflowPreprocessorConfig}" OverflowRerouteDestination ="{Binding SystemQueue.OverflowRerouteDestination}"></local:OverflowHelper>
                                </GroupBox>

                                <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.CallbackActivity" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.CallbackActivity}" IsChecked="{Binding SystemCallbackActivity.Paused, Converter={StaticResource BoolInverter}}" VerticalAlignment="Center" Name="chkGenerateCallabck"  DetailContent="{nixxis:FormatString BindTo={Binding SystemCallbackActivity.OutboundMode}, TranslationContext={StaticResource tcx},FormatString='using {0}'}" DetailVisibility="{Binding ElementName=chkGenerateCallabck, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Generate callbacks'}"></nixxis:NixxisDetailedCheckBox>

                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkGenerateCallabck, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                    <nixxis:NixxisStackPanel>

                                        <RadioButton IsChecked="{Binding SystemCallbackActivity.OutboundMode, Converter={StaticResource EqConverter}, ConverterParameter={x:Static adminlink:DialingMode.Progressive}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use progressive dialing mode'}"></RadioButton>

                                        <RadioButton IsChecked="{Binding SystemCallbackActivity.OutboundMode, Converter={StaticResource EqConverter}, ConverterParameter={x:Static adminlink:DialingMode.Preview}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use preview dialing mode'}"></RadioButton>

                                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Originator:'}"></Label>
                                        <TextBox Text="{Binding SystemCallbackActivity.Originator}"></TextBox>

                                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Ring time:'}"></Label>
                                        <nixxis:DurationPicker Duration="{Binding SystemCallbackActivity.RingTime}"></nixxis:DurationPicker>

                                        <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" IsEditable="True"  ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding SystemCallbackActivity.ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SystemCallbackActivity.Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></ComboBox>

                                    </nixxis:NixxisStackPanel>
                                </GroupBox>









                                <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkCampInPostWrapupBehavior" IsChecked="{Binding SystemInboundActivity.IsPostWrapupBehaviorDefined}" DetailContent="{Binding SystemInboundActivity.PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkCampInPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampInPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                    <nixxis:NixxisStackPanel>


                                        <CheckBox Name="chkCampInModifyWrapupTime" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding SystemInboundActivity.IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                        <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampInModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                            <RadioButton IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                            <RadioButton IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                            <RadioButton IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                            <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding SystemInboundActivity.WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                        </nixxis:NixxisStackPanel>

                                        <CheckBox  local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding SystemInboundActivity.WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                        <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.Alert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.Alert}" IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                        <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.SupAlert}" IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                        <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.CloseScript}" IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                        <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.ForceReady}" IsChecked="{Binding SystemInboundActivity. PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                    </nixxis:NixxisStackPanel>
                                </GroupBox>

                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampInPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                    <nixxis:NixxisStackPanel>

                                        <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                        <CheckBox Name="chkCampInModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding SystemInboundActivity.IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                        <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampInModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                            <RadioButton IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                            <RadioButton IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                            <RadioButton IsChecked="{Binding SystemInboundActivity.PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                            <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding SystemInboundActivity.AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                        </nixxis:NixxisStackPanel>

                                    </nixxis:NixxisStackPanel>
                                </GroupBox>

                                <CheckBox local:RightsManagement.Rights="Campaign.Inbound.QualificationRequired" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.QualificationRequired}" IsChecked="{Binding SystemInboundActivity.QualificationRequired}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualification is mandatory'}"></CheckBox>

                                <CheckBox local:RightsManagement.Rights="Campaign.Inbound.AutoRecord" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.AutoRecord}" ToolTip="{Binding SystemInboundActivity.AutomaticRecordingDescription}" IsThreeState="True" IsChecked="{Binding SystemInboundActivity.AutomaticRecording}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Record all this activity conversations automatically'}"></CheckBox>

                                <CheckBox local:RightsManagement.Rights="Campaign.Inbound.ListenAllowed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.ListenAllowed}" IsChecked="{Binding SystemInboundActivity.ListenAllowed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Listen allowed to this activity conversations'}"></CheckBox>

                            </nixxis:NixxisStackPanel>

                        </ScrollViewer>

                        <GridSplitter IsTabStop="False" Grid.Column="1" Grid.RowSpan="7" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>


                        <nixxis:NixxisTabControl Grid.Column="2" Visibility="{Binding HasSystemInboundActivity, Converter={StaticResource VisWithCollapseConverter}}" TabStripPlacement="Left">

                            <!--Region Call flow-->
                            <nixxis:NixxisTabItem Name="tabInboundCallFlow">
                                <nixxis:NixxisTabItem.Header>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Image Width="25" Height="25" Source="Images\AdminSmall_CallFlow.png"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Call flow'}"></TextBlock>
                                    </StackPanel>
                                </nixxis:NixxisTabItem.Header>
                                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                    <nixxis:NixxisStackPanel>

                                        <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor:'}"></Label>
                                        <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Inbound.Preprocessor" nixxis:NixxisStackPanel.KeepNextAttached="True" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Preprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                    <Binding Path="SystemInboundActivity.Preprocessor.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                                </MultiBinding>
                                            </ComboBox.Visibility>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>
                                        <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Preprocessor" nixxis:NixxisStackPanel.KeepNextAttached="True" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Preprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                    <Binding Path="SystemInboundActivity.Preprocessor.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                                </MultiBinding>
                                            </ComboBox.Visibility>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>
                                        <Button local:RightsManagement.Rights="Campaign.Inbound.Preprocessor.Configure" Click="ConfigureVoicePreprocessor_Click" >
                                            <Button.IsEnabled>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                                    <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Inbound.Preprocessor.Configure"></Binding>
                                                    <Binding Path="SystemInboundActivity.Preprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                                </MultiBinding>
                                            </Button.IsEnabled>
                                            <Border Height="20" Width="20">
                                                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                            </Border>
                                        </Button>





                                        <ToggleButton local:RightsManagement.Rights="Campaign.Inbound.WaitLoopDescription" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitLoopDescription}" Content="{Binding SystemInboundActivity.WaitLoopDescription}" nixxis:NixxisStackPanel.ActAsLabeled="true" Name="QualifOtherIsExpert" HorizontalAlignment="Left">


                                            <!--TextBlock Text="{Binding SystemInboundActivity.WaitLoopDescription}" TextTrimming="CharacterEllipsis"></TextBlock-->

                                            <ToggleButton.Effect>
                                                <DropShadowEffect></DropShadowEffect>
                                            </ToggleButton.Effect>

                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}" >
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource CheckedGreenBackgroundBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource CheckedGreenBackgroundBrush}"/>
                                                        </Trigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </ToggleButton.Style>

                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis"></TextBlock>
                                                        <!--ContentPresenter Name="cp" Content="{TemplateBinding Content}"></ContentPresenter-->
                                                        <Path Margin="3,0,0,0" Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsChecked, Converter={StaticResource visConverter}, ConverterParameter=false }" HorizontalAlignment="Center" Name="Up_Arrow" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 0 0 L 4 4 L 8 0 Z" />
                                                        <Path Margin="3,0,0,0" Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsChecked, Converter={StaticResource visConverter} }" HorizontalAlignment="Center" Name="Down_Arrow" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 0 4 L 4 0 L 8 4 Z" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </ToggleButton.Template>

                                        </ToggleButton>



                                        <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=QualifOtherIsExpert, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                            <nixxis:NixxisStackPanel>
                                                <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wait music delay:'}"></Label>
                                                <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Inbound.WaitMusicDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitMusicDelay}"  Duration="{Binding SystemInboundActivity.QueueMusicDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="true"></nixxis:DurationPicker>


                                                <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wait music:'}"></Label>
                                                <ComboBox local:RightsManagement.Rights="Campaign.Inbound.WaitMusic" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitMusic}" nixxis:NixxisStackPanel.KeepNextAttached="True" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource WaitMusicProcessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.WaitMusicProcessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                                    <ComboBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                        </ContextMenu>
                                                    </ComboBox.ContextMenu>
                                                </ComboBox>
                                                <Button local:RightsManagement.Rights="Campaign.Inbound.WaitMusicProcessor.Configure" Click="ConfigureWaitMusicProcessor_Click" >
                                                    <Button.IsEnabled>
                                                        <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                                            <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Inbound.WaitMusicProcessor.Configure"></Binding>
                                                            <Binding Path="SystemInboundActivity.WaitMusicProcessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                                        </MultiBinding>
                                                    </Button.IsEnabled>
                                                    <Border Height="20" Width="20">
                                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                                    </Border>
                                                </Button>








                                                <!--TextBox  Text="{Binding SystemInboundActivity.WaitResource}"></TextBox-->

                                                <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Play estimated waiting time:'}"></Label>
                                                <ComboBox DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding SystemInboundActivity.TransmitEWT, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource frequencyHelper}}" ></ComboBox>

                                                <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Play position in queue:'}"></Label>
                                                <ComboBox  DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding SystemInboundActivity.TransmitPosition, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource frequencyHelper}}" ></ComboBox>

                                                <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Loop time:'}"></Label>
                                                <nixxis:DurationPicker Duration="{Binding SystemInboundActivity.WaitMusicLength}"></nixxis:DurationPicker>





                                                <nixxis:NixxisDetailedCheckBox VerticalAlignment="Center" Name="chkSystemPromptForOvf"  IsChecked="{Binding SystemInboundActivity.PromptForOverflow}" DetailContent="{Binding SystemInboundActivity.OverflowPromptDescription}" DetailVisibility="{Binding ElementName=chkSystemPromptForOvf, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Prompt for overflow'}"></nixxis:NixxisDetailedCheckBox>
                                                <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSystemPromptForOvf, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                                    <nixxis:NixxisStackPanel>

                                                        <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Message to prompt:'}"></Label>
                                                        <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" ItemsSource="{Binding SystemInboundActivity.AllPrompts, Mode=OneWay, Converter={StaticResource AtivityPromptsToPromptsConverter}}" SelectedItem="{Binding Path=SystemInboundActivity.OverflowPrompt.Target, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  SelectedValuePath="Id" DisplayMemberPath="DisplayText">
                                                            <ComboBox.ContextMenu>
                                                                <ContextMenu>
                                                                    <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                                </ContextMenu>
                                                            </ComboBox.ContextMenu>
                                                        </ComboBox>
                                                        <nixxis:NixxisPlayback nixxis:NixxisStackPanel.KeepNextAttached="True" Path="{Binding Path=SystemInboundActivity.OverflowPrompt.Target.PathUri}"></nixxis:NixxisPlayback>
                                                        <Button Click="AddPromptToOverflowPrompt">
                                                            <Border Height="20" Width="20">
                                                                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                                            </Border>
                                                        </Button>



                                                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='DTMFs triggering the overflow:'}"></Label>
                                                        <TextBox  Text="{Binding SystemInboundActivity.OverflowActiveDTMFs}"></TextBox>

                                                        <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skipped loops before prompting for the first time:'}"></Label>
                                                        <nixxis:NumericUpDown NumberFormat="0"  Value="{Binding SystemInboundActivity.OverflowPromptStartingLoop}"></nixxis:NumericUpDown>


                                                        <local:OverflowHelper
                                                    Prompts="{Binding SystemInboundActivity.AllPrompts, Mode=OneWay}"
                                                    Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when overflow is requested:'}"                                          
                                                    OverflowActionType="{Binding SystemInboundActivity.OverflowActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                    OverflowMessage="{Binding SystemInboundActivity.OverflowMessage}" 
                                                            OverflowReroutePrompt="{Binding SystemInboundActivity.OverflowReroutePrompt}" 
                                                    Preprocessors="{Binding SystemInboundActivity.Preprocessors, Mode=OneWay}" 
                                                    OverflowPreprocessor="{Binding SystemInboundActivity.OverflowPreprocessor, Mode=OneWay}" 
                                                    OverflowPreprocessorParams="{Binding SystemInboundActivity.OverflowPreprocessorParams}" 
                                                    OverflowPreprocessorConfig="{Binding SystemInboundActivity.OverflowPreprocessorConfig}" 
                                                    OverflowRerouteDestination ="{Binding SystemInboundActivity.OverflowRerouteDestination}"></local:OverflowHelper>

                                                    </nixxis:NixxisStackPanel>


                                                </GroupBox>




                                            </nixxis:NixxisStackPanel>
                                        </GroupBox>





                                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Postprocessor:'}"></Label>
                                        <ComboBox Grid.Row="1" nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.PostProcessor" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostProcessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                    <Binding Path="SystemInboundActivity.Postprocessor.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                                </MultiBinding>
                                            </ComboBox.Visibility>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>
                                        <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.PostProcessor" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostProcessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemInboundActivity.Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.Visibility>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                    <Binding Path="SystemInboundActivity.Postprocessor.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                                </MultiBinding>
                                            </ComboBox.Visibility>
                                            <ComboBox.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </ComboBox.ContextMenu>
                                        </ComboBox>
                                        <Button local:RightsManagement.Rights="Campaign.Inbound.PostProcessor.Configure" Click="ConfigureVoicePostprocessor_Click" >
                                            <Button.IsEnabled>
                                                <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                                    <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Inbound.PostProcessor.Configure"></Binding>
                                                    <Binding Path="SystemInboundActivity.Postprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                                </MultiBinding>
                                            </Button.IsEnabled>
                                            <Border Width="20">
                                                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                            </Border>
                                        </Button>




                                    </nixxis:NixxisStackPanel>
                                </ScrollViewer>
                            </nixxis:NixxisTabItem>
                            <!--EndRegion-->

                            <!--Region Dynamic parameters-->
                            <nixxis:NixxisTabItem Visibility="{Binding Source={StaticResource ParamDefs}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}">
                                <TabItem.Header>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Image Width="25" Height="25" Source="Images\AdminSmall_General.png"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Dynamic parameters'}"></TextBlock>
                                    </StackPanel>
                                </TabItem.Header>

                                <Grid Margin="10" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The list of dynamic parameters and their values:'}"></Label>
                                    <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.DynamicParamaters" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameters}" DefaultSortOrder="Item.DisplayText" Grid.Row="1" Name="DGDynamicParameters" EditMode="SingleClick" ItemsSource="{Binding SystemInboundActivity.CheckedDynamicParameters}"  CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                                        <nixxis:NixxisDataGrid.Columns>
                                            <DataGridTemplateColumn IsReadOnly="True">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Image Source="Images\AdminSmall_General.png"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Parameter'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>

                                            <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action'}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding Link.Action}">
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>

                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <ComboBox Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}"
                                            DisplayMemberPath="Description"  
                                            SelectedValuePath="EnumValue" 
                                            SelectedValue="{Binding Link.Action, UpdateSourceTrigger=PropertyChanged}"
                                            ItemsSource="{Binding Source={StaticResource DynamicParameterActions}}"></ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>


                                            <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Value'}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBlock Text="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}">
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Text}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>

                                                            <TextBlock Text="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}">
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Numeric}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>

                                                            <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Center">
                                                                <CheckBox IsChecked="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}" >
                                                                    <CheckBox.Visibility>
                                                                        <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                            <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Boolean}"></Binding>
                                                                            <Binding Path="HasLink"></Binding>
                                                                        </MultiBinding>
                                                                    </CheckBox.Visibility>
                                                                </CheckBox>
                                                            </ContentControl>

                                                            <TextBlock Text="{Binding Link.Queue.Target.DisplayText, UpdateSourceTrigger=PropertyChanged}" >
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                        <Binding Path="Link.Queue.HasTarget"></Binding>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>

                                                            <TextBlock Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='&lt;None&gt;'}" >
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" ConverterParameter="false,false,true" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                        <Binding Path="Link.Queue.HasTarget"></Binding>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>





                                                            <TextBlock Text="{Binding Link.Prompt.Target.DisplayText, UpdateSourceTrigger=PropertyChanged}" >
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed">
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Prompt}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                        <Binding Path="Link.Prompt.HasTarget"></Binding>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>

                                                            <TextBlock Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='&lt;None&gt;'}" >
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" ConverterParameter="false,false,true" TargetNullValue="Collapsed">
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Prompt}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                        <Binding Path="Link.Prompt.HasTarget"></Binding>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>


                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBox Text="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}">
                                                                <TextBox.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Text}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                    </MultiBinding>
                                                                </TextBox.Visibility>
                                                            </TextBox>

                                                            <nixxis:NumericUpDown Value="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}" NumberFormat="0">
                                                                <nixxis:NumericUpDown.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Numeric}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                    </MultiBinding>
                                                                </nixxis:NumericUpDown.Visibility>
                                                            </nixxis:NumericUpDown>

                                                            <CheckBox IsChecked="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}" >
                                                                <CheckBox.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Boolean}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                    </MultiBinding>
                                                                </CheckBox.Visibility>
                                                            </CheckBox>

                                                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.DynamicParameter.Queue" 
                                                      IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameter.Queue}" 
                                                      IsSynchronizedWithCurrentItem="False" 
                                                      ItemsSource="{Binding Source={StaticResource ListQueuesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                                      SelectedValue="{Binding Link.Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                                <ComboBox.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                        <Binding Path="Link.Queue.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"/>
                                                                    </MultiBinding>
                                                                </ComboBox.Visibility>
                                                            </ComboBox>
                                                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.DynamicParameter.Queue" 
                                                      IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameter.Queue}" 
                                                      IsSynchronizedWithCurrentItem="False" 
                                                      ItemsSource="{Binding Source={StaticResource ListQueues}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                                      SelectedValue="{Binding Link.Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  >
                                                                <ComboBox.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                        <Binding Path="Link.Queue.TargetId" Converter="{StaticResource isDummyId}"/>
                                                                    </MultiBinding>
                                                                </ComboBox.Visibility>

                                                            </ComboBox>

                                                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.DynamicParameter.Prompt" 
                                                      IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameter.Prompt}" 
                                                      IsSynchronizedWithCurrentItem="False" 
                                                                      
                                                      ItemsSource="{Binding ElementName=MySelf, Path=SelectedItem.SystemInboundActivity.AllPrompts, Mode=OneWay, Converter={StaticResource AtivityPromptsToPromptsConverterWithNone}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                                      SelectedValue="{Binding Link.Prompt.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                                <ComboBox.Visibility>
                                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Prompt}"></Binding>
                                                                        <Binding Path="HasLink"></Binding>
                                                                    </MultiBinding>
                                                                </ComboBox.Visibility>
                                                            </ComboBox>

                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>





                                        </nixxis:NixxisDataGrid.Columns>
                                    </nixxis:NixxisDataGrid>
                                </Grid>

                            </nixxis:NixxisTabItem>
                            <!--EndRegion-->

                            <!--Region Skills-->
                            <nixxis:NixxisTabItem Name="tabInboundSkills">
                                <nixxis:NixxisTabItem.Header>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Image Width="25" Height="25" Source="Images\AdminSmall_Skill.png"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skills'}"></TextBlock>
                                    </StackPanel>
                                </nixxis:NixxisTabItem.Header>
                                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default skills required to handle a contact from this context'}"></Label>
                                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.Skills" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Skills}" DefaultSortOrder="Item.DisplayText" Grid.Row="1" Name="DGInboundSkills" EditMode="SingleClick"  ItemsSource="{Binding SystemInboundActivity.CheckedSkills}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                                            <nixxis:NixxisDataGrid.Columns>
                                                <DataGridTemplateColumn IsReadOnly="True">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Image Source="Images\AdminSmall_Skill.png"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                                <!--<nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.Level, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>-->
                                                <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                            </nixxis:NixxisDataGrid.Columns>
                                            <nixxis:NixxisDataGrid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </nixxis:NixxisDataGrid.ContextMenu>
                                        </nixxis:NixxisDataGrid>
                                        <CheckBox local:RightsManagement.Rights="Campaign.Inbound.PreprocessorReplacesSkills" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PreprocessorReplacesSkills}" Margin="0,5,0,0" IsChecked="{Binding SystemInboundActivity.PreprocessorReplacesSkills}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces all default skills (substitue instead of merge)'}"></CheckBox>
                                    </Grid>
                                </ScrollViewer>
                            </nixxis:NixxisTabItem>
                            <!--EndRegion-->

                            <!--Region Languages-->
                            <nixxis:NixxisTabItem Name="tabInboundLanguages">
                                <nixxis:NixxisTabItem.Header>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Image Width="25" Height="25" Source="Images\AdminSmall_Language.png"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Languages'}"></TextBlock>
                                    </StackPanel>
                                </nixxis:NixxisTabItem.Header>
                                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default languages required to handle a contact from this context'}"></Label>
                                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.Languages" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Languages}" DefaultSortOrder="Item.DisplayText" Grid.Row="1"  Name="DGInboundLanguages" EditMode="SingleClick"  ItemsSource="{Binding SystemInboundActivity.CheckedLanguages}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                                            <nixxis:NixxisDataGrid.Columns>
                                                <DataGridTemplateColumn IsReadOnly="True">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Image Source="Images\AdminSmall_Skill.png"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                                <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                            </nixxis:NixxisDataGrid.Columns>
                                            <nixxis:NixxisDataGrid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                </ContextMenu>
                                            </nixxis:NixxisDataGrid.ContextMenu>
                                        </nixxis:NixxisDataGrid>
                                        <CheckBox local:RightsManagement.Rights="Campaign.Inbound.PreprocessorReplacesLanguages" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PreprocessorReplacesLanguages}" Margin="0,5,0,0" IsChecked="{Binding SystemInboundActivity.PreprocessorReplacesLanguages}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces default language'}"></CheckBox>
                                    </Grid>
                                </ScrollViewer>
                            </nixxis:NixxisTabItem>
                            <!--EndRegion-->

                        </nixxis:NixxisTabControl>

                    </Grid>

                </Grid>
            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Outbound-->
            <nixxis:NixxisTabItem Name="OutboundTab" Visibility="{Binding Path=Advanced, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false, FallbackValue=Collapsed}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Outbound.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Outbound'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <CheckBox local:RightsManagement.Rights="Campaign.Outbound.IsActive" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.IsActive}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" IsChecked="{Binding HasSystemOutboundActivity}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Outbound is active'}"></CheckBox>
                    <GroupBox Margin="20,0,0,0" Grid.Row="1" Visibility="{Binding HasSystemOutboundActivity, Converter={StaticResource VisWithCollapseConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer  CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                                <nixxis:NixxisStackPanel>

                                    <Label Visibility="{Binding SystemOutboundActivity.Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The outbound activity is currently running'}"></Label>
                                    <Label Visibility="{Binding SystemOutboundActivity.Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The outbound activity is currently in pause'}"></Label>
                                    <ToggleButton local:RightsManagement.Rights="Campaign.Outbound.Paused" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Paused}" local:RightsManagement.Binding="{Binding SystemOutboundActivity}" IsChecked="{Binding SystemOutboundActivity.Paused}">
                                        <Grid>
                                            <TextBlock Visibility="{Binding SystemOutboundActivity.Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to pause the activity'}"></TextBlock>
                                            <TextBlock Visibility="{Binding SystemOutboundActivity.Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to unpause outbound'}"></TextBlock>
                                        </Grid>
                                    </ToggleButton>

                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                    <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding SystemOutboundActivity.Id, Mode=OneWay}"></TextBox>

                                    <Label Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Salesforce mode:'}"></Label>
                                    <ComboBox Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" local:RightsManagement.Rights="Campaign.Outbound.SalesforceMode" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.SalesforceMode}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding SystemOutboundActivity.SalesforceMode, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding Source={StaticResource salesforceModes} }" ></ComboBox>

                                    <Label Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Salesforce Object:'}"></Label>
                                    <TextBox Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Outbound.Salesforce.Campaign" IsReadOnly="True" Text="{Binding SystemOutboundActivity.SalesforceCampaignDescription}"></TextBox>
                                    <Button Visibility="{Binding CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" local:RightsManagement.Rights="Campaign.Outbound.Salesforce.Choosecampaign" Click="ChooseSalesforceCampaign"  >
                                        <Border Height="20" Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Originator:'}"></Label>
                                    <TextBox local:RightsManagement.Rights="Campaign.Outbound.Originator" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Originator}" Text="{Binding SystemOutboundActivity.Originator}"></TextBox>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Dialing mode:'}"></Label>
                                        <ComboBox local:RightsManagement.Rights="Campaign.Outbound.DialingMode" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.DialingMode}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding SystemOutboundActivity.OutboundMode, UpdateSourceTrigger=PropertyChanged}"  >
                                        <ComboBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource srcChooser}">
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Source="{StaticResource restrictedDialingModeHelper}"></Binding>
                                                <Binding Source="{StaticResource expressRestrictedDialingModeHelper}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.ItemsSource>
                                    </ComboBox>

                                    <Label Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Abandon rate (in %):'}"></Label>
                                    <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.AbandonRate" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AbandonRate}" Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding SystemOutboundActivity.TargetAbandons}"></nixxis:NumericUpDown>

                                    <Label Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Abandon rate (in %):'}"></Label>
                                    <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.AbandonRate" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AbandonRate}" Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding SystemOutboundActivity.TargetAbandons}"></nixxis:NumericUpDown>

                                    <Label Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Power}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Number of lines to dial per agent:'}"></Label>
                                    <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.DialPerAgent" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.DialPerAgent}" Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Power}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding SystemOutboundActivity.DialPerAgent}"></nixxis:NumericUpDown>

                                    <Label Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Max dial per agent:'}"></Label>
                                    <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.MaxDialPerAgent" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.MaxDialPerAgent}" Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding SystemOutboundActivity.MaxDialPerAgent}"></nixxis:NumericUpDown>

                                    <Label Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Max dial per agent:'}"></Label>
                                    <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.MaxDialPerAgent" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.MaxDialPerAgent}" Visibility="{Binding SystemOutboundActivity.OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding SystemOutboundActivity.MaxDialPerAgent}"></nixxis:NumericUpDown>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Ring time:'}"></Label>
                                    <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Outbound.RingTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.RingTime}" Duration="{Binding SystemOutboundActivity.RingTime}"></nixxis:DurationPicker>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Script" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True"  ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding SystemOutboundActivity.ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SystemOutboundActivity.Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></ComboBox>

                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Outbound.LinesRestriction" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.LinesRestriction}" VerticalAlignment="Center" Name="chkSysOutboundRestricted"  IsChecked="{Binding SystemOutboundActivity.LinesAreRestricted}" DetailContent="{Binding SystemOutboundActivity.LinesRestrictionDescription}" DetailVisibility="{Binding ElementName=chkSysOutboundRestricted, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Restrict the number of lines'}"></nixxis:NixxisDetailedCheckBox>
                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSysOutboundRestricted, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                        <nixxis:NixxisStackPanel>
                                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Maximum number of lines:'}"></Label>
                                            <nixxis:NumericUpDown Value="{Binding SystemOutboundActivity.Lines}" NumberFormat="0" MinimumValue="0"></nixxis:NumericUpDown>
                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>



                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkCampOutPostWrapupBehavior" IsChecked="{Binding SystemOutboundActivity.IsPostWrapupBehaviorDefined}" DetailContent="{Binding SystemOutboundActivity.PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkCampOutPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampOutPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                        <nixxis:NixxisStackPanel>


                                            <CheckBox Name="chkCampOutModifyWrapupTime" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding SystemOutboundActivity.IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampOutModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                                <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding SystemOutboundActivity.WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                            <CheckBox  local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding SystemOutboundActivity.WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.Alert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.Alert}" IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.SupAlert}" IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.CloseScript}" IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.ForceReady}" IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampOutPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                        <nixxis:NixxisStackPanel>

                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                            <CheckBox Name="chkCampOutModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding SystemOutboundActivity.IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampOutModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemOutboundActivity.PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                                <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding SystemOutboundActivity.AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>







                                    <CheckBox local:RightsManagement.Rights="Campaign.Outbound.QualificationIsRequired" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.QualificationIsRequired}" IsChecked="{Binding SystemOutboundActivity.QualificationRequired}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualification is mandatory'}"></CheckBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.Outbound.AutoRecord" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AutoRecord}" ToolTip="{Binding SystemOutboundActivity.AutomaticRecordingDescription}" IsThreeState="true" IsChecked="{Binding SystemOutboundActivity.AutomaticRecording}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Record all this activity conversations automatically'}"></CheckBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.Outbound.ListenAllowed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.ListenAllowed}" IsChecked="{Binding SystemOutboundActivity.ListenAllowed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Listen allowed to this activity conversations'}"></CheckBox>

                                </nixxis:NixxisStackPanel>

                            </ScrollViewer>

                            <GridSplitter IsTabStop="False" Grid.Column="1"  Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>


                            <ScrollViewer Grid.Column="2" CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                                <nixxis:NixxisStackPanel>


                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsFullVersion, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Amd settings:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.AmdSettings" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.AmdSettings}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource AmdSettings}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.AmdSettings.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.AmdSettings.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.AmdSettings" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.AmdSettings}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource AmdSettingsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.AmdSettings.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.AmdSettings.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Amd prompt:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outbound.AmdPrompt" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdPrompt}" nixxis:NixxisStackPanel.KeepNextAttached="True" 
                                                    ItemsSource="{Binding SystemOutboundActivity.AllPrompts, Mode=OneWay, Converter={StaticResource AtivityPromptsToPromptsConverterWithNone}}" 
                                                    SelectedValue="{Binding Path=SystemOutboundActivity.AmdPrompt.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                                                    SelectedValuePath="Id" DisplayMemberPath="DisplayText">
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <nixxis:NixxisPlayback local:RightsManagement.Rights="Campaign.Outbound.AmdPrompt" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdPrompt}" nixxis:NixxisStackPanel.KeepNextAttached="True" Path="{Binding Path=SystemOutboundActivity.AmdPrompt.Target.PathUri}"></nixxis:NixxisPlayback>
                                    <Button local:RightsManagement.Rights="Campaign.Outbound.AmdPrompt" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdPrompt}" Click="AddPromptToAmdPrompt">
                                        <Border Height="20" Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Black list:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outbound.BlackList" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.BlackList}" nixxis:NixxisStackPanel.KeepNextAttached="True" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource BlackListProviders}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.BlackListProviderId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    </ComboBox>

                                    <Button local:RightsManagement.Rights="Campaign.Outbound.BlackList" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.BlackList}" Click="ConfigureBlackListProvider_Click" >
                                        <Border Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>

                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsFullVersion, Converter={StaticResource VisWithCollapseConverter}}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Location:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.Location" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Location}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Locations}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.Location.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.Location.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.Location" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Location}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource LocationsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.Location.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}"  TargetNullValue="Collapsed">
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.Location.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>



                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsFullVersion, Converter={StaticResource VisWithCollapseConverter}}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Carrier:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.Carrier" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Carrier}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Carriers}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.Carrier.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.Carrier.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.Carrier" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Carrier}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource CarriersNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.Carrier.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.Carrier.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>


                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsFullVersion, Converter={StaticResource VisWithCollapseConverter}}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Callback rules:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.CallbackRules" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.CallbackRules}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource CallbackRules}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.CallbackRules.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.CallbackRules.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outound.CallbackRules" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.CallbackRules}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource CallbackRulesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.CallbackRules.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                                <Binding Path="SystemOutboundActivity.CallbackRules.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>

                                    <CheckBox IsChecked="{Binding SystemOutboundActivity.AmdSettings.TargetId, Converter={StaticResource EqConverter}, ConverterParameter=defaultamdsettings++++++++++++++}" local:RightsManagement.Rights="Campaign.Outbound.AmdSettings" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdSettings}" Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsFullVersion, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='AMD is active'}"></CheckBox>

                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Outbound.UsePlanning" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.UsePlanning}" Checked="chkSysOutboundPlanning_Checked" IsChecked="{Binding SystemOutboundActivity.HasPlanning}" VerticalAlignment="Center" Name="chkSysOutboundPlanning"  DetailContent="{Binding SystemOutboundActivity.PlanningSettings}" DetailVisibility="{Binding ElementName=chkSysOutboundPlanning, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use planning'}"></nixxis:NixxisDetailedCheckBox>
                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkSysOutboundPlanning, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                        <nixxis:NixxisStackPanel>

                                            <Label Grid.Row="0" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Planning used to specify opening and closing schedule:'}"></Label>
                                            <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Outbound.Planning" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Plannings}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                        <Binding Path="SystemOutboundActivity.Planning.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                                    </MultiBinding>
                                                </ComboBox.Visibility>
                                                <ComboBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                    </ContextMenu>
                                                </ComboBox.ContextMenu>
                                            </ComboBox>
                                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Planning" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource PlanningsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemOutboundActivity.Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                        <Binding Path="SystemOutboundActivity.Planning.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                                    </MultiBinding>
                                                </ComboBox.Visibility>
                                                <ComboBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                    </ContextMenu>
                                                </ComboBox.ContextMenu>
                                            </ComboBox>


                                            <local:OutboundClosingHelper Visibility="{Binding SystemOutboundActivity.Planning.Target, Converter={StaticResource EqCConverter}}"
                                        OutboundClosingActionType="{Binding SystemOutboundActivity.ClosedActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        OutboundClosingDialingMode="{Binding SystemOutboundActivity.ClosedParam, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when the planning indicates it is closed:'}"></local:OutboundClosingHelper>

                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>

                                </nixxis:NixxisStackPanel>

                            </ScrollViewer>

                        </Grid>
                    </GroupBox>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--Endregion-->

            <!--Region Mail-->
            <nixxis:NixxisTabItem Name="MailTab">

                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter}" ConverterParameter="False,True" FallbackValue="Collapsed" >
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                        <Binding Path="Advanced"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Mail.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Mail'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <CheckBox local:RightsManagement.Rights="Campaign.Mail.IsActive" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.IsActive}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" IsChecked="{Binding HasSystemEmailActivity}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Email is active'}"></CheckBox>
                    <GroupBox Margin="20,0,0,0" Grid.Row="1" Visibility="{Binding HasSystemEmailActivity, Converter={StaticResource VisWithCollapseConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer  CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                                <nixxis:NixxisStackPanel>

                                    <Label Visibility="{Binding SystemEmailActivity.Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Emails are currently accepted'}"></Label>
                                    <Label Visibility="{Binding SystemEmailActivity.Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Emails are currently rejected'}"></Label>
                                    <ToggleButton local:RightsManagement.Rights="Campaign.Mail.Paused" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Paused}" IsChecked="{Binding SystemEmailActivity.Paused}">
                                        <Grid>
                                            <TextBlock Visibility="{Binding SystemEmailActivity.Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to reject emails'}"></TextBlock>
                                            <TextBlock Visibility="{Binding SystemEmailActivity.Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to accept emails'}"></TextBlock>
                                        </Grid>
                                    </ToggleButton>

                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                    <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" Text="{Binding SystemEmailActivity.Id, Mode=OneWay}"></TextBox>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination:'}"></Label>
                                    <TextBox Visibility="{Binding Source={StaticResource EmailMediaProviders}, Path=Count, Converter={StaticResource IneqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Mail.Destination" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Destination}" Text="{Binding SystemEmailActivity.Destination}" ></TextBox>
                                    <TextBox Visibility="{Binding Source={StaticResource EmailMediaProviders}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Mail.Destination" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Destination}" Text="{Binding SystemEmailActivity.Destination}" IsReadOnly="True" nixxis:NixxisStackPanel.KeepNextAttached="True" ></TextBox>
                                    <Button Visibility="{Binding Source={StaticResource EmailMediaProviders}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Mail.Destination" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Destination}" Click="ConfigureMailProvider_Click" >
                                        <Border Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Mail.Script" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True"  ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding SystemEmailActivity.ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SystemEmailActivity.Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></ComboBox>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor:'}"></Label>
                                    <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Mail.Preprocessor" nixxis:NixxisStackPanel.KeepNextAttached="True" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Preprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource MailPreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemEmailActivity.Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="SystemEmailActivity.Preprocessor.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Mail.Preprocessor" nixxis:NixxisStackPanel.KeepNextAttached="True" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Preprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource MailPreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemEmailActivity.Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="SystemEmailActivity.Preprocessor.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <Button local:RightsManagement.Rights="Campaign.Mail.Preprocessor" Click="ConfigureMailPreprocessor_Click" >
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                                <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Mail.Preprocessor"></Binding>
                                                <Binding Path="SystemEmailActivity.Preprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                        <Border Height="20" Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Postprocessor:'}"></Label>
                                    <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Mail.Postprocessor" nixxis:NixxisStackPanel.KeepNextAttached="True" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Postprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource MailPreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemEmailActivity.Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="SystemEmailActivity.Postprocessor.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Mail.Postprocessor" nixxis:NixxisStackPanel.KeepNextAttached="True" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Postprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource MailPreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SystemEmailActivity.Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="SystemEmailActivity.Postprocessor.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <Button local:RightsManagement.Rights="Campaign.Mail.Postprocessor" Click="ConfigureMailPostprocessor_Click" >
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                                <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Mail.Postprocessor"></Binding>
                                                <Binding Path="SystemEmailActivity.Postprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                        <Border Height="20" Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>



                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkCampMailPostWrapupBehavior" IsChecked="{Binding SystemEmailActivity.IsPostWrapupBehaviorDefined}" DetailContent="{Binding SystemEmailActivity.PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkCampMailPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampMailPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                        <nixxis:NixxisStackPanel>


                                            <CheckBox Name="chkCampMailModifyWrapupTime" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding SystemEmailActivity.IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampMailModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                                <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding SystemEmailActivity.WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                            <CheckBox  local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding SystemEmailActivity.WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.Alert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.Alert}" IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.SupAlert}" IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.CloseScript}" IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.ForceReady}" IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampMailPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                        <nixxis:NixxisStackPanel>

                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                            <CheckBox Name="chkCampMailModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding SystemEmailActivity.IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampMailModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemEmailActivity.PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                                <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding SystemEmailActivity.AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>



                                    <CheckBox local:RightsManagement.Rights="Campaign.Mail.QualificationRequired" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.QualificationRequired}" IsChecked="{Binding SystemEmailActivity.QualificationRequired}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualification is mandatory'}"></CheckBox>

                                </nixxis:NixxisStackPanel>

                            </ScrollViewer>

                            <GridSplitter IsTabStop="False" Grid.Column="1" Grid.RowSpan="5" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                            <nixxis:NixxisTabControl Grid.Column="2" TabStripPlacement="Left">

                                <nixxis:NixxisTabItem Name="tabMailSkills">
                                    <nixxis:NixxisTabItem.Header>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Width="25" Height="25" Source="Images\AdminSmall_Skill.png"/>
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skills'}"></TextBlock>
                                        </StackPanel>
                                    </nixxis:NixxisTabItem.Header>
                                    <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default skills required to handle a contact from this context'}"></Label>
                                            <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Mail.Skills" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Mail.Skills}" Grid.Row="1" DefaultSortOrder="Item.DisplayText" Name="DGMailSkills" EditMode="SingleClick"  ItemsSource="{Binding SystemEmailActivity.CheckedSkills}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                                                <nixxis:NixxisDataGrid.Columns>
                                                    <DataGridTemplateColumn IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Image Source="Images\AdminSmall_Skill.png"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                                    <nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.Level, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>
                                                    <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                                </nixxis:NixxisDataGrid.Columns>
                                                <nixxis:NixxisDataGrid.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                    </ContextMenu>
                                                </nixxis:NixxisDataGrid.ContextMenu>
                                            </nixxis:NixxisDataGrid>
                                            <CheckBox local:RightsManagement.Rights="Campaign.Mail.PreprocessorReplacesSkills" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PreprocessorReplacesSkills}" Margin="0,5,0,0" IsChecked="{Binding SystemEmailActivity.PreprocessorReplacesSkills}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces all default skills (substitue instead of merge)'}"></CheckBox>
                                        </Grid>
                                    </ScrollViewer>
                                </nixxis:NixxisTabItem>

                                <nixxis:NixxisTabItem Name="tabMailLanguages">
                                    <nixxis:NixxisTabItem.Header>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Width="25" Height="25" Source="Images\AdminSmall_Language.png"/>
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Languages'}"></TextBlock>
                                        </StackPanel>
                                    </nixxis:NixxisTabItem.Header>
                                    <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default languages required to handle a contact from this context'}"></Label>
                                            <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Mail.Languages" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Mail.Languages}" Grid.Row="1" DefaultSortOrder="Item.DisplayText" Name="DGMailLanguages" EditMode="SingleClick"  ItemsSource="{Binding SystemEmailActivity.CheckedLanguages}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                                                <nixxis:NixxisDataGrid.Columns>
                                                    <DataGridTemplateColumn IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Image Source="Images\AdminSmall_Skill.png"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                                    <!--<nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.Level, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>-->
                                                    <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                                    <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                                </nixxis:NixxisDataGrid.Columns>
                                                <nixxis:NixxisDataGrid.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                    </ContextMenu>
                                                </nixxis:NixxisDataGrid.ContextMenu>
                                            </nixxis:NixxisDataGrid>
                                            <CheckBox local:RightsManagement.Rights="Campaign.Mail.PreprocessorReplacesLanguages" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PreprocessorReplacesLanguages}" Margin="0,5,0,0" IsChecked="{Binding SystemEmailActivity.PreprocessorReplacesLanguages}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces default languages'}"></CheckBox>
                                        </Grid>
                                    </ScrollViewer>
                                </nixxis:NixxisTabItem>

                            </nixxis:NixxisTabControl>

                        </Grid>

                    </GroupBox>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Chat-->
            <nixxis:NixxisTabItem Name="ChatTab" >
                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter}" ConverterParameter="False,True" FallbackValue="Collapsed">
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                        <Binding Path="Advanced"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Chat.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Chat'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <CheckBox local:RightsManagement.Rights="Campaign.Chat.IsActive" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.IsActive}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" IsChecked="{Binding HasSystemChatActivity}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Chat is active'}"></CheckBox>
                    <GroupBox Margin="20,0,0,0" Grid.Row="1" Visibility="{Binding HasSystemChatActivity, Converter={StaticResource VisWithCollapseConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                                <nixxis:NixxisStackPanel>
                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                    <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding SystemChatActivity.Id, Mode=OneWay}"></TextBox>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination:'}"></Label>
                                    <TextBox local:RightsManagement.Rights="Campaign.Chat.Destination" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Destination}" Text="{Binding SystemChatActivity.Destination}"></TextBox>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Chat.Script" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True"  ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding SystemChatActivity.ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SystemChatActivity.Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></ComboBox>



                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkCampChatPostWrapupBehavior" IsChecked="{Binding SystemChatActivity.IsPostWrapupBehaviorDefined}" DetailContent="{Binding SystemChatActivity.PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkCampChatPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampChatPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                        <nixxis:NixxisStackPanel>


                                            <CheckBox Name="chkCampChatModifyWrapupTime" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding SystemChatActivity.IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampChatModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemChatActivity.PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemChatActivity.PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemChatActivity.PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                                <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding SystemChatActivity.WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                            <CheckBox  local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding SystemChatActivity.WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.Alert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.Alert}" IsChecked="{Binding SystemChatActivity.PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.SupAlert}" IsChecked="{Binding SystemChatActivity.PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.CloseScript}" IsChecked="{Binding SystemChatActivity.PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.ForceReady}" IsChecked="{Binding SystemChatActivity.PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampChatPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                        <nixxis:NixxisStackPanel>

                                            <CheckBox  IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding SystemChatActivity.PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                            <CheckBox Name="chkCampChatModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding SystemChatActivity.IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampChatModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemChatActivity.PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemChatActivity.PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemChatActivity.PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                                <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding SystemChatActivity.AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>





                                </nixxis:NixxisStackPanel>
                            </ScrollViewer>
                            <GridSplitter IsTabStop="False" Grid.Column="1"  Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>


                            <nixxis:NixxisTabControl Grid.Column="2" TabStripPlacement="Left">

                                <nixxis:NixxisTabItem Name="tabChatSkills">
                                    <nixxis:NixxisTabItem.Header>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Width="25" Height="25" Source="Images\AdminSmall_Skill.png"/>
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skills'}"></TextBlock>
                                        </StackPanel>
                                    </nixxis:NixxisTabItem.Header>
                                    <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default skills required to handle a contact from this context'}"></Label>
                                            <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Chat.Skills" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Chat.Skills}" Grid.Row="1" DefaultSortOrder="Item.DisplayText"  Name="DGChatSkills" EditMode="SingleClick"  ItemsSource="{Binding SystemChatActivity.CheckedSkills}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                                                <nixxis:NixxisDataGrid.Columns>
                                                    <DataGridTemplateColumn IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Image Source="Images\AdminSmall_Skill.png"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                                    <!--<nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.Level, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>-->
                                                    <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                                    <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                                </nixxis:NixxisDataGrid.Columns>
                                                <nixxis:NixxisDataGrid.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                    </ContextMenu>
                                                </nixxis:NixxisDataGrid.ContextMenu>
                                            </nixxis:NixxisDataGrid>
                                            <CheckBox local:RightsManagement.Rights="Campaign.Chat.PreprocessorReplacesSkills" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PreprocessorReplacesSkills}" Margin="0,5,0,0" IsChecked="{Binding SystemChatActivity.PreprocessorReplacesSkills}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces all default skills (substitue instead of merge)'}"></CheckBox>
                                        </Grid>
                                    </ScrollViewer>
                                </nixxis:NixxisTabItem>

                                <nixxis:NixxisTabItem Name="tabChatLanguages">
                                    <nixxis:NixxisTabItem.Header>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Width="25" Height="25" Source="Images\AdminSmall_Language.png"/>
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Languages'}"></TextBlock>
                                        </StackPanel>
                                    </nixxis:NixxisTabItem.Header>
                                    <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default languages required to handle a contact from this context'}"></Label>
                                            <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Chat.Languages" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Chat.Languages}" Grid.Row="1" DefaultSortOrder="Item.DisplayText"  Name="DGChatLanguages" EditMode="SingleClick"  ItemsSource="{Binding SystemChatActivity.CheckedLanguages}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                                                <nixxis:NixxisDataGrid.Columns>
                                                    <DataGridTemplateColumn IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Image Source="Images\AdminSmall_Skill.png"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                                    <!--<nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.Level, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>-->
                                                    <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                                    <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                                                </nixxis:NixxisDataGrid.Columns>
                                                <nixxis:NixxisDataGrid.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                                    </ContextMenu>
                                                </nixxis:NixxisDataGrid.ContextMenu>
                                            </nixxis:NixxisDataGrid>
                                            <CheckBox local:RightsManagement.Rights="Campaign.Chat.PreprocessorReplacesLanguages" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PreprocessorReplacesLanguages}" Margin="0,5,0,0" IsChecked="{Binding SystemChatActivity.PreprocessorReplacesLanguages}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces default languages'}"></CheckBox>
                                        </Grid>
                                    </ScrollViewer>
                                </nixxis:NixxisTabItem>

                            </nixxis:NixxisTabControl>

                        </Grid>

                    </GroupBox>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Search-->
            <nixxis:NixxisTabItem Name="SearchTab" Visibility="{Binding Path=Advanced, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false, FallbackValue=Collapsed}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Search.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Search'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <CheckBox local:RightsManagement.Rights="Campaign.Search.IsActive"  HorizontalContentAlignment="Left" HorizontalAlignment="Left" IsChecked="{Binding HasSystemSearchActivity}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Search mode is active'}">
                        <CheckBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                <Binding ElementName="MySelf" Path="SelectedItem" Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Search.IsActive"></Binding>
                                <Binding Path="SearchAllowed"></Binding>
                            </MultiBinding>
                        </CheckBox.IsEnabled>
                    </CheckBox>
                    <GroupBox Margin="20,0,0,0" Grid.Row="1" Visibility="{Binding HasSystemSearchActivity, Converter={StaticResource VisWithCollapseConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                                <nixxis:NixxisStackPanel>
                                    <Label Visibility="{Binding SystemSearchActivity.Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The search activity is currently running'}"></Label>
                                    <Label Visibility="{Binding SystemSearchActivity.Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The search activity is currently in pause'}"></Label>
                                    <ToggleButton local:RightsManagement.Rights="Campaign.Search.Paused" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.Paused}" IsChecked="{Binding SystemSearchActivity.Paused}">
                                        <Grid>
                                            <TextBlock Visibility="{Binding SystemSearchActivity.Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to pause the activity'}"></TextBlock>
                                            <TextBlock Visibility="{Binding SystemSearchActivity.Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to unpause search activity'}"></TextBlock>
                                        </Grid>
                                    </ToggleButton>

                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                    <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding SystemSearchActivity.Id, Mode=OneWay}"></TextBox>


                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Originator:'}"></Label>
                                    <TextBox local:RightsManagement.Rights="Campaign.Search.Originator" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.Originator}"  Text="{Binding SystemSearchActivity.Originator}"></TextBox>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Search.Script" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True" ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding SystemSearchActivity.ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SystemSearchActivity.Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></ComboBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.Search.AutoRecord" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.AutoRecord}" IsThreeState="True" ToolTip="{Binding SystemSearchActivity.AutomaticRecordingDescription}" IsChecked="{Binding SystemSearchActivity.AutomaticRecording}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Record all this activity conversations automatically'}"></CheckBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.Search.ListenAllowed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.ListenAllowed}" IsChecked="{Binding SystemSearchActivity.ListenAllowed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Listen allowed to this activity conversations'}"></CheckBox>





                                    <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkCampSearchPostWrapupBehavior" IsChecked="{Binding SystemSearchActivity.IsPostWrapupBehaviorDefined}" DetailContent="{Binding SystemSearchActivity.PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkCampSearchPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampSearchPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                        <nixxis:NixxisStackPanel>


                                            <CheckBox Name="chkCampSearchModifyWrapupTime" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding SystemSearchActivity.IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampSearchModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                                <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding SystemSearchActivity.WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                            <CheckBox  local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding SystemSearchActivity.WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.Alert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.Alert}" IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.SupAlert}" IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.CloseScript}" IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.ForceReady}" IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>

                                    <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampSearchPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                        <nixxis:NixxisStackPanel>

                                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                            <CheckBox Name="chkCampSearchModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding SystemSearchActivity.IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                            <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkCampSearchModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                                <RadioButton IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                                <RadioButton IsChecked="{Binding SystemSearchActivity.PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                                <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Search.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Search.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding SystemSearchActivity.AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                            </nixxis:NixxisStackPanel>

                                        </nixxis:NixxisStackPanel>
                                    </GroupBox>





                                </nixxis:NixxisStackPanel>

                            </ScrollViewer>
                            <GridSplitter IsTabStop="False" Grid.Column="1"  Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>


                        </Grid>

                    </GroupBox>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Teams-->
            <nixxis:NixxisTabItem Name="TeamsTab">

                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter}" ConverterParameter="False,True" TargetNullValue="Collapsed">
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                        <Binding Path="Advanced"></Binding>
                        <!--Binding ElementName="ShowTeams" Path="IsChecked"></Binding-->
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Team.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Teams'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>


                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Teams" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Teams}" Name="DGTeams" DefaultSortOrder="Item.DisplayText" EditMode="SingleClick" ItemsSource="{Binding CheckedTeams}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                    <nixxis:NixxisDataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding Item, Converter={StaticResource adminObjectConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                        <nixxis:NixxisDataGridSliderColumn EnabledBinding="{Binding HasLink}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.BaseLevel, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>
                        <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Affectation'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                    </nixxis:NixxisDataGrid.Columns>
                    <nixxis:NixxisDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        </ContextMenu>
                    </nixxis:NixxisDataGrid.ContextMenu>
                </nixxis:NixxisDataGrid>


            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Agents-->
            <nixxis:NixxisTabItem  Name="AgentsTab" Visibility="{Binding Path=Advanced, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false, FallbackValue=Collapsed}">

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Agent.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Agents'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Agents" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Agents}" Name="DGAgents" DefaultSortOrder="Item.DisplayText" EditMode="SingleClick"  ItemsSource="{Binding CheckedAgents}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                    <nixxis:NixxisDataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="Images\AdminSmall_Agent.png"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridCheckBoxColumn IsThreeState="True" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                        <nixxis:NixxisDataGridSliderColumn Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsFullVersion, Converter={StaticResource VisWithCollapseConverter}}" EnabledBinding="{Binding HasLink, Converter={StaticResource treeStateFalseWhenNull}}" AutoToolTipPlacement="BottomRight" EditingElementStyle="{StaticResource {x:Type Slider}}" ElementStyle="{StaticResource DatagridSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.BaseLevel, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridSliderColumn>
                        <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Account'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                    </nixxis:NixxisDataGrid.Columns>
                    <nixxis:NixxisDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        </ContextMenu>
                    </nixxis:NixxisDataGrid.ContextMenu>
                </nixxis:NixxisDataGrid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Prompts-->
            <nixxis:NixxisTabItem Name="TabCampPrompts" Visibility="{Binding PromptsTabIsVisible, Converter={StaticResource VisWithCollapseConverter}, FallbackValue=Collapsed}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Prompt.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Prompts'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The available prompts for playing in this context'}"></Label>
                        <nixxis:NixxisDataGrid  local:RightsManagement.Rights="Campaign.Prompts" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Prompts}"
                                                LoadingRow="DGCampPrompts_LoadingRow"
                    SelectionChanged="DataGridCampPrompts_SelectionChanged"
                    DefaultSortOrder="Prompt.Description" Grid.Row="1"  Name="DGCampPrompts" 
                                        EditMode="SingleClick"  ItemsSource="{Binding Prompts}" CanUserAddRows="False" 
                                        HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                            <nixxis:NixxisDataGrid.Columns>

                                <nixxis:NixxisDataGridToggleDetailColumn SingleDetail="True" Header="">
                                    <nixxis:NixxisDataGridToggleDetailColumn.ToggleDetailTemplate>
                                        <ControlTemplate>
                                            <Image Width="25" Height="25" 
                                            Visibility="{Binding Prompt.HasRelatedPrompts, Converter={StaticResource VisWithCollapseConverter}}"
                                            RenderOptions.BitmapScalingMode="LowQuality" Source="Images\Action_Add.png">
                                            </Image>
                                        </ControlTemplate>
                                    </nixxis:NixxisDataGridToggleDetailColumn.ToggleDetailTemplate>
                                </nixxis:NixxisDataGridToggleDetailColumn>

                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <nixxis:NixxisPlayback Path="{Binding Prompt.PathUri}"></nixxis:NixxisPlayback>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn IsReadOnly="False" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Prompt.Description}"></DataGridTextColumn>

                                <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language'}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Prompt.Language.Target.DisplayText }"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding Prompt.Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText"></ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Path'}" Binding="{Binding Prompt.Path}"></DataGridTextColumn>

                                <!-- TODO
                        <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Path'}" Binding="{Binding Prompt.References}"></DataGridTextColumn>-->
                            </nixxis:NixxisDataGrid.Columns>

                            <nixxis:NixxisDataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Visibility="{Binding Path=Advanced, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Affect to referring activities'}" Command="local:AdminFrameSet.AffectToActivities" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Makes globally available'}" Command="local:AdminFrameSet.AffectToCore" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                </ContextMenu>
                            </nixxis:NixxisDataGrid.ContextMenu>

                            <nixxis:NixxisDataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <Grid Visibility="{Binding Prompt.HasRelatedPrompts, Converter={StaticResource VisWithCollapseConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#dfdfdf" Margin="8,0,8,0"> 
                                        Related
                                            <TextBlock.LayoutTransform>
                                                <RotateTransform Angle="-90"></RotateTransform>
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>

                                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Prompts" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Prompts}" SelectionChanged="DataGridCampPrompts_SelectionChanged" Grid.Column="1" Name="DGCampRelatedPrompts"  ItemsSource="{Binding Prompt.RelatedPrompts}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                                            <nixxis:NixxisDataGrid.Columns>

                                                <DataGridTemplateColumn IsReadOnly="True">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <nixxis:NixxisPlayback Path="{Binding PathUri}"></nixxis:NixxisPlayback>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>

                                                <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language'}">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Language.Target.DisplayText }"></TextBlock>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                    <DataGridTemplateColumn.CellEditingTemplate>
                                                        <DataTemplate>
                                                            <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText"></ComboBox>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellEditingTemplate>
                                                </DataGridTemplateColumn>

                                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Path'}" Binding="{Binding Path}"></DataGridTextColumn>

                                            </nixxis:NixxisDataGrid.Columns>

                                        </nixxis:NixxisDataGrid>

                                    </Grid>
                                </DataTemplate>
                            </nixxis:NixxisDataGrid.RowDetailsTemplate>


                        </nixxis:NixxisDataGrid>
                    </Grid>
                </ScrollViewer>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Predefined texts-->
            <nixxis:NixxisTabItem Name="PredefinedTab" Visibility="{Binding PredefinedTextsTabIsVisible, Converter={StaticResource VisWithCollapseConverter}, FallbackValue=Collapsed}" >

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Chat.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Predefined texts'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>


                    <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.PredefinedTexts" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.PredefinedTexts}" DefaultSortOrder="Sequence" Grid.Row="1"  Name="DGPredefinedTexts" 
                                        EditMode="SingleClickWhenSelected"  ItemsSource="{Binding PredefinedTexts}" CanUserAddRows="False" 
                                        HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >

                        <nixxis:NixxisDataGrid.Columns>

                            <DataGridTextColumn IsReadOnly="False" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Description}"></DataGridTextColumn>

                            <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language'}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Language.Target.DisplayText }"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText"></ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                        </nixxis:NixxisDataGrid.Columns>

                    </nixxis:NixxisDataGrid>


                    <GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <nixxis:NixxisTabControl Grid.Column="2" TabStripPlacement="Left" IsEnabled="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem, Converter={StaticResource IneqConverter}}">

                        <!-- Region General-->
                        <nixxis:NixxisTabItem >
                            <nixxis:NixxisTabItem.Header>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Width="25" Height="25" Source="Images\Activities_Search.png"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                                </StackPanel>
                            </nixxis:NixxisTabItem.Header>

                            <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <nixxis:NixxisStackPanel>

                                    <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                                    <TextBox  Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                        Text="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem.Id, Mode=OneWay}"></TextBox>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                                    <TextBox local:RightsManagement.Rights="Campaign.PredefinedText.Description" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.PredefinedText.Description}" Text="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem.Description}"></TextBox>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language:'}"></Label>
                                    <ComboBox local:RightsManagement.Rights="Campaign.PredefinedText.Language" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.PredefinedText.Language}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding  ElementName=DGPredefinedTexts, Path=SelectedItem.Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText">
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>

                                    </ComboBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.PredefinedText.AvailableForMails" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.PredefinedText.AvailableForMails}" IsChecked="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem.IsMail}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='This text is available for emails'}"></CheckBox>

                                    <CheckBox local:RightsManagement.Rights="Campaign.PredefinedText.AvailableForChat" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.PredefinedText.AvailableForChat}" IsChecked="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem.IsChat}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='This text is available for chats'}"></CheckBox>

                                </nixxis:NixxisStackPanel>
                            </ScrollViewer>

                        </nixxis:NixxisTabItem>
                        <!--EndRegion-->

                        <!--Region Text content-->
                        <nixxis:NixxisTabItem >
                            <nixxis:NixxisTabItem.Header>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Width="25" Height="25" Source="Images\Activities_Search.png"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Text content'}"></TextBlock>
                                </StackPanel>
                            </nixxis:NixxisTabItem.Header>

                            <TextBox local:RightsManagement.Rights="Campaign.PredefinedText.TextContent" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.PredefinedText.TextContent}"  AcceptsReturn="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Text="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem.TextContent}"></TextBox>


                        </nixxis:NixxisTabItem>
                        <!--EndRegion-->

                        <!--Region Html content-->
                        <nixxis:NixxisTabItem >
                            <nixxis:NixxisTabItem.Header>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Width="25" Height="25" Source="Images\Activities_Search.png"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Html content'}"></TextBlock>
                                </StackPanel>
                            </nixxis:NixxisTabItem.Header>
                            <ne:NixxisEditor local:RightsManagement.Rights="Campaign.PredefinedText.HtmlContent" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.PredefinedText.HtmlContent}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HtmlText="{Binding ElementName=DGPredefinedTexts, Path=SelectedItem.HtmlContent, Mode=TwoWay}">
                            </ne:NixxisEditor>

                        </nixxis:NixxisTabItem>
                        <!--EndRegion-->

                    </nixxis:NixxisTabControl>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Attachments-->
            <nixxis:NixxisTabItem Name="AttachmentsTab" Visibility="{Binding AttachmentsTabIsVisible, Converter={StaticResource VisWithCollapseConverter}, FallbackValue=Collapsed}" >

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\Activities_Chat.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Attachments'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>


                    <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Attachments" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Attachments}" DefaultSortOrder="Sequence" Grid.Row="1"  Name="DGAttachments" 
                                        EditMode="SingleClickWhenSelected"  ItemsSource="{Binding Attachments}" CanUserAddRows="False" 
                                        HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >

                        <nixxis:NixxisDataGrid.Columns>

                            <DataGridTextColumn IsReadOnly="False" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Description}"></DataGridTextColumn>

                            <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language'}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Language.Target.DisplayText }"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText"></ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                        </nixxis:NixxisDataGrid.Columns>

                    </nixxis:NixxisDataGrid>


                    <GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>


                    <ScrollViewer Margin="10" Grid.Column="2" IsEnabled="{Binding ElementName=DGAttachments, Path=SelectedItem, Converter={StaticResource IneqConverter}}" CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <nixxis:NixxisStackPanel>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                        Text="{Binding ElementName=DGAttachments, Path=SelectedItem.Id, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Attachment.Description" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.Description}" Text="{Binding ElementName=DGAttachments, Path=SelectedItem.Description}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Attachment.Language" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.Language}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding  ElementName=DGAttachments, Path=SelectedItem.Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText">
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>

                            </ComboBox>

                            <Label Visibility="{Binding ElementName=txtAttPath, Path=IsReadOnly, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Attachment url:'}"></Label>
                            <Label Visibility="{Binding ElementName=txtAttPath, Path=IsReadOnly, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Uploaded file:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Attachment.AttachmentPath" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.AttachmentPath}" Name="txtAttPath" IsReadOnly="{Binding ElementName=DGAttachments, Path=SelectedItem.LocationIsLocal}"  Text="{Binding ElementName=DGAttachments, Path=SelectedItem.ComputedLocation}" nixxis:NixxisStackPanel.KeepNextAttached="True"></TextBox>
                            <Button local:RightsManagement.Rights="Campaign.Attachment.Preview" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.Preview}" Click="PreviewAttachment">
                                <Border Height="20" Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>


                            <CheckBox local:RightsManagement.Rights="Campaign.Attachment.AvailableForMails" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.AvailableForMails}" IsChecked="{Binding ElementName=DGAttachments, Path=SelectedItem.IsMail}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='This text is available for emails'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Attachment.AvailableForChats" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.AvailableForChats}" IsChecked="{Binding ElementName=DGAttachments, Path=SelectedItem.IsChat}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='This text is available for chats'}"></CheckBox>


                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Attachment.Inline" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Attachment.Inline}" VerticalAlignment="Center" Name="chkInline"  IsChecked="{Binding ElementName=DGAttachments, Path=SelectedItem.InlineDisposition}" 
                                                    DetailContent="{nixxis:FormatString TranslationContext={StaticResource tcx},FormatString='Target {0}',BindTo={Binding ElementName=DGAttachments, Path=SelectedItem.Target}}" 
                                                    DetailVisibility="{Binding ElementName=chkInline, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}"
                                                    Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Content is an image displayed inline with text'}">
                            </nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInline, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Target:'}"></Label>
                                    <TextBox Text="{Binding ElementName=DGAttachments, Path=SelectedItem.Target}"></TextBox>
                                </nixxis:NixxisStackPanel>
                            </GroupBox>


                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Security-->
            <nixxis:NixxisTabItem Name="Rights">
                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" FallbackValue="Collapsed" TargetNullValue="Collapsed">
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"  ></Binding>
                        <Binding Path="IsRightsHandlingAllowed"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Rights.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List of roles and their rights associated to the selected item:'}"></Label>

                    <nixxis:NixxisDataGrid Grid.Row="1" local:RightsManagement.Rights="Campaign.Rights" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Rights}" DefaultSortOrder="DisplayText" Name="DGRights" Margin="10" ItemsSource="{Binding RolesOverview}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" Loaded="DGRights_Loaded"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="Images\AdminSmall_Rights.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Role'}" Binding="{Binding DisplayText}"></DataGridTextColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}" Binding="{Binding Rights}"></DataGridTextColumn>

                        </nixxis:NixxisDataGrid.Columns>

                        <nixxis:NixxisDataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                            </ContextMenu>
                        </nixxis:NixxisDataGrid.ContextMenu>
                    </nixxis:NixxisDataGrid>

                    <nixxis:NixxisDataGrid Grid.Row="2" local:RightsManagement.Rights="Campaign.Rights" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Rights}" Name="DGSubRights" EditMode="SingleClick" Margin="10" ItemsSource="{Binding ElementName=DGRights, Path=SelectedItem.Security}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Right'}" Binding="{Binding RightDescription}"></DataGridTextColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsListAllowedEnabled}" VisibilityBinding="{Binding IsListAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List'}" Binding="{Binding ListAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsReadAllowedEnabled}" VisibilityBinding="{Binding IsReadAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Read'}" Binding="{Binding ReadAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsWriteAllowedEnabled}" VisibilityBinding="{Binding IsWriteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Write'}" Binding="{Binding WriteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsCreateAllowedEnabled}" VisibilityBinding="{Binding IsCreateAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Create'}" Binding="{Binding CreateAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsDeleteAllowedEnabled}" VisibilityBinding="{Binding IsDeleteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Delete'}" Binding="{Binding DeleteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsPowerUserEnabled}" VisibilityBinding="{Binding IsPowerUserVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Power'}" Binding="{Binding PowerUser, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsFullControlEnabled}" VisibilityBinding="{Binding IsFullControlVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Full'}" Binding="{Binding FullControl, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                        </nixxis:NixxisDataGrid.Columns>


                    </nixxis:NixxisDataGrid>


                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->


        </nixxis:NixxisTabControl>
        <!--EndRegion-->

        <!--Region Inbound Activities-->
        <nixxis:NixxisTabControl nixxis:PresentationGrid.Meaning="Properties" Name="InActTabControl" DataContext="{Binding Source={StaticResource selectionHelper}, Path=Inbound}" >
            <nixxis:NixxisTabControl.Visibility>
                <MultiBinding Converter="{StaticResource specialConverter}" ConverterParameter="In" TargetNullValue="Collapsed">
                    <Binding Source="{StaticResource selectionHelper}" Path="Inbound"/>
                    <Binding Source="{StaticResource selectionHelper}" Path="Outbound"/>
                    <Binding Source="{StaticResource List}" Path="CurrentItem"/>
                </MultiBinding>
            </nixxis:NixxisTabControl.Visibility>

            <!--Region General (visible for inbound only)-->
            <nixxis:NixxisTabItem Visibility="{Binding MediaType, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:MediaType.Voice}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Activity.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel >

                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Inbound calls are currently accepted'}"></Label>
                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Inbound calls are currently rejected'}"></Label>
                            <ToggleButton local:RightsManagement.Rights="Campaign.Inbound.Paused" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Paused}" IsChecked="{Binding Paused}">
                                <Grid>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to reject inbound calls'}"></TextBlock>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to accept inbound calls'}"></TextBlock>
                                </Grid>
                            </ToggleButton>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                        Text="{Binding Id, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Inbound.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Description}" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Text="{Binding Description}"></TextBox>
                            <TextBox local:RightsManagement.Rights="Campaign.Inbound.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Description}" IsReadOnly="True" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding DisplayText, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Security context:'}">
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination:'}"></Label>

                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Destination" 
                                      IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Destination}" 
                                      IsSynchronizedWithCurrentItem="False" 
                                      ItemsSource="{Binding NumberingPlanEntries, Converter={StaticResource cboConverter}}" 
                                      DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                      SelectedValue="{Binding PredefinedDestination.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding PredefinedDestination.TargetId, Converter={StaticResource isDummyId}}"
                                      Text="{Binding TempDestination, Mode=OneWayToSource, UpdateSourceTrigger=LostFocus}">

                                <ComboBox.IsEditable>
                                    <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsNotCloudOrSuperUser"></Binding>
                                </ComboBox.IsEditable>

                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Destination" 
                                      IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Destination}" 
                                      IsSynchronizedWithCurrentItem="False" 
                                      ItemsSource="{Binding NumberingPlanEntriesNoDummies, Converter={StaticResource cboConverter}}" 
                                      DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                      SelectedValue="{Binding PredefinedDestination.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding PredefinedDestination.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}"
                                      Text="{Binding TempDestination, Mode=OneWayToSource, UpdateSourceTrigger=LostFocus}">

                                <ComboBox.IsEditable>
                                    <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsNotCloudOrSuperUser"></Binding>
                                </ComboBox.IsEditable>

                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>

                            </ComboBox>


                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Queue:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueuesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueues}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                           
                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.UsePlanning" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.UsePlanning}" Checked="chkInboundPlanning_Checked" IsChecked="{Binding HasPlanning}" VerticalAlignment="Center" Name="chkInboundPlanning"  DetailContent="{Binding PlanningSettings}" DetailVisibility="{Binding ElementName=chkInboundPlanning, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use planning'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInboundPlanning, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>

                                    <Label Grid.Row="0" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Planning used to specify closing hours:'}"></Label>
                                    <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Inbound.Planning" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Plannings}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="Planning.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Planning" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource PlanningsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="Planning.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>

                                    <local:OverflowHelper Visibility="{Binding Planning.Target, Converter={StaticResource EqCConverter}}"                                                          
                                    Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when the planning indicates it is closed:'}"  
                                    Prompts="{Binding AllPrompts, Mode=OneWay}"
                                    OverflowActionType="{Binding ClosedActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    OverflowMessage="{Binding ClosedMessage}" 
                                                          OverflowReroutePrompt="{Binding ClosedReroutePrompt}" 
                                    Preprocessors="{Binding Preprocessors, Mode=OneWay}" 
                                                    OverflowPreprocessor="{Binding ClosedPreprocessor, Mode=OneWay}" 
                                    OverflowPreprocessorParams="{Binding ClosedPreprocessorParams}" 
                                                    OverflowPreprocessorConfig="{Binding ClosedPreprocessorConfig}" 
                                    OverflowRerouteDestination ="{Binding ClosedRerouteDestination}"></local:OverflowHelper>


                                </nixxis:NixxisStackPanel>
                            </GroupBox>


                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.NoAgent" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.NoAgent}" Checked="chkInboundNoAgent_Checked" IsChecked="{Binding NoAgentActionType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:OverflowActions.None}}" VerticalAlignment="Center" Name="chkInboundNoAgent"  DetailContent="{Binding NoAgentActionDescription}" DetailVisibility="{Binding ElementName=chkInboundNoAgent, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Handle no agent situation'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInboundNoAgent, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                <local:OverflowHelper 
                                    Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when emmergency occurs'}"    
                                    Prompts="{Binding AllPrompts, Mode=OneWay}"
                                    OverflowActionType="{Binding NoAgentActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    OverflowMessage="{Binding NoAgentMessage}" 
                                    OverflowReroutePrompt="{Binding NoAgentReroutePrompt}" 
                                    Preprocessors="{Binding Preprocessors, Mode=OneWay}" 
                                    OverflowPreprocessor="{Binding NoAgentPreprocessor, Mode=OneWay}" 
                                    OverflowPreprocessorParams="{Binding NoAgentPreprocessorParams}" 
                                    OverflowPreprocessorConfig="{Binding NoAgentPreprocessorConfig}" 
                                    OverflowRerouteDestination ="{Binding NoAgentRerouteDestination}"></local:OverflowHelper>

                            </GroupBox>



                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.UsePreferredAgent" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.UsePreferredAgent}" IsChecked="{Binding UsePreferredAgent}" VerticalAlignment="Center" Name="chkUsePreferredAgent"  DetailContent="{Binding PreferredAgentSettings}" DetailVisibility="{Binding ElementName=chkUsePreferredAgent, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use preferred agent'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkUsePreferredAgent, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preferred agent max queue time:'}"></Label>
                                    <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Inbound.PreferredAgentQueueTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PreferredAgentQueueTime}" Duration="{Binding PreferredAgentQueueTime}"></nixxis:DurationPicker>

                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preferred agent validity (in days):'}"></Label>
                                    <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Inbound.PreferredAgentValidity" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PreferredAgentValidity}" Value="{Binding PreferredAgentValidity}" NumberFormat="0" MinimumValue="0" ></nixxis:NumericUpDown>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>
                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel  >

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.Script" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True" ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force callback activity:'}"></Label>


                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.CallbackActivity" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.CallbackActivity}" IsSynchronizedWithCurrentItem="False"  DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding CallbackActivity.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ItemsSource>
                                    <MultiBinding Converter="{StaticResource filterConv}">
                                        <Binding Source="{StaticResource OutboundActivities}"></Binding>
                                        <Binding Path="Campaign.TargetId"></Binding>
                                    </MultiBinding>
                                </ComboBox.ItemsSource>
                                <ComboBox.Visibility>
                                    <Binding Path="CallbackActivity.TargetId" Converter="{StaticResource isDummyId}" TargetNullValue="Collapsed"></Binding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.CallbackActivity" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.CallbackActivity}" IsSynchronizedWithCurrentItem="False"  DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding CallbackActivity.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ItemsSource>
                                    <MultiBinding Converter="{StaticResource filterConv}">
                                        <Binding Source="{StaticResource OutboundActivitiesNoDummies}"></Binding>
                                        <Binding Path="Campaign.TargetId"></Binding>
                                    </MultiBinding>
                                </ComboBox.ItemsSource>
                                <ComboBox.Visibility>
                                    <Binding Path="CallbackActivity.TargetId" Converter="{StaticResource isDummyId}" TargetNullValue="Collapsed" ConverterParameter="true"></Binding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.AbandonsAreCalledBack" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.AbandonsAreCalledBack}" VerticalAlignment="Center" Name="chkInboundAbandonsAreCalledBack"  IsChecked="{Binding AbandonsAreCalledBack}" DetailContent="{Binding AbandonsCallbackDescription}" DetailVisibility="{Binding ElementName=chkInboundAbandonsAreCalledBack, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Abandons are called back'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInboundAbandonsAreCalledBack, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force callback activity:'}"></Label>
                                    
                                    <ComboBox local:RightsManagement.Rights="Campaign.Inbound.AbandonsCallbackActivity" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.AbandonsCallbackActivity}" IsSynchronizedWithCurrentItem="False"  DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding AbandonsCallbackActivity.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource filterConv}">
                                                <Binding Source="{StaticResource OutboundActivities}"></Binding>
                                                <Binding Path="Campaign.TargetId"></Binding>
                                            </MultiBinding>
                                        </ComboBox.ItemsSource>
                                        <ComboBox.Visibility>
                                            <Binding Path="AbandonsCallbackActivity.TargetId" Converter="{StaticResource isDummyId}" TargetNullValue="Collapsed"></Binding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Inbound.AbandonsCallbackActivity" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.AbandonsCallbackActivity}" IsSynchronizedWithCurrentItem="False"  DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding AbandonsCallbackActivity.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource filterConv}">
                                                <Binding Source="{StaticResource OutboundActivitiesNoDummies}"></Binding>
                                                <Binding Path="Campaign.TargetId"></Binding>
                                            </MultiBinding>
                                        </ComboBox.ItemsSource>
                                        <ComboBox.Visibility>
                                            <Binding Path="AbandonsCallbackActivity.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true" TargetNullValue="Collapsed"></Binding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>


                                </nixxis:NixxisStackPanel>
                            </GroupBox>


                            <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.AutoRecord" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.AutoRecord}" ToolTip="{Binding AutomaticRecordingDescription}" IsChecked="{Binding AutomaticRecording}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Record all this activity conversations automatically'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Inbound.ListenAllowed" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.ListenAllowed}" IsChecked="{Binding ListenAllowed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Listen allowed to this activity conversations'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Inbound.RecordingPlaybackLevel" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.RecordingPlaybackLevel}" IsChecked="{Binding RecordingPlaybackLevel}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Allow recording playback for history'}"></CheckBox>

                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.LinesRestriction" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.LinesRestriction}" VerticalAlignment="Center" Name="chkInboundRestricted"  IsChecked="{Binding LinesAreRestricted}" DetailContent="{Binding LinesRestrictionDescription}" DetailVisibility="{Binding ElementName=chkInboundRestricted, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Restrict the number of lines'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInboundRestricted, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Maximum number of lines:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding Lines}" NumberFormat="0" MinimumValue="0"></nixxis:NumericUpDown>
                                </nixxis:NixxisStackPanel>
                            </GroupBox>



                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.Profit" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Profit}" VerticalAlignment="Center" Name="chkInboundProfit"  IsChecked="{Binding ProfitRulesAreUsed}" DetailContent="{Binding ProfitDescription}" DetailVisibility="{Binding ElementName=chkInboundProfit, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define profit'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInboundProfit, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Starting profit:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding InitialProfit}" NumberFormat="0" MinimumValue="1"></nixxis:NumericUpDown>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Alternate profit:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding AlternateInitialProfit}" NumberFormat="0" MinimumValue="1"></nixxis:NumericUpDown>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Alternate profit matching regexp:'}"></Label>
                                    <TextBox Text="{Binding AlternateInitialProfitRule}"></TextBox>
                                </nixxis:NixxisStackPanel>
                            </GroupBox>


                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.Sla" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Sla}" VerticalAlignment="Center" Name="chkInboundSla"  IsChecked="{Binding SlaMode, Converter={StaticResource EqConverter}, ConverterParameter={StaticResource 1}}" DetailContent="{Binding SlaDescription}" DetailVisibility="{Binding ElementName=chkInboundSla, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define SLA'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInboundSla, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='SLA time:'}"></Label>
                                    <nixxis:DurationPicker Duration="{Binding SlaTime}"></nixxis:DurationPicker>

                                    <CheckBox local:RightsManagement.Rights="Campaign.Inbound.Sla.OverflowIncluded" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Sla.OverflowIncluded}" IsChecked="{Binding SlaIncludeOverflow}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Overflow included'}"></CheckBox>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>



                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkInPostWrapupBehavior" IsChecked="{Binding IsPostWrapupBehaviorDefined}" DetailContent="{Binding PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkInPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                <nixxis:NixxisStackPanel>


                                    <CheckBox Name="chkInModifyWrapupTime" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkInModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                        <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                    <CheckBox  local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.Alert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.Alert}" IsChecked="{Binding PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.SupAlert}" IsChecked="{Binding PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.CloseScript}" IsChecked="{Binding PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.ForceReady}" IsChecked="{Binding PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkInPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                <nixxis:NixxisStackPanel>

                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                    <CheckBox Name="chkInModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkInModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                        <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Inbound.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>




                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region General (visible for mail only)-->
            <nixxis:NixxisTabItem Visibility="{Binding MediaType, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:MediaType.Mail}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Activity.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel >

                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Emails are currently accepted'}"></Label>
                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Emails are currently rejected'}"></Label>
                            <ToggleButton local:RightsManagement.Rights="Campaign.Mail.Paused" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Paused}" IsChecked="{Binding Paused}">
                                <Grid>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to reject emails'}"></TextBlock>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to accept emails'}"></TextBlock>
                                </Grid>
                            </ToggleButton>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding Id, Mode=OneWay}"></TextBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Mail.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Description}" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Text="{Binding Description}"></TextBox>
                            <TextBox local:RightsManagement.Rights="Campaign.Mail.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Description}" IsReadOnly="True" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding DisplayText, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Security context:'}">
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Mails.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mails.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Mails.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mails.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination:'}"></Label>
                            <TextBox Visibility="{Binding Source={StaticResource EmailMediaProviders}, Path=Count, Converter={StaticResource IneqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Mail.Destination" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Destination}" Text="{Binding Destination}"></TextBox>
                            <TextBox Visibility="{Binding Source={StaticResource EmailMediaProviders}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Mail.Destination" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Destination}" nixxis:NixxisStackPanel.KeepNextAttached="True" Text="{Binding Destination}" IsReadOnly="True"></TextBox>
                            <Button Visibility="{Binding Source={StaticResource EmailMediaProviders}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Mail.Destination" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Destination}" Click="ConfigureMailProvider_Click" >
                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Queue:'}"></Label>

                            <ComboBox local:RightsManagement.Rights="Campaign.Mail.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueuesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Mail.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueues}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel Name="CampaignMailStackPanel" >


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Mail.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Preprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource MailPreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Preprocessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Mail.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Preprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource MailPreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Preprocessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Mail.Preprocessor" Click="ConfigureMailPreprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Mail.Preprocessor"></Binding>
                                        <Binding Path="Preprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>
                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Postprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Mail.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Postprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource MailPreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Postprocessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Mail.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Postprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource MailPreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Postprocessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Mail.Postprocessor" Click="ConfigureMailPostprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Mail.Postprocessor"></Binding>
                                        <Binding Path="Postprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>

                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Mail.Script" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True" ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Mail.RecordingPlaybackLevel" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.RecordingPlaybackLevel}" IsChecked="{Binding RecordingPlaybackLevel}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Allow recording playback for history'}"></CheckBox>

                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Mail.Profit" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.Profit}" VerticalAlignment="Center" Name="chkMailProfit"  IsChecked="{Binding ProfitRulesAreUsed}" DetailContent="{Binding ProfitDescription}" DetailVisibility="{Binding ElementName=chkMailProfit, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define profit'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkMailProfit, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Starting profit:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding InitialProfit}" NumberFormat="0" MinimumValue="1"></nixxis:NumericUpDown>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Alternate profit:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding AlternateInitialProfit}" NumberFormat="0" MinimumValue="1"></nixxis:NumericUpDown>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Alternate profit matching regexp:'}"></Label>
                                    <TextBox Text="{Binding AlternateInitialProfitRule}"></TextBox>
                                </nixxis:NixxisStackPanel>
                            </GroupBox>




                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkMailPostWrapupBehavior" IsChecked="{Binding IsPostWrapupBehaviorDefined}" DetailContent="{Binding PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkMailPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkMailPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                <nixxis:NixxisStackPanel>


                                    <CheckBox Name="chkMailModifyWrapupTime" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkMailModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                        <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                    <CheckBox  local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.Alert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.Alert}" IsChecked="{Binding PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.SupAlert}" IsChecked="{Binding PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.CloseScript}" IsChecked="{Binding PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.ForceReady}" IsChecked="{Binding PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkMailPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                <nixxis:NixxisStackPanel>

                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                    <CheckBox Name="chkMailModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkMailModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                        <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Mail.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Mail.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>







                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region General (visible for chat only)-->
            <nixxis:NixxisTabItem Visibility="{Binding MediaType, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:MediaType.Chat}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Activity.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel >

                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Chats are currently accepted'}"></Label>
                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Chat are currently rejected'}"></Label>
                            <ToggleButton local:RightsManagement.Rights="Campaign.Chat.Paused" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Paused}" IsChecked="{Binding Paused}">
                                <Grid>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to reject chats'}"></TextBlock>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to accept chats'}"></TextBlock>
                                </Grid>
                            </ToggleButton>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding Id, Mode=OneWay}"></TextBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Chat.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Description}" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Text="{Binding Description}"></TextBox>
                            <TextBox local:RightsManagement.Rights="Campaign.Chat.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Description}" IsReadOnly="True" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding DisplayText, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Security context:'}">
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Chat.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Chat.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Destination:'}"></Label>
                            <TextBox Visibility="{Binding Source={StaticResource ChatMediaProviders}, Path=Count, Converter={StaticResource IneqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Chat.Destination" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Destination}" Text="{Binding Destination}"></TextBox>
                            <TextBox Visibility="{Binding Source={StaticResource ChatMediaProviders}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Chat.Destination" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Destination}" nixxis:NixxisStackPanel.KeepNextAttached="True" Text="{Binding Destination}" IsReadOnly="True"></TextBox>
                            <Button Visibility="{Binding Source={StaticResource ChatMediaProviders}, Path=Count, Converter={StaticResource EqCConverter}, ConverterParameter={StaticResource 0}}" local:RightsManagement.Rights="Campaign.Chat.Destination" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Destination}" Click="ConfigureChatProvider_Click" >
                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Queue:'}"></Label>

                            <ComboBox local:RightsManagement.Rights="Campaign.Chat.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueuesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Chat.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueues}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>




                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel  >


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Chat.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Preprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ChatPreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Preprocessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Chat.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Preprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ChatPreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Preprocessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Chat.Preprocessor" Click="ConfigureChatPreprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Chat.Preprocessor"></Binding>
                                        <Binding Path="Preprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>


                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Postprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Chat.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Postprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ChatPreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Postprocessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Chat.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Postprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ChatPreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Postprocessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Chat.Postprocessor" Click="ConfigureChatPostprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Chat.Postprocessor"></Binding>
                                        <Binding Path="Postprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>

                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Chat.Script" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Script}" IsSynchronizedWithCurrentItem="False" IsEditable="True" ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" Text="{Binding ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Chat.RecordingPlaybackLevel" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.RecordingPlaybackLevel}" IsChecked="{Binding RecordingPlaybackLevel}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Allow recording playback for history'}"></CheckBox>

                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Chat.Profit" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.Profit}" VerticalAlignment="Center" Name="chkChatProfit"  IsChecked="{Binding ProfitRulesAreUsed}" DetailContent="{Binding ProfitDescription}" DetailVisibility="{Binding ElementName=chkChatProfit, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define profit'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkChatProfit, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Starting profit:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding InitialProfit}" NumberFormat="0" MinimumValue="1"></nixxis:NumericUpDown>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Alternate profit:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding AlternateInitialProfit}" NumberFormat="0" MinimumValue="1"></nixxis:NumericUpDown>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Alternate profit matching regexp:'}"></Label>
                                    <TextBox Text="{Binding AlternateInitialProfitRule}"></TextBox>
                                </nixxis:NixxisStackPanel>
                            </GroupBox>




                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkChatPostWrapupBehavior" IsChecked="{Binding IsPostWrapupBehaviorDefined}" DetailContent="{Binding PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkChatPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkChatPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                <nixxis:NixxisStackPanel>


                                    <CheckBox Name="chkChatModifyWrapupTime" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkChatModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                        <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                    <CheckBox  local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.Alert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.Alert}" IsChecked="{Binding PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.SupAlert}" IsChecked="{Binding PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.CloseScript}" IsChecked="{Binding PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.ForceReady}" IsChecked="{Binding PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkChatPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                <nixxis:NixxisStackPanel>

                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsChecked="{Binding PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                    <CheckBox Name="chkChatModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkChatModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                        <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Chat.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Chat.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>



                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Call flow inbound-->
            <nixxis:NixxisTabItem Visibility="{Binding MediaType, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:MediaType.Voice}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_CallFlow.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Call flow'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wait music delay:'}"></Label>
                            <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Inbound.WaitMusicDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitMusicDelay}"  Duration="{Binding QueueMusicDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="true"></nixxis:DurationPicker>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Preprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource VoicePreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Preprocessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Preprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource VoicePreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Preprocessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Inbound.Preprocessor" Click="ConfigureVoicePreprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Inbound.Preprocessor"></Binding>
                                        <Binding Path="Preprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>

                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <CheckBox local:RightsManagement.Rights="Campaign.Inbound.GenerateRingback" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.GenerateRingback}" IsChecked="{Binding Ring}"  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Generate ringback'}"></CheckBox>

                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Inbound.GenerateOverflow" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.GenerateOverflow}" VerticalAlignment="Center" Name="chkPromptForOvf"  IsChecked="{Binding PromptForOverflow}" DetailContent="{Binding OverflowPromptDescription}" DetailVisibility="{Binding ElementName=chkPromptForOvf, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Prompt for overflow'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkPromptForOvf, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Message to prompt:'}"></Label>
                                    <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" ItemsSource="{Binding AllPrompts, Mode=OneWay, Converter={StaticResource AtivityPromptsToPromptsConverter}}" SelectedItem="{Binding Path=OverflowPrompt.Target, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  SelectedValuePath="Id" DisplayMemberPath="DisplayText">
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <nixxis:NixxisPlayback nixxis:NixxisStackPanel.KeepNextAttached="True" Path="{Binding Path=OverflowPrompt.Target.PathUri}"></nixxis:NixxisPlayback>
                                    <Button Click="AddPromptToOverflowPrompt">
                                        <Border Height="20" Width="20">
                                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                        </Border>
                                    </Button>



                                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='DTMFs triggering the overflow:'}"></Label>
                                    <TextBox  Text="{Binding OverflowActiveDTMFs}"></TextBox>

                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skipped loops before prompting for the first time:'}"></Label>
                                    <nixxis:NumericUpDown NumberFormat="0"  Value="{Binding OverflowPromptStartingLoop}"></nixxis:NumericUpDown>

                                    <TextBlock  Margin="0,5,0,0" ><Hyperlink Foreground="{StaticResource CheckedGreenBackgroundBrush}" Click="Hyperlink_Click">Configure the action when overflow is triggered...</Hyperlink></TextBlock>

                                </nixxis:NixxisStackPanel>


                            </GroupBox>

                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel >


                            <!--Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wait music:'}" nixxis:NixxisStackPanel.KeepNextAttached="True"></Label-->
                            <Label Content="{Binding WaitMusicDescription}"></Label>
                            <!--<ComboBox local:RightsManagement.Rights="Campaign.Inbound.WaitMusic" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitMusic}" nixxis:NixxisStackPanel.KeepNextAttached="True" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource WaitMusicProcessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding WaitMusicProcessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>-->

                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.WaitMusic" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitMusic}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource WaitMusicProcessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding WaitMusicProcessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding WaitMusicProcessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.WaitMusic" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.WaitMusic}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource WaitMusicProcessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding WaitMusicProcessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding WaitMusicProcessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Button local:RightsManagement.Rights="Campaign.Inbound.WaitMusic" Click="ConfigureWaitMusicProcessor_Click" >

                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Inbound.WaitMusic"></Binding>
                                        <Binding Path="WaitMusicProcessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>


                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>








                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Play estimated waiting time:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.PlayEWT" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PlayEWT}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding TransmitEWT, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource frequencyHelper}}" ></ComboBox>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Play position in queue:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.PlayPosition" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PlayPosition}"  DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding TransmitPosition, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource frequencyHelper}}" ></ComboBox>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Loop time:'}"></Label>
                            <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Inbound.LoopTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.LoopTime}" Duration="{Binding WaitMusicLength}"></nixxis:DurationPicker>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Postprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Postprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource VoicePreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Postprocessor.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Inbound.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Postprocessor}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource VoicePreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Postprocessor.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Inbound.Postprocessor" Click="ConfigureVoicePostprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Inbound.Postprocessor"></Binding>
                                        <Binding Path="Postprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>

                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Dynamic parameters (inbound)-->
            <nixxis:NixxisTabItem>
                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                        <Binding Path="MediaType" Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:MediaType.Voice}"></Binding>
                        <Binding Source="{StaticResource ParamDefs}" Path="Count" Converter="{StaticResource IneqConverter}" ConverterParameter="{StaticResource 0}"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_General.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Dynamic parameters'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid Margin="10" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The list of dynamic parameters and their values:'}"></Label>
                    <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.DynamicParamaters" IsDisabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameters}" DefaultSortOrder="Item.DisplayText" Grid.Row="1" Name="DGinDynamicParameters" EditMode="SingleClick" ItemsSource="{Binding CheckedDynamicParameters}"  CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="Images\AdminSmall_General.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Parameter'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>

                            <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action'}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding Link.Action}">
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Visibility="{Binding HasLink, Converter={StaticResource VisWithCollapseConverter}}"
                                            DisplayMemberPath="Description"  
                                            SelectedValuePath="EnumValue" 
                                            SelectedValue="{Binding Link.Action, UpdateSourceTrigger=PropertyChanged}"
                                            ItemsSource="{Binding Source={StaticResource DynamicParameterActions}}"></ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Value'}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed">
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Text}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>

                                            <TextBlock Text="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Numeric}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>

                                            <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Center">
                                                <CheckBox IsChecked="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}" >
                                                    <CheckBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                            <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Boolean}"></Binding>
                                                            <Binding Path="HasLink"></Binding>
                                                        </MultiBinding>
                                                    </CheckBox.Visibility>
                                                </CheckBox>
                                            </ContentControl>

                                            <TextBlock Text="{Binding Link.Queue.Target.DisplayText, UpdateSourceTrigger=PropertyChanged}" >
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                        <Binding Path="Link.Queue.HasTarget"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>

                                            <TextBlock Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='&lt;None&gt;'}" >
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" ConverterParameter="false,false,true" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                        <Binding Path="Link.Queue.HasTarget"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>





                                            <TextBlock Text="{Binding Link.Prompt.Target.DisplayText, UpdateSourceTrigger=PropertyChanged}" >
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Prompt}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                        <Binding Path="Link.Prompt.HasTarget"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>

                                            <TextBlock Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='&lt;None&gt;'}" >
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" ConverterParameter="false,false,true" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Prompt}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                        <Binding Path="Link.Prompt.HasTarget"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>


                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBox Text="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Text}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                    </MultiBinding>
                                                </TextBox.Visibility>
                                            </TextBox>

                                            <nixxis:NumericUpDown Value="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}" NumberFormat="0">
                                                <nixxis:NumericUpDown.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Numeric}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                    </MultiBinding>
                                                </nixxis:NumericUpDown.Visibility>
                                            </nixxis:NumericUpDown>

                                            <CheckBox IsChecked="{Binding Link.Value, UpdateSourceTrigger=PropertyChanged}" >
                                                <CheckBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Boolean}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                    </MultiBinding>
                                                </CheckBox.Visibility>
                                            </CheckBox>

                                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.DynamicParameter.Queue" 
                                                      IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameter.Queue}" 
                                                      IsSynchronizedWithCurrentItem="False" 
                                                      ItemsSource="{Binding Source={StaticResource ListQueuesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                                      SelectedValue="{Binding Link.Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                        <Binding Path="Link.Queue.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"/>
                                                    </MultiBinding>
                                                </ComboBox.Visibility>
                                            </ComboBox>
                                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.DynamicParameter.Queue" 
                                                      IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameter.Queue}" 
                                                      IsSynchronizedWithCurrentItem="False" 
                                                      ItemsSource="{Binding Source={StaticResource ListQueues}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                                      SelectedValue="{Binding Link.Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  >
                                                <ComboBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }"  TargetNullValue="Collapsed">
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Queue}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                        <Binding Path="Link.Queue.TargetId" Converter="{StaticResource isDummyId}"/>
                                                    </MultiBinding>
                                                </ComboBox.Visibility>

                                            </ComboBox>


                                            <ComboBox local:RightsManagement.Rights="Campaign.Inbound.DynamicParameter.Prompt" 
                                                      IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DynamicParameter.Prompt}" 
                                                      IsSynchronizedWithCurrentItem="False" 
                                                      ItemsSource="{Binding Source={StaticResource selectionHelper}, Path=Inbound.AllPrompts, Mode=OneWay, Converter={StaticResource AtivityPromptsToPromptsConverterWithNone}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" 
                                                      SelectedValue="{Binding Link.Prompt.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  >
                                                <ComboBox.Visibility>
                                                    <MultiBinding Converter="{StaticResource VisWithCollapseMultiConverter }" TargetNullValue="Collapsed" >
                                                        <Binding Path="Item.Type"  Converter="{StaticResource EqConverter}" ConverterParameter="{x:Static adminlink:DynamicParameterType.Prompt}"></Binding>
                                                        <Binding Path="HasLink"></Binding>
                                                    </MultiBinding>
                                                </ComboBox.Visibility>

                                            </ComboBox>

                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>





                        </nixxis:NixxisDataGrid.Columns>
                    </nixxis:NixxisDataGrid>
                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Skills-->
            <nixxis:NixxisTabItem Name="TabInSkills">
                <nixxis:NixxisTabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Skill.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skills'}"></TextBlock>
                    </StackPanel>
                </nixxis:NixxisTabItem.Header>
                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default skills required to handle a contact from this context'}"></Label>
                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.Skills" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Skills}" DefaultSortOrder="Item.DisplayText" Grid.Row="1" Name="DGInboundActivitySkills" EditMode="SingleClick"  ItemsSource="{Binding CheckedSkills}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                            <nixxis:NixxisDataGrid.Columns>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="Images\AdminSmall_Skill.png"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                            </nixxis:NixxisDataGrid.Columns>
                            <nixxis:NixxisDataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                </ContextMenu>
                            </nixxis:NixxisDataGrid.ContextMenu>
                        </nixxis:NixxisDataGrid>
                        <CheckBox local:RightsManagement.Rights="Campaign.Inbound.PreprocessorReplacesSkills" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PreprocessorReplacesSkills}" Margin="0,5,0,0" IsChecked="{Binding PreprocessorReplacesSkills}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces all default skills (substitue instead of merge)'}"></CheckBox>
                    </Grid>
                </ScrollViewer>
            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Languages-->
            <nixxis:NixxisTabItem Name="TabInLanguages">
                <nixxis:NixxisTabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Language.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Languages'}"></TextBlock>
                    </StackPanel>
                </nixxis:NixxisTabItem.Header>
                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The default languages required to handle a contact from this context'}"></Label>
                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.Languages" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Languages}" DefaultSortOrder="Item.DisplayText" Grid.Row="1"  Name="DGInboundActivityLanguages" EditMode="SingleClick"  ItemsSource="{Binding CheckedLanguages}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                            <nixxis:NixxisDataGrid.Columns>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="Images\AdminSmall_Skill.png"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridCheckBoxColumn ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                <nixxis:NixxisDataGridDoubleSliderColumn EnabledBinding="{Binding HasLink}" ElementStyle="{StaticResource DatagridDoubleSlider}" Minimum="0" Maximum="100" SliderWidth="100" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Level'}" SortMemberPath="Level" Binding="{Binding Link.LevelRange, UpdateSourceTrigger=PropertyChanged}"></nixxis:NixxisDataGridDoubleSliderColumn>
                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Skill'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                            </nixxis:NixxisDataGrid.Columns>
                            <nixxis:NixxisDataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                </ContextMenu>
                            </nixxis:NixxisDataGrid.ContextMenu>
                        </nixxis:NixxisDataGrid>
                        <CheckBox local:RightsManagement.Rights="Campaign.Inbound.PreprocessorReplacesLanguages" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.PreprocessorReplacesLanguages}" Margin="0,5,0,0" IsChecked="{Binding PreprocessorReplacesLanguages}" Grid.Row="2" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor replaces default language'}"></CheckBox>
                    </Grid>
                </ScrollViewer>
            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Overflow-->
            <nixxis:NixxisTabItem Name="OvfTabItem" Visibility="{Binding PromptForOverflow, Converter={StaticResource VisWithCollapseConverter}, FallbackValue=Collapsed}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Overflow.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Overflow'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <nixxis:NixxisStackPanel>

                    <local:OverflowHelper local:RightsManagement.Rights="Campaign.Inbound.Overflow" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Overflow}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when overflow is requested:'}"     
                                    Prompts="{Binding AllPrompts, Mode=OneWay}"
                                    OverflowActionType="{Binding OverflowActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    OverflowMessage="{Binding OverflowMessage}" 
                                          OverflowReroutePrompt="{Binding OverflowReroutePrompt}" 
                                    Preprocessors="{Binding Preprocessors, Mode=OneWay}" 
                                    OverflowPreprocessor="{Binding OverflowPreprocessor, Mode=OneWay}" 
                                    OverflowPreprocessorParams="{Binding OverflowPreprocessorParams}" 
                                    OverflowPreprocessorConfig="{Binding OverflowPreprocessorConfig}" 
                                    OverflowRerouteDestination ="{Binding OverflowRerouteDestination}"></local:OverflowHelper>
                </nixxis:NixxisStackPanel>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Qualifications-->
            <nixxis:NixxisTabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Qualification.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualifications'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <CheckBox local:RightsManagement.Rights="Campaign.Inbound.QualificationMandatory" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.QualificationMandatory}" Margin="0,0,0,5" IsChecked="{Binding QualificationRequired}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualifications are mandatory on this activity'}"></CheckBox>

                    <CheckBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Inbound.DisableManualQualification" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.DisableManualQualification}" Margin="0,0,0,5" IsChecked="{Binding DisableManualQualification}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Manual qualifications are disabled'}"></CheckBox>

                    <nixxis:NixxisTreeView local:RightsManagement.Rights="Campaign.Inbound.Qualifications" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Qualifications}"  Grid.Row="2"  ItemsSource="{Binding CheckedQualificationsExclusions, Converter={StaticResource SortQualifsConverter}}" ItemTemplate="{StaticResource QualificationExclusion}">

                        <nixxis:NixxisTreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                            </ContextMenu>
                        </nixxis:NixxisTreeView.ContextMenu>

                    </nixxis:NixxisTreeView>
                </Grid>



            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Planning-->
            <nixxis:NixxisTabItem Visibility="{Binding Planning.HasTarget, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=true}">
                <nixxis:NixxisTabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Planification.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Planning'}"></TextBlock>
                    </StackPanel>
                </nixxis:NixxisTabItem.Header>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <GroupBox Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Default schedule'}">
                                <nixxis:NixxisPlanning local:RightsManagement.Rights="Campaign.Inbound.Planning.DefaultSchedule" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning.DefaultSchedule}" Name="InboundPlanning" SelectionChanged="InboundPlanning_SelectionChanged"  IsReadOnly="true"  ItemsSource="{Binding CheckedTimeSpanActions}" StartTimePath="Item.StartTime" EndTimePath="Item.EndTime"  ClosedPath="Item.Closed" ></nixxis:NixxisPlanning>
                            </GroupBox>

                            <GroupBox Grid.Row="1" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Exceptions'}">
                                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.Planning.Exceptions" 
                                                       Name="DGSpecialDays" DefaultSortOrder="Item.Description" SelectionChanged="DGSpecialDays_SelectionChanged" ItemsSource="{Binding CheckedSpecialDayActions}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" 
                                                       IsReadOnly="True" >
                                    <nixxis:NixxisDataGrid.Columns>
                                        <DataGridTemplateColumn IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Image Source="Images\AdminSmall_Appointment.png"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Item.Description}"></DataGridTextColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Day'}" Binding="{Binding Item.Day}"></DataGridTextColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Month'}" Binding="{Binding Item.Month}"></DataGridTextColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Year'}" Binding="{Binding Item.Year}"></DataGridTextColumn>
                                    </nixxis:NixxisDataGrid.Columns>

                                    <nixxis:NixxisDataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                        </ContextMenu>
                                    </nixxis:NixxisDataGrid.ContextMenu>


                                </nixxis:NixxisDataGrid>
                            </GroupBox>

                        </Grid>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">

                        <GroupBox  Visibility="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection, Converter={StaticResource EqCConverter}}" Header="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Item.DisplayText}">

                            <Grid >
                                <Label Visibility="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Item.Closed, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='This schedule is opened'}"></Label>

                                <nixxis:NixxisStackPanel Visibility="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Item.Closed, Converter={StaticResource VisWithCollapseConverter}}">

                                    <RadioButton local:RightsManagement.Rights="Campaign.Inbound.Planning.UseDefaultSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning.UseDefaultSettings}" IsChecked="{Binding ElementName=chkInboundClosingExceptions, Path=IsChecked, Converter={StaticResource BoolInverter}}" Content="{nixxis:FormatString BindTo={Binding ClosedActionDescription},TranslationContext={StaticResource tcx},FormatString='Use default settings: [{0}]'}"></RadioButton>
                                    <RadioButton local:RightsManagement.Rights="Campaign.Inbound.Planning.OverrideDefaultSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning.OverrideDefaultSettings}" IsChecked="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.HasLink}" Name="chkInboundClosingExceptions" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Override default settings'}"></RadioButton>


                                    <local:OverflowHelper local:RightsManagement.Rights="Campaign.Inbound.Planning.OverflowSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Planning.OverflowSettings}" Visibility="{Binding ElementName=chkInboundClosingExceptions, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}"
                                    Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action:'}"
                                    Prompts="{Binding AllPrompts, Mode=OneWay}"
                                    OverflowActionType="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    OverflowMessage="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowMessage, Mode=OneWay}" 
                                    OverflowReroutePrompt="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowReroutePrompt, Mode=OneWay}" 
                                    Preprocessors="{Binding  Source={StaticResource selectionHelperInbound}, Path=Selection.Link.Activity.Preprocessors, Mode=OneWay}" 
                                                    OverflowPreprocessor="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowPreprocessor, Mode=OneWay}" 
                                    OverflowPreprocessorParams="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowPreprocessorParams}" 
                                                    OverflowPreprocessorConfig="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowPreprocessorConfig}" 
                                    OverflowRerouteDestination="{Binding Source={StaticResource selectionHelperInbound}, Path=Selection.Link.OverflowRerouteDestination}"></local:OverflowHelper>

                                </nixxis:NixxisStackPanel>
                            </Grid>

                        </GroupBox>

                    </ScrollViewer>

                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Prompts-->
            <nixxis:NixxisTabItem Name="TabInActivityPrompts" Visibility="{Binding MediaType, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:MediaType.Voice}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Prompt.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Prompts'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The available prompts for playing in this context'}"></Label>
                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Inbound.Prompts" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Prompts}"
                    SelectionChanged="DataGridActPrompts_SelectionChanged"
                    DefaultSortOrder="Prompt.Description" Grid.Row="1"  Name="DGInActPrompts" EditMode="SingleClick"  ItemsSource="{Binding Prompts}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                            <nixxis:NixxisDataGrid.Columns>

                                <nixxis:NixxisDataGridToggleDetailColumn SingleDetail="True" Header="">
                                    <nixxis:NixxisDataGridToggleDetailColumn.ToggleDetailTemplate>
                                        <ControlTemplate>
                                            <Image Width="25" Height="25" 
                                            Visibility="{Binding Prompt.HasRelatedPrompts, Converter={StaticResource VisWithCollapseConverter}}"
                                            RenderOptions.BitmapScalingMode="LowQuality" Source="Images\Action_Add.png">
                                            </Image>
                                        </ControlTemplate>
                                    </nixxis:NixxisDataGridToggleDetailColumn.ToggleDetailTemplate>
                                </nixxis:NixxisDataGridToggleDetailColumn>


                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <nixxis:NixxisPlayback Path="{Binding Prompt.PathUri}"></nixxis:NixxisPlayback>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn IsReadOnly="False" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Prompt.Description}"></DataGridTextColumn>

                                <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language'}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Prompt.Language.Target.DisplayText }"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding Prompt.Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText"></ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Path'}" Binding="{Binding Prompt.Path}"></DataGridTextColumn>


                            </nixxis:NixxisDataGrid.Columns>

                            <nixxis:NixxisDataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Affect to campaign'}" Command="local:AdminFrameSet.AffectToCampaign" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Makes globally available'}" Command="local:AdminFrameSet.AffectToCore" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                </ContextMenu>
                            </nixxis:NixxisDataGrid.ContextMenu>

                            <nixxis:NixxisDataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <Grid Visibility="{Binding Prompt.HasRelatedPrompts, Converter={StaticResource VisWithCollapseConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#dfdfdf" Margin="8,0,8,0"> 
                                        Related
                                            <TextBlock.LayoutTransform>
                                                <RotateTransform Angle="-90"></RotateTransform>
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>

                                        <nixxis:NixxisDataGrid 
                                            local:RightsManagement.Rights="Campaign.Inbound.Prompts" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Inbound.Prompts}"
                                    SelectionChanged="DataGridActPrompts_SelectionChanged"
                                    Grid.Column="1" Name="DGInActRelatedPrompts"  ItemsSource="{Binding Prompt.RelatedPrompts}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                                            <nixxis:NixxisDataGrid.Columns>

                                                <DataGridTemplateColumn IsReadOnly="True">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <nixxis:NixxisPlayback Path="{Binding PathUri}"></nixxis:NixxisPlayback>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>

                                                <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Language'}">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Language.Target.DisplayText }"></TextBlock>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                    <DataGridTemplateColumn.CellEditingTemplate>
                                                        <DataTemplate>
                                                            <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Core.Languages, Converter={StaticResource cboConverter}}" SelectedValuePath="Id" SelectedValue="{Binding Language.TargetId, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayText"></ComboBox>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellEditingTemplate>
                                                </DataGridTemplateColumn>


                                                <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Path'}" Binding="{Binding Path}"></DataGridTextColumn>

                                            </nixxis:NixxisDataGrid.Columns>

                                        </nixxis:NixxisDataGrid>

                                    </Grid>
                                </DataTemplate>
                            </nixxis:NixxisDataGrid.RowDetailsTemplate>


                        </nixxis:NixxisDataGrid>
                    </Grid>
                </ScrollViewer>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Security-->
            <nixxis:NixxisTabItem >

                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"  ></Binding>
                        <Binding Path="IsRightsHandlingAllowed"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Rights.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List of roles and their rights associated to the selected item:'}"></Label>

                    <nixxis:NixxisDataGrid Grid.Row="1" local:RightsManagement.Rights="Campaign.Inbound.Rights" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Rights}" DefaultSortOrder="DisplayText" Name="DGInboundRights" Margin="10" ItemsSource="{Binding RolesOverview}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" Loaded="DGRights_Loaded"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="Images\AdminSmall_Rights.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Role'}" Binding="{Binding DisplayText}"></DataGridTextColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}" Binding="{Binding Rights}"></DataGridTextColumn>

                        </nixxis:NixxisDataGrid.Columns>

                        <nixxis:NixxisDataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                            </ContextMenu>
                        </nixxis:NixxisDataGrid.ContextMenu>
                    </nixxis:NixxisDataGrid>

                    <nixxis:NixxisDataGrid Grid.Row="2" local:RightsManagement.Rights="Campaign.Inbound.Rights" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Inbound.Rights}" Name="DGInboundSubRights" EditMode="SingleClick" Margin="10" ItemsSource="{Binding ElementName=DGInboundRights, Path=SelectedItem.Security}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Right'}" Binding="{Binding RightDescription}"></DataGridTextColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsListAllowedEnabled}" VisibilityBinding="{Binding IsListAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List'}" Binding="{Binding ListAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsReadAllowedEnabled}" VisibilityBinding="{Binding IsReadAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Read'}" Binding="{Binding ReadAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsWriteAllowedEnabled}" VisibilityBinding="{Binding IsWriteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Write'}" Binding="{Binding WriteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsCreateAllowedEnabled}" VisibilityBinding="{Binding IsCreateAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Create'}" Binding="{Binding CreateAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsDeleteAllowedEnabled}" VisibilityBinding="{Binding IsDeleteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Delete'}" Binding="{Binding DeleteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsPowerUserEnabled}" VisibilityBinding="{Binding IsPowerUserVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Power'}" Binding="{Binding PowerUser, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsFullControlEnabled}" VisibilityBinding="{Binding IsFullControlVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Full'}" Binding="{Binding FullControl, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                        </nixxis:NixxisDataGrid.Columns>


                    </nixxis:NixxisDataGrid>


                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->


        </nixxis:NixxisTabControl>
        <!--EndRegion-->

        <!--Region Outbound Activities-->
        <nixxis:NixxisTabControl nixxis:PresentationGrid.Meaning="Properties" Name="OutActTabControl" DataContext="{Binding Source={StaticResource selectionHelper}, Path=Outbound}" >

            <nixxis:NixxisTabControl.Visibility>
                <MultiBinding Converter="{StaticResource specialConverter}" ConverterParameter="Out" TargetNullValue="Collapsed">
                    <Binding Source="{StaticResource selectionHelper}" Path="Inbound"/>
                    <Binding Source="{StaticResource selectionHelper}" Path="Outbound"/>
                    <Binding Source="{StaticResource List}" Path="CurrentItem"/>
                </MultiBinding>
            </nixxis:NixxisTabControl.Visibility>

            <!--Region General-->
            <nixxis:NixxisTabItem>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Activity.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='General'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto" ></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer  CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel>

                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The outbound activity is currently running'}"></Label>
                            <Label Visibility="{Binding Paused, Converter={StaticResource VisWithCollapseConverter}}" Foreground="Red" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='The outbound activity is currently in pause'}"></Label>
                            <ToggleButton local:RightsManagement.Rights="Campaign.Outbound.Paused" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Paused}" IsChecked="{Binding Paused}">
                                <Grid>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}, ConverterParameter=false}" Foreground="Red" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to pause the activity'}"></TextBlock>
                                    <TextBlock Visibility="{Binding Paused, Converter={StaticResource VisConverter}}" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Click to unpause outbound'}"></TextBlock>
                                </Grid>
                            </ToggleButton>

                            <Label Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Id:'}"></Label>
                            <TextBox Visibility="{Binding Source={x:Static local:AdminFrameSet.Settings}, Path=IsDebug, Converter={StaticResource VisWithCollapseConverter}}" IsReadOnly="True" 
                                Text="{Binding Id, Mode=OneWay}"></TextBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Outbound.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Description}" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Text="{Binding Description}"></TextBox>
                            <TextBox local:RightsManagement.Rights="Campaign.Outbound.Description" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Description}" IsReadOnly="True" Visibility="{Binding IsSystem, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding DisplayText, Mode=OneWay}"></TextBox>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Security context:'}">
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContexts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.SecurityContext" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.SecurityContext}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource SecurityContextsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding SecurityContext.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="SecurityContext.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <Label Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Salesforce mode:'}"></Label>
                            <ComboBox  Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" local:RightsManagement.Rights="Campaign.Outbound.SalesforceMode" IsEnabled="{Binding ElementName=MySelf, Path=SelectedItem, Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.SalesforceMode}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding SalesforceMode, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding Source={StaticResource salesforceModes} }" ></ComboBox>

                            <Label Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Salesforce Object:'}"></Label>
                            <TextBox Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Outbound.Salesforce.Campaign" IsReadOnly="True" Text="{Binding SalesforceCampaignDescription}"></TextBox>
                            <Button Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Salesforce}}" local:RightsManagement.Rights="Campaign.Outbound.Salesforce.Choosecampaign" Click="ChooseSalesforceCampaign" >
                                <Border Height="20" Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Originator:'}"></Label>
                            <TextBox local:RightsManagement.Rights="Campaign.Outbound.Originator" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Originator}" Text="{Binding Originator}"></TextBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Dialing mode:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.DialingMode" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.DialingMode}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding OutboundMode, UpdateSourceTrigger=PropertyChanged}"  >
                                <ComboBox.ItemsSource>
                                    <MultiBinding Converter="{StaticResource srcChooser}">
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                        <Binding Source="{StaticResource dialingModeHelper}"></Binding>
                                        <Binding Source="{StaticResource expressDialingModeHelper}"></Binding>
                                    </MultiBinding>
                                </ComboBox.ItemsSource>

                            </ComboBox>

                            <Label Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Abandon rate (in %):'}"></Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.TargetAbandons" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.TargetAbandons}" Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding TargetAbandons}"></nixxis:NumericUpDown>

                            <Label Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Abandon rate (in %):'}"></Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.AbandonRate" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AbandonRate}" Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding TargetAbandons}"></nixxis:NumericUpDown>


                            <Label>Absolute maximum abandon rate (in %):
                                <Label.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,true,true,true,true,true,true" TargetNullValue="Collapsed">
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.CallbacksOnly}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Preview}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Progressive}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Power}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Fixed}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Search}"></Binding>
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Outbound.MaxAbandon"></Binding>
                                    </MultiBinding>
                                </Label.Visibility>
                            </Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.MaxAbandon" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.MaxAbandonEnabled}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding MaxAbandons}">
                                <nixxis:NumericUpDown.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,true,true,true,true,true,true" TargetNullValue="Collapsed">
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.CallbacksOnly}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Preview}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Progressive}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Power}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Fixed}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Search}"></Binding>
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Outbound.MaxAbandon"></Binding>
                                    </MultiBinding>
                                </nixxis:NumericUpDown.Visibility>
                            </nixxis:NumericUpDown>


                            <Label>Abandon rate interpretation:
                                <Label.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,true,true,true,true,true,true" TargetNullValue="Collapsed">
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.CallbacksOnly}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Preview}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Progressive}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Power}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Fixed}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Search}"></Binding>
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Outbound.AbandonRateInterpretation"></Binding>
                                    </MultiBinding>
                                </Label.Visibility>
                            </Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.AbandonRateInterpretation" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AbandonRateInterpretationEnabled}" DisplayMemberPath="Description" SelectedValuePath="EnumValue" SelectedValue="{Binding AbandonRateMode, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource abandonRateModeHelper}}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" ConverterParameter="true,true,true,true,true,true,true" TargetNullValue="Collapsed">
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.CallbacksOnly}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Preview}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Progressive}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Power}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Fixed}"></Binding>
                                        <Binding Path="OutboundMode" Converter="{StaticResource IneqCConverter}" ConverterParameter="{x:Static adminlink:DialingMode.Search}"></Binding>
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Outbound.AbandonRateInterpretation"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                            </ComboBox>

                            <Label Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Power}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Number of lines to dial per agent:'}"></Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.DialPerAgent" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.DialPerAgent}" Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Power}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding DialPerAgent}"></nixxis:NumericUpDown>

                            <Label Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Max dial per agent:'}"></Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.MaxDialPerAgent" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.MaxDialPerAgent}" Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.Predictive}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding MaxDialPerAgent}"></nixxis:NumericUpDown>

                            <Label Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Max dial per agent:'}"></Label>
                            <nixxis:NumericUpDown local:RightsManagement.Rights="Campaign.Outbound.MaxDialPerAgent" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.MaxDialPerAgent}" Visibility="{Binding OutboundMode, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DialingMode.RestrictedPower}}" NumberFormat="0" MinimumValue="0" MaximumValue="100" Increment="1" Value="{Binding MaxDialPerAgent}"></nixxis:NumericUpDown>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Ring time:'}"></Label>
                            <nixxis:DurationPicker local:RightsManagement.Rights="Campaign.Outbound.RingTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.RingTime}" Duration="{Binding RingTime}"></nixxis:DurationPicker>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Queue:'}"></Label>

                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueuesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}, ConverterParameter=true}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Queue" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Queue}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource ListQueues}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Queue.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Queue.TargetId, Converter={StaticResource isDummyId}}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Script:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Script" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Script}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource Scripts}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Script.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{Binding ScriptUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" ></ComboBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Informational language:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.InformationalLanguage" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.InformationalLanguage}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Languages}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding InformationalLanguage.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Outbound.LinesRestriction" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.LinesRestriction}" VerticalAlignment="Center" Name="chkOutboundRestricted"  IsChecked="{Binding LinesAreRestricted}" DetailContent="{Binding LinesRestrictionDescription}" DetailVisibility="{Binding ElementName=chkOutboundRestricted, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Restrict the number of lines'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkOutboundRestricted, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>
                                    <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Maximum number of lines:'}"></Label>
                                    <nixxis:NumericUpDown Value="{Binding Lines}" NumberFormat="0" MinimumValue="0"></nixxis:NumericUpDown>
                                </nixxis:NixxisStackPanel>
                            </GroupBox>







                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior}" VerticalAlignment="Center" Name="chkOutPostWrapupBehavior" IsChecked="{Binding IsPostWrapupBehaviorDefined}" DetailContent="{Binding PostWrapupBehaviorDescription}" DetailVisibility="{Binding ElementName=chkOutPostWrapupBehavior, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Define wrapup and auto ready behaviors'}"></nixxis:NixxisDetailedCheckBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkOutPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup settings'}">
                                <nixxis:NixxisStackPanel>


                                    <CheckBox Name="chkOutModifyWrapupTime" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.ModifyWrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.ModifyWrapupTime}" IsChecked="{Binding IsWrapupTimeModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify standard wrapup time'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkOutModifyWrapupTime, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set wrapup standard duration to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase wrapup standard duration by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseWrapupDuration}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease wrapup standard duration by'}"></RadioButton>

                                        <nixxis:DurationPicker Margin="22,0,0,0" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.WrapupTime" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.WrapupTime}" ShowMilliseconds="False" Duration="{Binding WrapupTime, Converter={StaticResource MultConverter}, ConverterParameter=1000}"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                    <CheckBox  local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.WrapupExtendable" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.WrapupExtendable}" IsChecked="{Binding WrapupExtendable}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Wrapup duration can be extended'}"></CheckBox>


                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.Alert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.Alert}" IsChecked="{Binding PostWrapupOptionsAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.SupAlert" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.SupAlert}" IsChecked="{Binding PostWrapupOptionsSupAlert}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Send supervisor alert'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.CloseScript" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.CloseScript}" IsChecked="{Binding PostWrapupOptionsCloseScript}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Close the script'}"></CheckBox>
                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.ForceReady" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.ForceReady}" IsChecked="{Binding PostWrapupOptionsForceReady}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Force ready'}"></CheckBox>



                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkOutPostWrapupBehavior, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Auto ready settings'}">
                                <nixxis:NixxisStackPanel>

                                    <CheckBox IsThreeState="True" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.PostWrapupOptionsReadyWhenScriptIsClosed}" IsChecked="{Binding PostWrapupOptionsReadyWhenScriptIsClosed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Closing the script sets the agent ready'}"></CheckBox>

                                    <CheckBox Name="chkOutModifyAutoReadyDelay" local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.ModifyAutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.ModifyAutoReadyDelay}" IsChecked="{Binding IsAutoReadyDelayModified}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Modify auto ready delay'}"></CheckBox>

                                    <nixxis:NixxisStackPanel Margin="20,0,0,0" Visibility="{Binding ElementName=chkOutModifyAutoReadyDelay, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}">

                                        <RadioButton IsChecked="{Binding PostWrapupOptionsSetAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Set auto ready delay to a specific value'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsIncreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Increase auto ready delay by'}"></RadioButton>
                                        <RadioButton IsChecked="{Binding PostWrapupOptionsDecreaseAutoReadyDelay}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Decrease auto ready delay by'}"></RadioButton>

                                        <nixxis:DurationPicker  Margin="22,0,0,0"  local:RightsManagement.Rights="Campaign.Outbound.PostWrapupBehavior.AutoReadyDelay" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.PostWrapupBehavior.AutoReadyDelay}"  Duration="{Binding AutoReadyDelay, Converter={StaticResource MultConverter}, ConverterParameter=1000}" ShowMilliseconds="false"></nixxis:DurationPicker>
                                    </nixxis:NixxisStackPanel>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>




                        </nixxis:NixxisStackPanel>
                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Grid.RowSpan="5" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                        <nixxis:NixxisStackPanel>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Amd settings:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.AmdSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdSettings}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource AmdSettings}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding AmdSettings.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <Binding Path="AmdSettings.TargetId" Converter="{StaticResource isDummyId}" TargetNullValue="Collapsed"></Binding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.AmdSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdSettings}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource AmdSettingsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding AmdSettings.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <Binding Path="AmdSettings.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true" TargetNullValue="Collapsed"></Binding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Amd prompt:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.AmdPrompt" 
                                      IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdPrompt}" nixxis:NixxisStackPanel.KeepNextAttached="True" 
                                                    ItemsSource="{Binding AllPrompts, Mode=OneWay, Converter={StaticResource AtivityPromptsToPromptsConverterWithNone}}" 
                                                    SelectedValue="{Binding Path=AmdPrompt.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                                                    SelectedValuePath="Id" DisplayMemberPath="DisplayText">
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <nixxis:NixxisPlayback local:RightsManagement.Rights="Campaign.Outbound.AmdPrompt" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdPrompt}" nixxis:NixxisStackPanel.KeepNextAttached="True" Path="{Binding Path=AmdPrompt.Target.PathUri}"></nixxis:NixxisPlayback>
                            <Button local:RightsManagement.Rights="Campaign.Outbound.AmdPrompt" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AmdPrompt}" Click="AddPromptToAmdPrompt">
                                <Border Height="20" Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Black list:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.BlackList" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.BlackList}" nixxis:NixxisStackPanel.KeepNextAttached="True" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource BlackListProviders}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding BlackListProviderId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            </ComboBox>

                            <Button local:RightsManagement.Rights="Campaign.Outbound.BlackList" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.BlackList}" Click="ConfigureBlackListProvider_Click" >
                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>


                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Location:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Location" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Location}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Locations}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Location.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <Binding Path="Location.TargetId" Converter="{StaticResource isDummyId}" TargetNullValue="Collapsed"></Binding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Location" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Location}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource LocationsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Location.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <Binding Path="Location.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true" TargetNullValue="Collapsed"></Binding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Carrier:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outound.Carrier" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Carrier}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Carriers}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Carrier.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                        <Binding Path="Carrier.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outound.Carrier" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Carrier}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource CarriersNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Carrier.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                        <Binding Path="Carrier.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>

                            <Label  Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Callback rules:'}"></Label>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outound.CallbackRules" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.CallbackRules}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource CallbackRules}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding CallbackRules.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                        <Binding Path="CallbackRules.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox local:RightsManagement.Rights="Campaign.Outound.CallbackRules" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.CallbackRules}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource CallbackRulesNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding CallbackRules.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"></Binding>
                                        <Binding Path="CallbackRules.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>


                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Preprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Outound.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Preprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="Preprocessor.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Outound.Preprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Preprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Preprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="Preprocessor.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Outbound.Preprocessor" Click="ConfigureVoicePreprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Outbound.Preprocessor"></Binding>
                                        <Binding Path="Preprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>

                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Postprocessor:'}"></Label>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Outound.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Postprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessors}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="Postprocessor.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <ComboBox nixxis:NixxisStackPanel.KeepNextAttached="True" local:RightsManagement.Rights="Campaign.Outound.Postprocessor" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outound.Postprocessor}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource VoicePreprocessorsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Postprocessor.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                        <Binding Path="Postprocessor.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                    </MultiBinding>
                                </ComboBox.Visibility>
                                <ComboBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                            <Button local:RightsManagement.Rights="Campaign.Outbound.Postprocessor" Click="ConfigureVoicePostprocessor_Click" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="false">
                                        <Binding Converter="{StaticResource rightsConverter}" ConverterParameter="Campaign.Outbound.Postprocessor"></Binding>
                                        <Binding Path="Postprocessor.Target.EditorUrl" Converter="{StaticResource IneqConverter}" ConverterParameter="{x:Null}" FallbackValue="false"></Binding>
                                    </MultiBinding>
                                </Button.IsEnabled>

                                <Border Width="20">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L5.5,3 0.5,5.5" Stroke="{DynamicResource GlyphBrush}" Margin="6,0,6,0" Height="11" StrokeThickness="2" Stretch="Fill" />
                                </Border>
                            </Button>

                            <CheckBox local:RightsManagement.Rights="Campaign.Outbound.AutoRecord" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.AutoRecord}" IsThreeState="true" ToolTip="{Binding AutomaticRecordingDescription}" IsChecked="{Binding AutomaticRecording}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Record all this activity conversations automatically'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Outbound.ListenAllowed" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.ListenAllowed}" IsChecked="{Binding ListenAllowed}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Listen allowed to this activity conversations'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Outbound.RecordingPlaybackLevel" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.RecordingPlaybackLevel}" IsChecked="{Binding RecordingPlaybackLevel}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Allow recording playback for history'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Outbound.TargetedCBNeverPaused" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.TargetedCBNeverPaused}" IsChecked="{Binding TargetedCallbackNeverPaused}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Targeted callbacks are never paused'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Outbound.TargetedCBRequiresTeam" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.TargetedCBRequiresTeam}" IsChecked="{Binding TargetedCallbacksRequireTeamMembership}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Targeted callbacks require team membership'}"></CheckBox>

                            <CheckBox local:RightsManagement.Rights="Campaign.Outbound.EnqueueCallbacks" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.EnqueueCallbacks}" IsChecked="{Binding EnqueueCallbacks}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Callbacks are enqueued'}"></CheckBox>

                            <nixxis:NixxisDetailedCheckBox local:RightsManagement.Rights="Campaign.Outbound.UsesPlanning" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.UsesPlanning}" Checked="chkOutboundPlanning_Checked" IsChecked="{Binding HasPlanning}" VerticalAlignment="Center" Name="chkOutboundPlanning"  DetailContent="{Binding PlanningSettings}" DetailVisibility="{Binding ElementName=chkOutboundPlanning, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Use planning'}"></nixxis:NixxisDetailedCheckBox>
                            <GroupBox Margin="20,0,0,0" Visibility="{Binding ElementName=chkOutboundPlanning, Path=IsDetailChecked, Converter={StaticResource VisWithCollapseConverter}}">
                                <nixxis:NixxisStackPanel>

                                    <Label Grid.Row="0" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Planning used to specify closing hours:'}"></Label>
                                    <ComboBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Outbound.Planning" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource Plannings}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="Planning.TargetId" Converter="{StaticResource isDummyId}"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>
                                    <ComboBox local:RightsManagement.Rights="Campaign.Outbound.Planning" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning}" IsSynchronizedWithCurrentItem="False"  ItemsSource="{Binding Source={StaticResource PlanningsNoDummies}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding Planning.TargetId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed" >
                                                <Binding Path="Planning.TargetId" Converter="{StaticResource isDummyId}" ConverterParameter="true"></Binding>
                                            </MultiBinding>
                                        </ComboBox.Visibility>
                                        <ComboBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                            </ContextMenu>
                                        </ComboBox.ContextMenu>
                                    </ComboBox>

                                    <local:OutboundClosingHelper Visibility="{Binding Planning.Target, Converter={StaticResource EqCConverter}}"
                                        OutboundClosingActionType="{Binding ClosedActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        OutboundClosingDialingMode="{Binding ClosedParam, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action when the planning indicates it is closed:'}"></local:OutboundClosingHelper>

                                </nixxis:NixxisStackPanel>
                            </GroupBox>

                        </nixxis:NixxisStackPanel>

                    </ScrollViewer>


                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Sort order-->
            <nixxis:NixxisTabItem Name="SortOrderTab" Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Standard}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_SortOrder.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Sort order'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Outbound.SortOrders" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Outbound.SortOrders}" DefaultSortOrder="Sequence" Grid.Row="1" Name="DGUserSortOrder" EditMode="SingleClick" ItemsSource="{Binding SortFields}"  CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                    <nixxis:NixxisDataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding Converter={StaticResource adminObjectConverter}}" ToolTip="{Binding Details}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Visibility="Collapsed" CanUserSort="False" IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Sequence'}" Binding="{Binding Sequence}"></DataGridTextColumn>

                        <DataGridTextColumn CanUserSort="False" IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Field'}" Binding="{Binding Field.TypedDisplayText}"></DataGridTextColumn>

                        <nixxis:NixxisDataGridComboBoxColumn CanUserSort="False" EditingElementStyle="{StaticResource {x:Type ComboBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Order'}" SelectedValueBinding="{Binding  SortOrder, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"  SelectedValuePath="EnumValue" ItemsSource="{Binding Source={StaticResource SortOrders}}"/>

                    </nixxis:NixxisDataGrid.Columns>

                    <nixxis:NixxisDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                        </ContextMenu>
                    </nixxis:NixxisDataGrid.ContextMenu>
                </nixxis:NixxisDataGrid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Filters-->
            <nixxis:NixxisTabItem Name="FilterTab" Visibility="{Binding Campaign.Target.CustomDataSource, Converter={StaticResource IneqCConverter}, ConverterParameter={x:Static adminlink:DataSourceType.Standard}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Filter.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Data filter'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto" ></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Select the records matching at least one of the following conditions:'}"></Label>

                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Outbound.Filters" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Outbound.Filters}" DefaultSortOrder="Item.Id" Grid.Row="1" EditMode="SingleClick" ItemsSource="{Binding CheckedActivityFilters}"  CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >

                            <nixxis:NixxisDataGrid.Columns>
                                <DataGridTemplateColumn CanUserSort="False" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="Images\AdminSmall_Filter.png"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridCheckBoxColumn CanUserSort="False" IsThreeState="True" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Binding="{Binding HasLink, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>
                                <DataGridTextColumn CanUserSort="False" IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Filter'}" Binding="{Binding Item.DisplayText}"></DataGridTextColumn>
                            </nixxis:NixxisDataGrid.Columns>

                        </nixxis:NixxisDataGrid>


                    </Grid>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <Grid Grid.Column="2">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='And also matching the following conditions:'}"></Label>

                        <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Outbound.Filters" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Outbound.Filters}" DefaultSortOrder="Sequence" Grid.Row="1" Name="DGFilter" EditMode="SingleClick" ItemsSource="{Binding FilterParts}" CanUserSortColumns="False" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >

                            <nixxis:NixxisDataGrid.Columns>

                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Converter={StaticResource adminObjectConverter}}" ToolTip="{Binding Details}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Visibility="Collapsed" CanUserSort="False" IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Sequence'}" Binding="{Binding Sequence}"></DataGridTextColumn>

                                <DataGridTextColumn CanUserSort="False" IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Field'}" Binding="{Binding Field.Target.TypedDisplayText}"></DataGridTextColumn>

                                <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Operator'}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Operator, Converter={StaticResource operatorConverter}}"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding Field.Target.DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.String}}" ItemsSource="{Binding Source={StaticResource stringOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding Field.Target.DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Char}}" ItemsSource="{Binding Source={StaticResource stringOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding Field.Target.DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Integer}}" ItemsSource="{Binding Source={StaticResource intOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding Field.Target.DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Float}}" ItemsSource="{Binding Source={StaticResource intOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding Field.Target.DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Datetime}}" ItemsSource="{Binding Source={StaticResource datetimeOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" Visibility="{Binding Field.Target.DBType, Converter={StaticResource IneqConverter}, ConverterParameter={x:Static adminlink:DBTypes.Boolean}}" ItemsSource="{Binding Source={StaticResource boolOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Operand'}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock Visibility="{Binding OperandField.HasTarget, Converter={StaticResource VisWithCollapseConverter}}" Text="{Binding OperandField.Target.TypedDisplayText, Converter={StaticResource DbgConverter}}"></TextBlock>

                                                <TextBlock Text="{Binding OperandText}">
                                                    <TextBlock.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter2}" TargetNullValue="Collapsed">
                                                            <Binding Path="OperandField.HasTarget"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </TextBlock.Visibility>
                                                </TextBlock>

                                                <TextBlock Text="{Binding OperandText, Converter={StaticResource durationConverter2}}">
                                                    <TextBlock.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter2}" ConverterParameter="{x:Static adminlink:DBTypes.Time}" TargetNullValue="Collapsed">
                                                            <Binding Path="OperandField.HasTarget"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </TextBlock.Visibility>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.StringAgentsFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.AgentString}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                            <Binding Path="Field.Target.Lookup"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.StringActivitiesFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.ActivityString}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                            <Binding Path="Field.Target.Lookup"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.StringAreasFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.AreaString}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                            <Binding Path="Field.Target.Lookup"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.StringQualificationsFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.QualificationString}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                            <Binding Path="Field.Target.Lookup"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.StringFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.String}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                            <Binding Path="Field.Target.Lookup"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>

                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.StringFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.Char}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>

                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.IntFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.Integer}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox  IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.IntFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.Float}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox  IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.DateTimeFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}" Text="{Binding OperandText, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" DisplayMemberPath="TypedDisplayText" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.Datetime}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <ComboBox IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Activity.Target.Campaign.Target.BoolFields}" SelectedValue="{Binding OperandField.TargetId, UpdateSourceTrigger=PropertyChanged}"  DisplayMemberPath="TypedDisplayText" Text="{Binding OperandText}" IsEditable="True" SelectedValuePath="Id">
                                                    <ComboBox.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.Boolean}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </ComboBox.Visibility>
                                                </ComboBox>
                                                <nixxis:DurationPicker Duration="{Binding OperandText,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource durationConverter}}" ShowSeconds="False">
                                                    <nixxis:DurationPicker.Visibility>
                                                        <MultiBinding Converter="{StaticResource OperatorTypeConverter}" ConverterParameter="{x:Static adminlink:DBTypes.Time}" TargetNullValue="Collapsed">
                                                            <Binding Path="Field.Target.DBType"></Binding>
                                                            <Binding Path="Operator"></Binding>
                                                        </MultiBinding>
                                                    </nixxis:DurationPicker.Visibility>
                                                </nixxis:DurationPicker>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Visibility="{Binding CombineOperator, Converter={StaticResource EqConverter}, ConverterParameter={x:Static adminlink:CombineOperator.None}}" Text="{Binding CombineOperator}"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox Visibility="{Binding CombineOperator, Converter={StaticResource EqConverter}, ConverterParameter={x:Static adminlink:CombineOperator.None}}" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding Source={StaticResource combineOperators}}" SelectedValuePath="EnumValue" SelectedValue="{Binding CombineOperator, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Description"></ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                            </nixxis:NixxisDataGrid.Columns>

                            <nixxis:NixxisDataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                </ContextMenu>
                            </nixxis:NixxisDataGrid.ContextMenu>

                        </nixxis:NixxisDataGrid>

                    </Grid>

                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Qualifications-->
            <nixxis:NixxisTabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Qualification.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualifications'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <CheckBox local:RightsManagement.Rights="Campaign.Outbound.QualificationRequired" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.QualificationRequired}" IsChecked="{Binding QualificationRequired}" Margin="0,0,0,5" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Qualifications are mandatory on this activity'}"></CheckBox>

                    <CheckBox Grid.Row="1" local:RightsManagement.Rights="Campaign.Outbound.DisableManualQualification" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.DisableManualQualification}" Margin="0,0,0,5" IsChecked="{Binding DisableManualQualification}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Manual qualifications are disabled'}"></CheckBox>


                    <nixxis:NixxisTreeView local:RightsManagement.Rights="Campaign.Outbound.Qualifications" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Qualifications}" Grid.Row="2"  ItemsSource="{Binding CheckedQualificationsExclusions, Converter={StaticResource SortQualifsConverter}}" ItemTemplate="{StaticResource QualificationExclusion}">

                        <nixxis:NixxisTreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                            </ContextMenu>
                        </nixxis:NixxisTreeView.ContextMenu>

                    </nixxis:NixxisTreeView>

                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Planning-->
            <nixxis:NixxisTabItem Visibility="{Binding Planning.HasTarget, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=true}">
                <nixxis:NixxisTabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Planification.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Planning'}"></TextBlock>
                    </StackPanel>
                </nixxis:NixxisTabItem.Header>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <GroupBox Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Default schedule'}">
                                <nixxis:NixxisPlanning local:RightsManagement.Rights="Campaign.Outbound.Planning.DefaultSchedule" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning.DefaultSchedule}" Name="OutboundPlanning" SelectionChanged="OutboundPlanning_SelectionChanged"  IsReadOnly="true"  ItemsSource="{Binding CheckedTimeSpanActions}" StartTimePath="Item.StartTime" EndTimePath="Item.EndTime"  ClosedPath="Item.Closed" ></nixxis:NixxisPlanning>
                            </GroupBox>

                            <GroupBox Grid.Row="1" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Exceptions'}">
                                <nixxis:NixxisDataGrid local:RightsManagement.Rights="Campaign.Outbound.Planning.Exceptions" Name="DGOutSpecialDays" DefaultSortOrder="Item.Description" SelectionChanged="DGOutSpecialDays_SelectionChanged" ItemsSource="{Binding CheckedSpecialDayActions}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" IsReadOnly="True" >
                                    <nixxis:NixxisDataGrid.Columns>
                                        <DataGridTemplateColumn IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Image Source="Images\AdminSmall_Appointment.png"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Description'}" Binding="{Binding Item.Description}"></DataGridTextColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Day'}" Binding="{Binding Item.Day}"></DataGridTextColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Month'}" Binding="{Binding Item.Month}"></DataGridTextColumn>
                                        <DataGridTextColumn EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Year'}" Binding="{Binding Item.Year}"></DataGridTextColumn>
                                    </nixxis:NixxisDataGrid.Columns>

                                    <nixxis:NixxisDataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                                        </ContextMenu>
                                    </nixxis:NixxisDataGrid.ContextMenu>


                                </nixxis:NixxisDataGrid>
                            </GroupBox>

                        </Grid>

                    </ScrollViewer>

                    <GridSplitter IsTabStop="False" Grid.Column="1" Margin="5,0,5,0"  ResizeDirection="Columns" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"  ></GridSplitter>

                    <ScrollViewer Grid.Column="2" CanContentScroll="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">

                        <GroupBox  Visibility="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection, Converter={StaticResource EqCConverter}}" Header="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection.Item.DisplayText}">

                            <Grid >

                                <Label Visibility="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection.Item.Closed, Converter={StaticResource VisWithCollapseConverter}, ConverterParameter=false}" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='This schedule is opened'}"></Label>

                                <nixxis:NixxisStackPanel Visibility="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection.Item.Closed, Converter={StaticResource VisWithCollapseConverter}}">

                                    <RadioButton local:RightsManagement.Rights="Campaign.Outbound.Planning.UseDefault" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning.UseDefault}" IsChecked="{Binding ElementName=chkOutboundClosingExceptions, Path=IsChecked, Converter={StaticResource BoolInverter}}" Content="{nixxis:FormatString BindTo={Binding ClosedActionDescription},TranslationContext={StaticResource tcx},FormatString='Use default settings: [{0}]'}"></RadioButton>
                                    <RadioButton local:RightsManagement.Rights="Campaign.Outbound.Planning.OverrideDefaultSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning.OverrideDefaultSettings}" IsChecked="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection.HasLink}" Name="chkOutboundClosingExceptions" Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Override default settings'}"></RadioButton>


                                    <local:OutboundClosingHelper local:RightsManagement.Rights="Campaign.Outbound.Planning.OverflowSettings" IsEnabled="{Binding ., Converter={StaticResource rightsConverter}, ConverterParameter=Campaign.Outbound.Planning.OverflowSettings}" Visibility="{Binding ElementName=chkOutboundClosingExceptions, Path=IsChecked, Converter={StaticResource VisWithCollapseConverter}}"
                                    Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Action:'}"
                                    OutboundClosingActionType="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection.Link.ClosedActionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    OutboundClosingDialingMode="{Binding Source={StaticResource selectionHelperOutbound}, Path=Selection.Link.ClosedParam}"></local:OutboundClosingHelper>

                                </nixxis:NixxisStackPanel>
                            </Grid>

                        </GroupBox>

                    </ScrollViewer>

                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->

            <!--Region Security-->
            <nixxis:NixxisTabItem >

                <nixxis:NixxisTabItem.Visibility>
                    <MultiBinding Converter="{StaticResource BoolMultiAndConverter}" TargetNullValue="Collapsed">
                        <Binding Source="{x:Static local:AdminFrameSet.Settings}" Path="IsFullVersion"  ></Binding>
                        <Binding Path="IsRightsHandlingAllowed"></Binding>
                    </MultiBinding>
                </nixxis:NixxisTabItem.Visibility>

                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="25" Height="25" Source="Images\AdminSmall_Rights.png"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Content="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List of roles and their rights associated to the selected item:'}"></Label>

                    <nixxis:NixxisDataGrid Grid.Row="1" local:RightsManagement.Rights="Campaign.Outbound.Rights" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Outbound.Rights}" DefaultSortOrder="DisplayText" Name="DGOutboundRights" Margin="10" ItemsSource="{Binding RolesOverview}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed" Loaded="DGRights_Loaded"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="Images\AdminSmall_Rights.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Role'}" Binding="{Binding DisplayText}"></DataGridTextColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Rights'}" Binding="{Binding Rights}"></DataGridTextColumn>

                        </nixxis:NixxisDataGrid.Columns>

                        <nixxis:NixxisDataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource VisWithCollapseConverter}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Go to definition'}" Command="local:AdminFrameSet.ShowObject" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"></MenuItem>
                            </ContextMenu>
                        </nixxis:NixxisDataGrid.ContextMenu>
                    </nixxis:NixxisDataGrid>

                    <nixxis:NixxisDataGrid Grid.Row="2" local:RightsManagement.Rights="Campaign.Outbound.Rights" IsDisabled="{Binding ., Converter={StaticResource invertedRightsConverter}, ConverterParameter=Campaign.Outbound.Rights}" Name="DGOutboundSubRights" EditMode="SingleClick" Margin="10" ItemsSource="{Binding ElementName=DGOutboundRights, Path=SelectedItem.Security}" CanUserAddRows="False" HeadersVisibility="Column" RowDetailsVisibilityMode="Collapsed"  >
                        <nixxis:NixxisDataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding ., Converter={StaticResource adminObjectConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn IsReadOnly="True" EditingElementStyle="{StaticResource DatagridTextEdit}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Right'}" Binding="{Binding RightDescription}"></DataGridTextColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsListAllowedEnabled}" VisibilityBinding="{Binding IsListAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='List'}" Binding="{Binding ListAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsReadAllowedEnabled}" VisibilityBinding="{Binding IsReadAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Read'}" Binding="{Binding ReadAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsWriteAllowedEnabled}" VisibilityBinding="{Binding IsWriteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Write'}" Binding="{Binding WriteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsCreateAllowedEnabled}" VisibilityBinding="{Binding IsCreateAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Create'}" Binding="{Binding CreateAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsDeleteAllowedEnabled}" VisibilityBinding="{Binding IsDeleteAllowedVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Delete'}" Binding="{Binding DeleteAllowed, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsPowerUserEnabled}" VisibilityBinding="{Binding IsPowerUserVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Power'}" Binding="{Binding PowerUser, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True">
                            </nixxis:NixxisDataGridCheckBoxColumn>

                            <nixxis:NixxisDataGridCheckBoxColumn EnabledBinding="{Binding IsFullControlEnabled}" VisibilityBinding="{Binding IsFullControlVisible, Converter={StaticResource VisWithCollapseConverter}}" ElementStyle="{StaticResource DatagridCheckBox}" EditingElementStyle="{StaticResource {x:Type CheckBox}}" Header="{Binding Source={StaticResource tcx}, Converter={StaticResource tcv}, ConverterParameter='Full'}" Binding="{Binding FullControl, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" >
                            </nixxis:NixxisDataGridCheckBoxColumn>

                        </nixxis:NixxisDataGrid.Columns>


                    </nixxis:NixxisDataGrid>



                </Grid>

            </nixxis:NixxisTabItem>
            <!--EndRegion-->


        </nixxis:NixxisTabControl>
        <!--EndRegion-->

    </nixxis:PresentationGrid>
</UserControl>
