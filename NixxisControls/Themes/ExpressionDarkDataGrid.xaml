<!--
// Copyright (c) Trevor Webster
// This source is subject to the Microsoft Public License (Ms-PL).
// Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
// All other rights reserved.
-->    

    
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:local="clr-namespace:Nixxis.Client.Controls"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ExpressionDark.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <local:BoolInverterConverter x:Key="boolInverter"></local:BoolInverterConverter>

    <local:VSPHelper x:Key="VSP"></local:VSPHelper>
        
    <SolidColorBrush x:Key="DataGridLineBrush" />
    <SolidColorBrush x:Key="NormalBrush" Color="#0e0e0e" />
    <SolidColorBrush x:Key="ItemNormalBrush" Color="#0e0e0e" />
    <LinearGradientBrush x:Key="SelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#8ed500" Offset="0"/>
        <GradientStop Color="#5eb500" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ItemPanelBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#c6c8c7" Offset="0"/>
        <GradientStop Color="#949594" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HoverItemPanelBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#c6c8c7" Offset="0"/>
        <GradientStop Color="#949594" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush" Color="#FFD1D1D1" />
    <SolidColorBrush x:Key="RowHeaderPathBrush" Color="Red" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF787878" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#ffffff" Opacity="0" />
    <SolidColorBrush x:Key="HoverShineBrush" Color="White" Opacity="0.2">
    </SolidColorBrush>
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FF333333" />

    <SolidColorBrush x:Key="CellTextBrush" Color="#dfdfdf" />
    <SolidColorBrush x:Key="TabItemTextBrush" Color="Yellow" />
    <SolidColorBrush x:Key="CheckboxTextBrush" Color="#dfdfdf" />

        
    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042" Opacity="0">
        <GradientStop Color="#959796" Offset="0" />
        <GradientStop Color="#b0b2b1" Offset="1" />
    </LinearGradientBrush>

    <local:DebugConverter x:Key="myDebugConverter"></local:DebugConverter>

    <local:OpacityConverter x:Key="opacityConverter"></local:OpacityConverter>

        <!---->

   <sys:Int32 x:Key="0">0</sys:Int32>     
        
    <sys:Double x:Key="cellHeight">24</sys:Double>

    <!-- RowStyle-->
    <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <ControlTemplate.Resources>


                        <Storyboard x:Key="IsSelected_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelected_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedInactive_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedInactive_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="IsSelectedInactive2_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle2" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedInactive2_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle2" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>


                        <Storyboard x:Key="IsSelectedDetailsInactive_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedDetailsInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedDetailsInactive_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedDetailsInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        
                        
                    </ControlTemplate.Resources>
                    <Border x:Name="DGR_Border"
                            
                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=IsDisabled, Converter={StaticResource boolInverter}}"

                            Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.Resources>
                                <Storyboard x:Key="DetailsVisibleTransition">
                                    <DoubleAnimation Duration="00:00:0.1" Storyboard.TargetProperty="Height" Storyboard.TargetName="DetailsPresenter" />
                                </Storyboard>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="BackgroundRectangle" Fill="#212121" Grid.ColumnSpan="2" Grid.RowSpan="2"  />
                            
                            <Rectangle x:Name="SelectedRectangle" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="SelectedInactiveRectangle" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}"  Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="SelectedInactiveRectangle2" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}"  Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="SelectedDetailsInactiveRectangle" Opacity="0" Fill="Red"  Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="HoverRectangle" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <!--
                            No one seems to need row headers, so, just removed it to avoid the row virtualization bug...
                            <DataGridRowHeader Grid.RowSpan="2"
                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"                                       
                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                Path=HeadersVisibility, 
                                Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>-->
                            <DataGridCellsPresenter Grid.Column="1"     
                                                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=IsDisabled, Converter={StaticResource boolInverter}}"
                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                               x:Name="DetailsPresenter" 
                                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"                                                                                                                         
                                                               Visibility="{TemplateBinding DetailsVisibility}"                                                               
                                                               />                            
                            <Rectangle Height="1" HorizontalAlignment="Stretch" 
                                       x:Name="BottomGridLine" 
                                       Fill="{StaticResource DataGridLineBrush}" 
                                       Grid.Column="1" Grid.Row="2" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                       
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition  Property="local:NixxisDataGrid.IsSelectedActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelected_true}" />
                            </MultiTrigger.EnterActions>
                            
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelected_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="local:NixxisDataGrid.IsSelectedActive" Value="True" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:NixxisDataGrid.IsSelectedActive" Value="False" />
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive2_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive2_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:NixxisDataGrid.IsSelectedActive" Value="False" />
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="DetailsVisibility" Value="Visible"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedDetailsInactive_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedDetailsInactive_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.100" 
                                                                       Storyboard.TargetName="HoverRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       To="0.3"
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.300" 
                                                                       Storyboard.TargetName="HoverRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       To="0"
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- RowStyle2-->
    <Style x:Key="RowStyle2" TargetType="{x:Type local:NixxisDataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="AlertLevel" Value="-1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NixxisDataGridRow}">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="Alarm">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:01.0000000"
                                                                       Storyboard.TargetName="FlashRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>




                        <Storyboard x:Key="IsSelected_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelected_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedInactive_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedInactive_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="IsSelectedInactive2_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle2" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedInactive2_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedInactiveRectangle2" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>


                        <Storyboard x:Key="IsSelectedDetailsInactive_true">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedDetailsInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsSelectedDetailsInactive_false">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedDetailsInactiveRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>


                    </ControlTemplate.Resources>
                    <Border x:Name="DGR_Border"  
                  
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.Resources>
                                <Storyboard x:Key="DetailsVisibleTransition">
                                    <DoubleAnimation Duration="00:00:0.1" Storyboard.TargetProperty="Height" Storyboard.TargetName="DetailsPresenter" />
                                </Storyboard>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="BackgroundRectangle" Fill="#212121" Grid.ColumnSpan="2" Grid.RowSpan="2"  />

                            <Rectangle x:Name="SelectedRectangle" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="SelectedInactiveRectangle" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}"  Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="SelectedInactiveRectangle2" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}"  Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="SelectedDetailsInactiveRectangle" Opacity="0" Fill="Red"  Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <Rectangle x:Name="BackgroundRectangle2" Fill="Red" Grid.ColumnSpan="2" Grid.RowSpan="2" Margin="2" Opacity="{TemplateBinding AlertLevel, Converter={StaticResource opacityConverter }}" />
                            <Rectangle x:Name="FlashRectangle" Fill="{StaticResource SelectedBackgroundBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2" Margin="2" Opacity="0" />
                            <Rectangle x:Name="HoverRectangle" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <!--
                            No one seems to need row headers, so, just removed it to avoid the row virtualization bug...
                            <DataGridRowHeader Grid.RowSpan="2"
                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"                                       
                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                Path=HeadersVisibility, 
                                Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>-->
                            <DataGridCellsPresenter Grid.Column="1"
                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                               x:Name="DetailsPresenter" 
                                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"                                                                                                                         
                                                               Visibility="{TemplateBinding DetailsVisibility}"                                                               
                                                               />
                            <Rectangle Height="1" HorizontalAlignment="Stretch" 
                                       x:Name="BottomGridLine" 
                                       Fill="{StaticResource DataGridLineBrush}" 
                                       Grid.Column="1" Grid.Row="2" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>

                            <MultiTrigger.Conditions>
                                <Condition Property="AlertLevel" Value="{StaticResource 0}"  />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Alarm}" />
                            </MultiTrigger.EnterActions>


                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition  Property="local:NixxisDataGrid.IsSelectedActive" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelected_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelected_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="local:NixxisDataGrid.IsSelectedActive" Value="True" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:NixxisDataGrid.IsSelectedActive" Value="False" />
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive2_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedInactive2_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:NixxisDataGrid.IsSelectedActive" Value="False" />
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="DetailsVisibility" Value="Visible"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedDetailsInactive_true}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource IsSelectedDetailsInactive_false}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.100" 
                                                                       Storyboard.TargetName="HoverRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       To="0.3"
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.300" 
                                                                       Storyboard.TargetName="HoverRectangle" 
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       To="0"
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style TargetType="{x:Type Path}" x:Key="RowHeaderPathStyle">
        <Setter Property="Margin" Value="6,0,6,0" />
        <Setter Property="Data" Value="M 0,0 L 1.25,1 L 0,2 L 0,0" />
        <Setter Property="Fill" Value="{StaticResource GlyphBrush}" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="RenderTransformOrigin" Value="0,1" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Stroke" Value="Transparent" />
    </Style>
    <DataTemplate x:Key="RowHeaderContentTemplate">
        <Path Style="{StaticResource RowHeaderPathStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="RowHeaderOnDetailsContentTemplate">
        <Path Style="{StaticResource RowHeaderPathStyle}"
              Fill="{StaticResource RowHeaderPathBrush}"
              Stroke="Transparent">
            <Path.RenderTransform>
                <RotateTransform Angle="45" />
            </Path.RenderTransform>
        </Path>
    </DataTemplate>
    <local:DataGridRowHeaderCommand x:Key="deselectRowCommand" />
    <Style x:Key="RowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="MinHeight" Value="{StaticResource cellHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource cellHeight}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
        <Setter Property="BorderBrush" Value="#FFFFFF" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Command" Value="{StaticResource deselectRowCommand}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=DetailsVisibility}" Value="Visible">
                <Setter Property="ContentTemplate" Value="{StaticResource RowHeaderOnDetailsContentTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False">
                <Setter Property="Background" Value="#B8B8B8" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--CellStyle-->
    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}" >
        <Setter Property="Height" Value="{StaticResource cellHeight}" />
        <Setter Property="Foreground" Value="{StaticResource CellTextBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid x:Name="Root" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="FocusVisual" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" />
                        <ContentPresenter Content="{TemplateBinding Content}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="RightGridLine" VerticalAlignment="Stretch" Width="1" Grid.Column="1" />
                    </Grid>
                    <!--ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity" TargetName="FocusVisual" Value="0.8" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSelected" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>
    </Style>
    <!--Column Header-->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="{StaticResource cellHeight}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,4,5,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="#4d4d4d" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="10.5" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="#FFC9CACA" />
        <!--<Setter Property="Padding" Value="4,4,5,4" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <aero:DataGridHeaderBorder x:Name="HeaderBorder" 
                                                  SortDirection="{TemplateBinding SortDirection}"
                                                  IsHovered="{TemplateBinding IsMouseOver}"
                                                  IsPressed="{TemplateBinding IsPressed}"
                                                  IsClickable="{TemplateBinding CanUserSort}"
                                                  BorderBrush="#979998"
                                                  Background="{StaticResource ItemPanelBackgroundBrush}"
                                                  BorderThickness="0,0,1,1"

                                                  SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                  SeparatorBrush="{StaticResource DataGridLineBrush}">
                            <Grid Background="Transparent" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Grid.RowSpan="2" 
                                   Fill="{StaticResource ItemPanelBackgroundBrush}" 
                                   Stretch="Fill" 
                                   Stroke="#bebebe" StrokeThickness="1" />
                                <Rectangle x:Name="HoverRectangle" 
                                   Grid.ColumnSpan="2" Grid.RowSpan="2" Stretch="Fill" 
                                   Fill="{StaticResource HoverShineBrush}" 
                                   Opacity="0" />
                                <ContentPresenter Grid.Column="0" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  >
                                    <!--Anthony-->
                                    <!--ContentPresenter.Effect>
                                        <DropShadowEffect BlurRadius="0" ShadowDepth="2" Color="#babdbc" Opacity="1" RenderingBias="Quality"  ></DropShadowEffect>
                                    </ContentPresenter.Effect-->
                                </ContentPresenter>
                                <Rectangle x:Name="ShineRectangle" 
                                   Fill="{StaticResource ShineBrush}" 
                                   Stretch="Fill" 
                                   Stroke="{StaticResource NormalBorderBrush}" 
                                   StrokeThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                                <Path HorizontalAlignment="Left" x:Name="SortArrow" 
                                      VerticalAlignment="Center" Width="8" Opacity="0" 
                                      RenderTransformOrigin=".5,.5" Grid.Column="1" Grid.RowSpan="2" 
                                      Fill="{StaticResource GlyphBrush}"  
                                      Stretch="Uniform" 
                                      Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX=".9" ScaleY=".9" x:Name="SortIconTransform" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </aero:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                   HorizontalAlignment="Left"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
                   HorizontalAlignment="Right"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" 
                                                         Duration="00:00:00.20000"
                                                         Storyboard.TargetName="HoverRectangle" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         To="1"                                                         
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" 
                                                         Duration="00:00:00.20000"
                                                         Storyboard.TargetName="HoverRectangle" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         To="0"                                                         
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <!-- The DataGrid -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="{Binding Source={StaticResource VSP}, Path=IsVirtualizing}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="RowBackground" Value="{x:Null}" />
        <Setter Property="AlternatingRowBackground" Value="#00FFFFFF" />

        <Setter Property="Background" Value="#3e3e3e" />

        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridLineBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridLineBrush}" />
        <!--Setter Property="SelectionUnit" Value="CellOrRowHeader" /-->
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CanUserAddRows" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="CellStyle" Value="{StaticResource CellStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource RowStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource RowHeaderStyle}" />
        <Setter Property="RowHeaderTemplate" Value="{StaticResource RowHeaderContentTemplate}" />
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
    </Style>

    <Style x:Key="DatagridCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="IsHitTestVisible" Value="false" ></Setter>
        <Setter Property="Focusable" Value="false" ></Setter>
    </Style>


    <Style x:Key="DatagridSlider" TargetType="{x:Type Slider}" BasedOn="{StaticResource {x:Type Slider}}">
        <Setter Property="IsHitTestVisible" Value="false" ></Setter>
        <Setter Property="Focusable" Value="false" ></Setter>
    </Style>

    <Style x:Key="DatagridTextEdit" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">        
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="DatagridPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>


</ResourceDictionary>