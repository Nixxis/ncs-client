<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Nixxis.Client.Controls">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Themes/ExpressionDark.xaml"/>-->
        <ResourceDictionary Source="/NixxisWpfControlsCommon;component/Themes/ExpressionDarkPlus.xaml"/>        
    </ResourceDictionary.MergedDictionaries>

    <local:DebugConverter x:Key="debugConverter" />
    <local:BoolToVisibilityCollapsedConverter x:Key="boolToVisibilityCollapsedConverter" />
    <local:BoolToVisibilityHiddenConverter x:Key="boolToVisibilityHiddenConverter" />
    <local:NixxisComboboxItemPadding x:Key="nixxisComboboxItemPadding" />

    <Style x:Key="BaseCheckboxStyle" TargetType="{x:Type CheckBox}">

    </Style>

    <Style TargetType="{x:Type local:NixxisComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
        <!--<Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />-->
        <Setter Property="ItemContainerStyle" Value="{StaticResource NixxisComboboxItemStyle}"></Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate DataType="">
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding IsVisible, Converter={StaticResource boolToVisibilityCollapsedConverter}}">
                        <ToggleButton Content=">"
                                      IsChecked="{Binding IsExpanded}"
                                      Visibility="{Binding HasChildren, Converter={StaticResource boolToVisibilityHiddenConverter}}"
                                      Margin="{Binding Level, Converter={StaticResource nixxisComboboxItemPadding}}"
                                      VerticalAlignment="Center">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <StackPanel>
                                        <Image Name="img" Source="{Binding Owner.ExpandImage}"></Image>
                                        <Image Name="img1" Source="{Binding Owner.CollapseImage}" Visibility="Collapsed"></Image>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="img" />
                                            <Setter Property="Visibility" Value="Visible" TargetName="img1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>                                    
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" VerticalAlignment="Center"
                                  Visibility="{Binding Owner.MultiSelection, Converter={StaticResource boolToVisibilityCollapsedConverter}}"
                                  Name="PART_Check"></CheckBox>
                        <Label Padding="2,0,0,0" Content="{Binding Description}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"></Label>
                        <!--<Label Content="{Binding Owner.Name}"></Label>-->
                    </StackPanel>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NixxisComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Background="{DynamicResource FocusedBackgroundBrush}" BorderBrush="#5f5f5f" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2">
                                <ContentPresenter HorizontalAlignment="Stretch" Margin="3,3,23,3" x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  IsHitTestVisible="False"
                                                  TextElement.Foreground="{DynamicResource TextBrush}">
                                <ContentPresenter.Content>
                                    <TextBlock Name="NixxisTest" 
                                               Text="{Binding Path=SelectedText, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:NixxisComboBox}}, Converter={StaticResource debugConverter}}" 
                                               Foreground="{DynamicResource TextBrush}" 
                                               TextTrimming="CharacterEllipsis"
                                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                        <Border x:Name="HoverBorder" IsHitTestVisible="False" Opacity="0" BorderBrush="{StaticResource GlyphBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" />

                        <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="{DynamicResource LightBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="{DynamicResource NormalBorderBrush}" Foreground="{DynamicResource TextBrush}" CaretBrush="{DynamicResource TextBrush}"  />
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="3,3,3,3" />
                                <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource NuclearScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="grid" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="SelectionBoxItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="">
                    <StackPanel Orientation="Horizontal"
                                DataContext="{Binding Converter={StaticResource debugConverter}}">
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource NixxisScoreItemStyle}"></Setter>-->
        <!--<Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:NixxisScoreElement Label="{Binding Path=Label}"
                                              Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=Width}"
                                              Background="Transparent"
                                              HorizontalAlignment="Stretch"
                                              Length="{Binding Path=Length}"
                                              Value="{Binding Path=Value, Mode=TwoWay}" 
                                              ActiveImageSource="{Binding Path=ActiveImageSource}" 
                                              InactiveImageSource="{Binding Path=InactiveImageSource}">
                    </local:NixxisScoreElement>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

</ResourceDictionary>