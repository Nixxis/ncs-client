<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Nixxis.Client.Controls">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/NixxisWpfControls;component/Themes/ExpressionDark.xaml"/>
    </ResourceDictionary.MergedDictionaries>
       
    <Style TargetType="{x:Type local:NixxisSplitButton}">
        <Setter Property="Background" Value="{StaticResource FocusedBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="#5f5f5f"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NixxisSplitButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <!--Border that wraps the control-->
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="Border">

                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="PART_DefaultAction" Style="{TemplateBinding DefaultActionStyle}" Padding="2,0">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Source="{TemplateBinding ImageSource}" Visibility="{TemplateBinding ImageVisibility}" />
                                        <TextBlock Text="{TemplateBinding Text}" Visibility="{TemplateBinding TextVisibility}"></TextBlock>
                                    </StackPanel>
                                </Button>
                                <Button x:Name="PART_SelectAction" Style="{TemplateBinding DropDownButtonStyle}" Padding="1,0">
                                    <Path Name="path" Fill="Silver" Data="M 5,5 L 10,10 L 15,5 L 5,5" Width="10" Height="8" Stretch="Fill"/>
                                </Button>
                            </StackPanel>
                        </Border>

                        <Border x:Name="HoverBorder" IsHitTestVisible="False" Opacity="0" BorderBrush="{DynamicResource GlyphBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
                        <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasFocus" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" Value="{StaticResource SelectedFocusedBackgroundBrush}"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DefaultActionStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
                    <Setter Property="MinWidth" Value="10"/>
                    <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
                    <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
                    <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DropDownButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
                    <Setter Property="MinWidth" Value="5"/>
                    <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
                    <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
                    <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>